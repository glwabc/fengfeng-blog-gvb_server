{"data":[{"row":{"id":"","created_at":"2023-03-08 19:57:28","updated_at":"2023-03-08 19:57:28","title":"日志管理","keyword":"日志管理","abstract":"日志管理的文章","content":"![](https://secure2.wostatic.cn/static/gHHAi4rUfKomgxUkMyg3zt/image.png?auth_key=1678276617-8yofvbLeqx5cW5KGKJcoEq-0-45014d5f98347caae80f43f5be936a92)\n\n\n\n```Vue\n\u003ctemplate\u003e\n  \u003cdiv\u003e\n\n    \u003cGVBTable\n        :columns=\"data.columns\"\n        base-url=\"/api/logs\"\n        like-title=\"搜索日志名称\"\n        ref=\"gvbTable\"\n        :is-add=\"false\"\n        :is-edit=\"false\"\n        default-delete\n    \u003e\n      \u003ctemplate #cell=\"{column, record}\"\u003e\n        \u003ctemplate v-if=\"column.key === 'level'\"\u003e\n          \u003ca-tag :color=\"levelColor[record.level]\"\u003e{{ record.level }}\u003c/a-tag\u003e\n        \u003c/template\u003e\n      \u003c/template\u003e\n       \u003ctemplate #filters\u003e\n        \u003ca-select\n          class=\"gvb_select\"\n          v-model:value=\"level\"\n          style=\"width: 200px\"\n          allowClear\n          @change=\"onFilter\"\n          :options=\"levelOptions\"\n          placeholder=\"筛选日志等级\"\n      \u003e\u003c/a-select\u003e\n      \u003c/template\u003e\n    \u003c/GVBTable\u003e\n\n  \u003c/div\u003e\n\n\u003c/template\u003e\n\n\u003cscript setup\u003e\nimport GVBTable from \"@/components/admin/gvb_table.vue\"\nimport {reactive, ref} from \"vue\";\n\nconst levelColor = {\n  \"debug\": \"green\",\n  \"info\": \"blue\",\n  \"warn\": \"orange\",\n  \"error\": \"red\",\n}\n\nconst levelOptions = [\n  {label: \"debug\", value: 1,},\n  {label: \"info\", value: 2,},\n  {label: \"warn\", value: 3,},\n  {label: \"error\", value: 4,}\n]\nconst level = ref(undefined)\nconst gvbTable = ref(null)\n\nfunction onFilter(){\n  gvbTable.value.ExportList({level: level.value})\n}\n\nconst data = reactive({\n  columns: [\n    {title: 'id', dataIndex: 'id', key: 'id'},\n    {title: 'ip', dataIndex: 'ip', key: 'ip'},\n    {title: '地址', dataIndex: 'addr', key: 'addr'},\n    {title: '等级', dataIndex: 'level', key: 'level'},\n    {title: '内容', dataIndex: 'content', key: 'content'},\n    {title: '日志时间', dataIndex: 'created_at', key: 'created_at'},\n    {title: '操作', dataIndex: 'action', key: 'action'},\n  ],\n})\n\u003c/script\u003e\n```\n\n\n\n后端的一些bug\n\n1. swag，自定义类型不能识别\n\n```Go\ntype LogRequest struct {\n  models.PageInfo\n  Level log_stash.Level `form:\"level\"`\n}\n\n// LogListView 日志列表\n// @Tags 日志管理\n// @Summary 日志列表\n// @Description 日志列表\n// @Param data query LogRequest    false  \"查询参数\"\n// @Param level query int false \"日志等级\"\n// @Router /api/logs [get]\n// @Produce json\n// @Success 200 {object} res.Response{data=res.ListResponse[log_stash.LogStashModel]}\nfunc (LogApi) LogListView(c *gin.Context) {\n}\n```\n2. 分页查询，总条数问题","look_count":0,"comment_count":0,"digg_count":0,"collects_count":0,"user_id":1,"user_nick_name":"admin","user_avatar":"/uploads/avatar/default.png","category":"后台课程","source":"","link":"","banner_id":10,"banner_url":"/uploads/file/215953KgCPr.jpg","tags":["后台","日志"]},"id":"D9cVwYYBMeB77WN1XkY7"},{"row":{"id":"","created_at":"2023-03-08 19:45:42","updated_at":"2023-03-08 19:45:42","title":"13. 文章管理","keyword":"13. 文章管理","abstract":"后端增加了标签名称列表，文章分类列表","content":"## 文章列表\n\n![](https://secure2.wostatic.cn/static/unnCRvhg2ux4P7tYH1hDDE/image.png)\n\n\n\n后端增加了标签名称列表，文章分类列表\n\n\n\n注意事项：\n\n文章分类搜索应该注意还是不要走key这个参数去查询，不然 模糊匹配和分类搜索就只能二选一\n\n\n\n```Vue\n\u003ctemplate\u003e\n  \u003cdiv\u003e\n    \u003cGVBTable\n        :columns=\"data.columns\"\n        base-url=\"/api/articles\"\n        like-title=\"搜索文章标题\"\n        ref=\"gvbTable\"\n        default-delete\n    \u003e\n      \u003ctemplate #add\u003e\n        \u003ca-button type=\"primary\"\u003e添加\u003c/a-button\u003e\n      \u003c/template\u003e\n      \u003ctemplate #edit=\"{record}\"\u003e\n        \u003ca-button type=\"primary\"\u003e编辑\u003c/a-button\u003e\n      \u003c/template\u003e\n      \u003ctemplate #cell=\"{column, record, index }\"\u003e\n        \u003ctemplate v-if=\"column.key === 'index'\"\u003e\n          \u003cspan\u003e{{ index + 1 }}\u003c/span\u003e\n        \u003c/template\u003e\n        \u003ctemplate v-if=\"column.key === 'title'\"\u003e\n          \u003cspan class=\"gvb_article_title\" v-html=\"record.title\"\u003e\u003c/span\u003e\n        \u003c/template\u003e\n        \u003ctemplate v-if=\"column.key === 'banner_url'\"\u003e\n          \u003cimg :src=\"'/' + record.banner_url\" alt=\"\" height=\"60\" style=\"border-radius: 5px\"\u003e\n        \u003c/template\u003e\n        \u003ctemplate v-if=\"column.key === 'data'\"\u003e\n          \u003cdiv class=\"gvb_article_data\"\u003e\n            \u003cspan\u003e\u003ci class=\"fa fa-eye\"\u003e\u003c/i\u003e{{ record.look_count }}\u003c/span\u003e\n            \u003cspan\u003e\u003ci class=\"fa fa-thumbs-o-up\"\u003e\u003c/i\u003e{{ record.digg_count }}\u003c/span\u003e\n            \u003cspan\u003e\u003ci class=\"fa fa-comment-o\"\u003e\u003c/i\u003e{{ record.comment_count }}\u003c/span\u003e\n            \u003cspan\u003e\u003ci class=\"fa fa-star-o\"\u003e\u003c/i\u003e{{ record.collects_count }}\u003c/span\u003e\n          \u003c/div\u003e\n        \u003c/template\u003e\n        \u003ctemplate v-if=\"column.key === 'abstract'\"\u003e\n          \u003cspan class=\"gvb_article_abstract\"\u003e{{ record.abstract }}\u003c/span\u003e\n        \u003c/template\u003e\n        \u003ctemplate v-if=\"column.key === 'tags'\"\u003e\n          \u003cdiv class=\"gvb_article_tags\"\u003e\n            \u003ca-tag :color=\"getColor(i)\" v-for=\"(item, i) in record.tags\" :key=\"i\"\u003e{{ item }}\u003c/a-tag\u003e\n          \u003c/div\u003e\n        \u003c/template\u003e\n      \u003c/template\u003e\n\n      \u003ctemplate #filters\u003e\n        \u003ca-select\n            class=\"gvb_select\"\n            v-model:value=\"tag\"\n            style=\"width: 200px\"\n            allowClear\n            @change=\"onFilter\"\n            :options=\"data.tagOptions\"\n            placeholder=\"筛选文章标签\"\n        \u003e\u003c/a-select\u003e\n        \u003ca-select\n            class=\"gvb_select\"\n            v-model:value=\"category\"\n            style=\"width: 200px\"\n            allowClear\n            @change=\"onFilter\"\n            :options=\"data.categoryOptions\"\n            placeholder=\"筛选文章分类\"\n        \u003e\u003c/a-select\u003e\n      \u003c/template\u003e\n    \u003c/GVBTable\u003e\n  \u003c/div\u003e\n\u003c/template\u003e\n\n\u003cscript setup\u003e\nimport {getTagNameListApi} from \"@/api/tag_api\";\nimport {getCategoryListApi} from \"@/api/article_api\";\nimport {reactive, ref} from \"vue\";\nimport GVBTable from \"@/components/admin/gvb_table.vue\"\n\nconst tag = ref(null)\nconst category = ref(null)\nconst gvbTable = ref(null)\nconst data = reactive({\n  list: [\n    {\n      \"abstract\": \"需要一个全局变量，用于保存配置文件，存放在global目录下\",\n      \"banner_id\": 3,\n      \"banner_url\": \"uploads/file/29.jpg\",\n      \"category\": \"p1\",\n      \"collects_count\": 0,\n      \"comment_count\": 0,\n      \"created_at\": \"2023-02-24 21:21:29\",\n      \"digg_count\": 0,\n      \"id\": \"P46Vg4YB6uoytGZA-bE7\",\n      \"look_count\": 0,\n      \"tags\": [\n        \"golang\",\n        \"后端\",\n        \"教程\",\n      ],\n      \"title\": \"后端项目搭建\",\n      \"updated_at\": \"2023-02-24 21:31:13\",\n      \"user_avatar\": \"/uploads/avatar/default.png\",\n      \"user_id\": 1,\n      \"user_nick_name\": \"admin\"\n    },\n  ],\n  columns: [\n    // {title: 'id', dataIndex: 'id', key: 'id'},\n    {title: 'Index', dataIndex: 'index', key: 'index'},\n    {title: '文章标题', dataIndex: 'title', key: 'title'},\n    {title: '文章分类', dataIndex: 'category', key: 'category'},\n    {title: '文章简介', dataIndex: 'abstract', key: 'abstract'},\n    {title: '作者', dataIndex: 'user_nick_name', key: 'user_nick_name'},\n    {title: '封面', dataIndex: 'banner_url', key: 'banner_url'},\n    {title: '文章数据', dataIndex: 'data', key: 'data'},\n    // {title: '浏览量', dataIndex: 'look_count', key: 'look_count'},\n    // {title: '点赞', dataIndex: 'digg_count', key: 'digg_count'},\n    // {title: '评论', dataIndex: 'comment_count', key: 'comment_count'},\n    // {title: '收藏', dataIndex: 'collects_count', key: 'collects_count'},\n    {title: '标签', dataIndex: 'tags', key: 'tags'},\n    {title: '发布时间', dataIndex: 'created_at', key: 'created_at'},\n    {title: '操作', dataIndex: 'action', key: 'action'},\n  ],\n  tagOptions: [],\n  categoryOptions: []\n})\n\nconst colorList = [\"red\", \"blue\", \"green\", \"purple\", \"cyan\", \"orange\", \"pink\"]\n\nfunction getColor(index) {\n  return colorList[index]\n}\n\nfunction onFilter() {\n  gvbTable.value.ExportList({tag: tag.value, key: category.value})\n}\n\nasync function getData() {\n  let res = await getTagNameListApi()\n  data.tagOptions = res.data\n  let c = await getCategoryListApi()\n  data.categoryOptions = c.data\n}\n\ngetData()\n\n\u003c/script\u003e\n\n\u003cstyle lang=\"scss\"\u003e\n.gvb_article_data {\n  span {\n    margin-right: 7px;\n\n    i {\n      margin-right: 3px;\n    }\n\n    \u0026:last-child {\n      margin-right: 0;\n    }\n  }\n}\n\n.gvb_article_abstract {\n  max-width: 12rem;\n  overflow-x: hidden;\n  display: inline-block;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n.gvb_article_tags {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-column-gap: 10px;\n  grid-row-gap: 10px;\n  justify-items: self-start;\n}\n\n.gvb_article_title {\n  em {\n    color: red;\n    margin-right: 1px;\n  }\n}\n\u003c/style\u003e\n```\n\n\n\n\n\n## 文章添加\n\nmarkdown组件选择\n\n\n\n1. 主题切换\n2. 图片上传\n3. 粘贴图片上传\n4. ctrl s打开侧边栏\n\n\n\n\n\n```Vue\nnpm i md-editor-v3\n```\n\n\n\n\n\n### 主题切换\n\n![](http://python.fengfengzhidao.com/pic/20230307232533.png)\n\n\n\n![](http://python.fengfengzhidao.com/pic/20230307232551.png)\n\n\n\n监听store里面的主题变化\n\n```Vue\n\u003ctemplate\u003e\n  \u003cmd-editor v-model=\"data.content\" :theme=\"theme\"/\u003e\n\u003c/template\u003e\n\n\u003cscript setup\u003e\nimport {reactive, ref, watch} from 'vue';\nimport {useStore} from \"@/stores/store\";\nimport MdEditor from 'md-editor-v3';\nimport 'md-editor-v3/lib/style.css';\n\nconst store = useStore()\nconst theme = ref(\"dark\")\n\nconst data = reactive({\n  content: \"hello fengfeng\",\n})\n\nwatch(() =\u003e store.theme, (themeVal) =\u003e {\n  theme.value = themeVal ? \"\" : \"dark\"\n}, {immediate: true}) // 初始化就执行回调\n\n\u003c/script\u003e\n\n\u003cstyle scoped\u003e\n.md-editor-dark {\n  --md-color: #999;\n  --md-hover-color: #bbb;\n  --md-bk-color: #141414;  // 自己改的黑夜颜色\n  --md-bk-color-outstand: #111;\n  --md-bk-hover-color: #1b1a1a;\n  --md-border-color: #2d2d2d;\n  --md-border-hover-color: #636262;\n  --md-border-active-color: #777;\n  --md-modal-mask: #00000073;\n  --md-scrollbar-bg-color: #0f0f0f;\n  --md-scrollbar-thumb-color: #2d2d2d;\n  --md-scrollbar-thumb-hover-color: #3a3a3a;\n  --md-scrollbar-thumb-active-color: #3a3a3a;\n}\n\n// 高度\n.md-editor {\n  height: calc(100vh - 130px);\n}\n\u003c/style\u003e\n\n\n```\n\n\n\n\n\n### 图片上传\n\n\n\n\n\n自带了从剪贴板上传图片的功能\n\n![](http://python.fengfengzhidao.com/pic/20230307235345.png)\n\n```Vue\n\u003ctemplate\u003e\n  \u003cmd-editor v-model=\"data.content\"  @on-upload-img=\"onUploadImg\"/\u003e\n\u003c/template\u003e\n\n\u003cscript setup\u003e\nimport {reactive} from 'vue';\nimport MdEditor from 'md-editor-v3';\nimport {uploadImageApi} from \"@/api/image_api\";\nimport 'md-editor-v3/lib/style.css';\n\nconst data = reactive({\n  content: \"hello fengfeng\",\n})\nconst onUploadImg = async (files, callback) =\u003e {\n  const res = await Promise.all(\n      files.map((file) =\u003e {\n        return uploadImageApi(file)\n      })\n  );\n  callback(res.map((item) =\u003e item.data));\n};\n\n\u003c/script\u003e\n\n```\n\n\n\nimage_api.js\n\n```Vue\nexport function uploadImageApi(file) {\n    return new Promise((resolve, reject) =\u003e {\n        const form = new FormData();\n        form.append('image', file);\n        Service.post(\"/api/image\", form, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }).then((res) =\u003e resolve(res))\n            .catch((error) =\u003e reject(error));\n    })\n}\n```\n\n","look_count":0,"comment_count":0,"digg_count":0,"collects_count":0,"user_id":1,"user_nick_name":"admin","user_avatar":"/uploads/avatar/default.png","category":"后台课程","source":"","link":"","banner_id":10,"banner_url":"/uploads/file/215953KgCPr.jpg","tags":["前端","后台"]},"id":"B9cKwYYBMeB77WN1l0bs"},{"row":{"id":"","created_at":"2023-03-08 20:37:46","updated_at":"2023-03-08 20:37:46","title":"广告管理","keyword":"广告管理","abstract":"\n\n\n\n\n\n在base_api.js中，统一给get列表页请求加一个headers\n\nexport function baseListApi(url, params) {\nreturn Service","content":"![](http://python.fengfengzhidao.com/pic/20230305152421.png)\n\n\n\n![](http://python.fengfengzhidao.com/pic/20230305152453.png)\n\n\n\n![](http://python.fengfengzhidao.com/pic/20230305152507.png)\n\n\n\n在base_api.js中，统一给get列表页请求加一个headers\n\n```Vue\nexport function baseListApi(url, params) {\nreturn Service.get(url, {params, headers:{\n  Gvb_referer: \"admin\"\n  }})\n}\n```\n\n原因是因为referer没法在前端配置\n\n\n\n## 广告列表\n\n```Vue\n\u003ctemplate\u003e\n  \u003cdiv\u003e\n    \u003cGVBTable\n        :columns=\"data.columns\"\n        base-url=\"/api/adverts\"\n        like-title=\"搜索广告名称\"\n        ref=\"gvbTable\"\n        default-delete\n    \u003e\n      \u003ctemplate #add\u003e\n        \u003ca-button type=\"primary\" \u003e添加\u003c/a-button\u003e\n      \u003c/template\u003e\n      \u003ctemplate #edit=\"{record}\"\u003e\n        \u003ca-button type=\"primary\"\u003e编辑\u003c/a-button\u003e\n      \u003c/template\u003e\n      \u003ctemplate #cell=\"{column, record}\"\u003e\n        \u003ctemplate v-if=\"column.key === 'images'\"\u003e\n          \u003cimg :src=\"record.images\" alt=\"\" height=\"60\" style=\"border-radius: 5px\"\u003e\n        \u003c/template\u003e\n        \u003ctemplate v-if=\"column.key === 'is_show'\"\u003e\n          \u003ca-tag v-if=\"record.is_show\" color=\"green\"\u003e显示\u003c/a-tag\u003e\n          \u003ca-tag v-else color=\"red\"\u003e不显示\u003c/a-tag\u003e\n        \u003c/template\u003e\n        \u003ctemplate v-if=\"column.key === 'href'\"\u003e\n          \u003cspan\u003e{{ record.href }}\u003c/span\u003e\n          \u003ca-button type=\"link\" target=\"_blank\" :href=\"record.href\"\u003e访问\u003c/a-button\u003e\n        \u003c/template\u003e\n      \u003c/template\u003e\n    \u003c/GVBTable\u003e\n  \u003c/div\u003e\n\u003c/template\u003e\n\n\u003cscript setup\u003e\nimport {reactive} from \"vue\";\n\nconst data = reactive({\n  columns: [\n    {title: 'id', dataIndex: 'id', key: 'id'},\n    {title: '广告标题', dataIndex: 'title', key: 'title'},\n    {title: '图片路径', dataIndex: 'images', key: 'images'},\n    {title: '跳转地址', dataIndex: 'href', key: 'href'},\n    {title: '是否显示', dataIndex: 'is_show', key: 'is_show'},\n    {title: '添加时间', dataIndex: 'created_at', key: 'created_at'},\n    {title: '操作', dataIndex: 'action', key: 'action'},\n  ],\n})\n\u003c/script\u003e\n```\n\n\n\n## 添加广告，编辑广告\n\n```Vue\n\u003ctemplate\u003e\n  \u003cdiv\u003e\n    \u003ca-modal :title=\"editID ? '编辑广告' : '添加广告'\" v-model:visible=\"data.visible\" @ok=\"handleOK\"\u003e\n      \u003ca-form\n          :model=\"state\"\n          name=\"basic\"\n          ref=\"formRef\"\n          :label-col=\"{ span: 4 }\"\n          :wrapper-col=\"{ span: 20 }\"\n          autocomplete=\"off\"\n      \u003e\n        \u003ca-form-item label=\"广告名称\" name=\"title\" has-feedback\n                     :rules=\"[{ required: true, message: '请输入广告名称' ,trigger: 'blur'}]\"\u003e\n          \u003ca-input v-model:value=\"state.title\" placeholder=\"广告名称\"/\u003e\n        \u003c/a-form-item\u003e\n        \u003ca-form-item label=\"广告链接\" name=\"href\" has-feedback\n                     :rules=\"[{ required: true, message: '请输入广告链接' ,trigger: 'blur'}, {validator: checkUrl, message: 'url不合法', trigger: 'blur'}]\"\u003e\n          \u003ca-input v-model:value=\"state.href\" placeholder=\"广告链接\"/\u003e\n        \u003c/a-form-item\u003e\n        \u003ca-form-item label=\"图片地址\" name=\"images\" has-feedback\n                     :rules=\"[{ required: true, message: '请输入图片地址' ,trigger: 'blur'}]\"\u003e\n          \u003ca-input v-model:value=\"state.images\" placeholder=\"图片地址\"/\u003e\n        \u003c/a-form-item\u003e\n        \u003ca-form-item label=\"是否显示\" name=\"is_show\"\u003e\n          \u003ca-switch v-model:checked=\"state.is_show\"/\u003e\n        \u003c/a-form-item\u003e\n        \u003ca-form-item label=\"图片预览\"\u003e\n          \u003cimg :src=\"state.images\" height=\"60\" style=\"border-radius: 5px\" alt=\"\"\u003e\n        \u003c/a-form-item\u003e\n      \u003c/a-form\u003e\n    \u003c/a-modal\u003e\n\n    \u003cGVBTable\n        :columns=\"data.columns\"\n        base-url=\"/api/adverts\"\n        like-title=\"搜索广告名称\"\n        ref=\"gvbTable\"\n        default-delete\n    \u003e\n      \u003ctemplate #add\u003e\n        \u003ca-button type=\"primary\" @click=\"addModal\"\u003e添加\u003c/a-button\u003e\n      \u003c/template\u003e\n      \u003ctemplate #edit=\"{record}\"\u003e\n        \u003ca-button type=\"primary\" @click=\"updateModal(record)\"\u003e编辑\u003c/a-button\u003e\n      \u003c/template\u003e\n      \u003ctemplate #cell=\"{column, record}\"\u003e\n        \u003ctemplate v-if=\"column.key === 'images'\"\u003e\n          \u003cimg :src=\"record.images\" alt=\"\" height=\"60\" style=\"border-radius: 5px\"\u003e\n        \u003c/template\u003e\n        \u003ctemplate v-if=\"column.key === 'is_show'\"\u003e\n          \u003ca-tag v-if=\"record.is_show\" color=\"green\"\u003e显示\u003c/a-tag\u003e\n          \u003ca-tag v-else color=\"red\"\u003e不显示\u003c/a-tag\u003e\n        \u003c/template\u003e\n        \u003ctemplate v-if=\"column.key === 'href'\"\u003e\n          \u003cspan\u003e{{ record.href }}\u003c/span\u003e\n          \u003ca-button type=\"link\" target=\"_blank\" :href=\"record.href\"\u003e访问\u003c/a-button\u003e\n        \u003c/template\u003e\n      \u003c/template\u003e\n    \u003c/GVBTable\u003e\n  \u003c/div\u003e\n\n\u003c/template\u003e\n\n\u003cscript setup\u003e\nimport GVBTable from \"@/components/admin/gvb_table.vue\"\nimport {reactive, ref} from \"vue\";\nimport {message} from \"ant-design-vue\";\nimport {createAdvertApi, updateAdvertApi} from \"@/api/advert_api\";\n\nconst gvbTable = ref(null)\nconst formRef = ref(null)\nconst editID = ref(0)\n\nconst _state = {\n  href: \"\",\n  images: \"\",\n  is_show: true,\n  title: \"\"\n}\nconst state = reactive({\n  href: \"\",\n  images: \"\",\n  is_show: true,\n  title: \"\"\n})\n\nlet checkUrl = async (_rule, value) =\u003e {\n  try {\n    new URL(value)\n    return Promise.resolve()\n  } catch (err) {\n    return Promise.reject('不合法的url');\n  }\n};\n\n\nconst data = reactive({\n  columns: [\n    {title: 'id', dataIndex: 'id', key: 'id'},\n    {title: '广告标题', dataIndex: 'title', key: 'title'},\n    {title: '图片路径', dataIndex: 'images', key: 'images'},\n    {title: '跳转地址', dataIndex: 'href', key: 'href'},\n    {title: '是否显示', dataIndex: 'is_show', key: 'is_show'},\n    {title: '添加时间', dataIndex: 'created_at', key: 'created_at'},\n    {title: '操作', dataIndex: 'action', key: 'action'},\n  ],\n  visible: false,\n  modalVisible: false,\n  fileList: []\n})\n\nasync function handleOK() {\n  let res\n  if (editID){\n    res = await updateAdvertApi(editID.value, state)\n  }else {\n    res = await createAdvertApi(state)\n  }\n\n  if (res.code) {\n    message.error(res.msg)\n    return\n  }\n  message.success(res.msg)\n  data.visible = false\n  Object.assign(state, _state)\n  gvbTable.value.ExportList()\n  return\n}\n\nfunction updateModal(record) {\n  editID.value = record.id\n  state.title = record.title\n  state.href = record.href\n  state.images = record.images\n  state.is_show = record.is_show\n  data.visible = true\n}\n\nfunction addModal() {\n  data.visible = true\n  editID.value = 0\n  Object.assign(state, _state)\n}\n\u003c/script\u003e\n```\n\n\n\n接口\n\n```Vue\nimport {Service} from \"@/services/service\";\n// 发布广告\nexport function createAdvertApi(data){\n    return Service.post(\"/api/adverts\", data)\n}\n// 更新广告\nexport function updateAdvertApi(id, data){\n    return Service.put(\"/api/adverts/\" + id, data)\n}\n```","look_count":0,"comment_count":0,"digg_count":0,"collects_count":0,"user_id":1,"user_nick_name":"admin","user_avatar":"/uploads/avatar/default.png","category":"后台课程","source":"","link":"","banner_id":13,"banner_url":"/uploads/file/000824Cv7Q4.jpg","tags":["后台"]},"id":"Ftc6wYYBMeB77WN1QkbM"},{"row":{"id":"","created_at":"2023-03-08 20:42:49","updated_at":"2023-03-08 22:38:44","title":"图片管理","keyword":"图片管理","abstract":"这是图片管理的简介","content":"![](http://python.fengfengzhidao.com/pic/20230304210958.png)\n\n\n\n![](http://python.fengfengzhidao.com/pic/20230304211008.png)\n\n\n\n![](http://python.fengfengzhidao.com/pic/20230304211025.png)\n\n\n\n\n\n```Vue\n\u003ctemplate\u003e\n  \u003cdiv\u003e\n\n    \u003ca-modal title=\"上传图片\" v-model:visible=\"data.visible\" @ok=\"uploadComplete\"\u003e\n      \u003ca-upload\n          v-model:file-list=\"data.fileList\"\n          action=\"/api/images\"\n          list-type=\"picture-card\"\n          name=\"images\"\n          multiple\n          :headers=\"{token: store.userInfo.token}\"\n      \u003e\n        \u003ci class=\"fa fa-cloud-upload\"\u003e\u003c/i\u003e\n        \u003cdiv style=\"margin-left: 5px\"\u003e上传图片\u003c/div\u003e\n      \u003c/a-upload\u003e\n    \u003c/a-modal\u003e\n\n    \u003ca-modal title=\"编辑图片\" v-model:visible=\"data.modalVisible\" @ok=\"update\"\u003e\n      \u003ca-form\n          :model=\"updateState\"\n          name=\"basic\"\n          ref=\"formRef\"\n          :label-col=\"{ span: 4 }\"\n          :wrapper-col=\"{ span: 20 }\"\n          autocomplete=\"off\"\n      \u003e\n        \u003ca-form-item label=\"文件名称\" name=\"name\" has-feedback\n                     :rules=\"[{ required: true, message: '请输入文件名' ,trigger: 'blur'}]\"\u003e\n          \u003ca-input v-model:value=\"updateState.name\" placeholder=\"用户名\"/\u003e\n        \u003c/a-form-item\u003e\n        \u003ca-form-item label=\"图片预览\"\u003e\n          \u003cimg :src=\"updateState.path\" height=\"80\" style=\"border-radius: 5px\" alt=\"\"\u003e\n        \u003c/a-form-item\u003e\n      \u003c/a-form\u003e\n    \u003c/a-modal\u003e\n\n    \u003cGVBTable\n        :columns=\"data.columns\"\n        base-url=\"/api/images\"\n        like-title=\"搜索图片名称\"\n        ref=\"gvbTable\"\n        default-delete\n    \u003e\n      \u003ctemplate #add\u003e\n        \u003ca-button type=\"primary\" @click=\"data.visible = true\"\u003e添加\u003c/a-button\u003e\n      \u003c/template\u003e\n      \u003ctemplate #edit=\"{record}\"\u003e\n        \u003ca-button type=\"primary\" @click=\"updateModal(record)\"\u003e编辑\u003c/a-button\u003e\n      \u003c/template\u003e\n      \u003ctemplate #cell=\"{column, record}\"\u003e\n        \u003ctemplate v-if=\"column.key === 'path'\"\u003e\n          \u003cimg :src=\"record.path\" alt=\"\" height=\"60\" style=\"border-radius: 5px\"\u003e\n        \u003c/template\u003e\n      \u003c/template\u003e\n    \u003c/GVBTable\u003e\n    \n  \u003c/div\u003e\n\n\u003c/template\u003e\n\n\u003cscript setup\u003e\nimport GVBTable from \"@/components/admin/gvb_table.vue\"\nimport {reactive, ref} from \"vue\";\nimport {imageRenameApi} from \"@/api/image_api\";\nimport {message} from \"ant-design-vue\";\nimport {useStore} from \"@/stores/store\";\n\nconst store = useStore()\nconst gvbTable = ref(null)\nconst formRef = ref(null)\nconst data = reactive({\n  columns: [\n    {title: 'id', dataIndex: 'id', key: 'id'},\n    {title: '图片名称', dataIndex: 'name', key: 'name'},\n    {title: '路径', dataIndex: 'path', key: 'path'},\n    {title: '类型', dataIndex: 'image_type', key: 'image_type'},\n    {title: '上传时间', dataIndex: 'created_at', key: 'created_at'},\n    {title: '操作', dataIndex: 'action', key: 'action'},\n  ],\n  visible: false,\n  modalVisible: false,\n  fileList: []\n})\n\nconst updateState = reactive({\n  id: 0,\n  name: \"\",\n  path: \"\"\n})\n\n// 打开模态框的操作\nfunction updateModal(record) {\n  data.modalVisible = true\n  updateState.id = record.id\n  updateState.name = record.name\n  updateState.path = record.path\n}\n\n// 修改图片的名称\nasync function update() {\n  try {\n    await formRef.value.validate()\n    let res = await imageRenameApi(updateState)\n    if (res.code) {\n      message.error(res.msg)\n      return\n    }\n    message.success(res.msg)\n    data.modalVisible = false\n    gvbTable.value.ExportList()\n\n  } catch (e) {\n\n  }\n}\n\nfunction uploadComplete(){\n  data.visible = false\n  gvbTable.value.ExportList()\n}\n\u003c/script\u003e\n```","look_count":0,"comment_count":0,"digg_count":0,"collects_count":0,"user_id":1,"user_nick_name":"admin","user_avatar":"/uploads/avatar/default.png","category":"后台课程","source":"枫枫知道","link":"","banner_id":17,"banner_url":"/uploads/file/165914XyhES.jpg","tags":["后台"]},"id":"INc-wYYBMeB77WN14UZN"},{"row":{"id":"","created_at":"2023-03-08 19:58:45","updated_at":"2023-03-08 22:51:09","title":"菜单管理","keyword":"菜单管理","abstract":"select显示图片\n\u003ca-select\n    ref=\"select\"\n    v-model:value=\"bannerIDList\"\n    placeholder=\"选择ban","content":"![](http://python.fengfengzhidao.com/pic/20230305181541.png)\n\n\n\n![](http://python.fengfengzhidao.com/pic/20230305181558.png)\n\n\n\n![](http://python.fengfengzhidao.com/pic/20230305181612.png)\n\n\n\n\n\n## select显示图片\n\n```Vue\n\u003ca-select\n    ref=\"select\"\n    v-model:value=\"bannerIDList\"\n    placeholder=\"选择banner\"\n    mode=\"multiple\"\n    @change=\"bannerChange\"\n\u003e\n  \u003ca-select-option :value=\"item.id\" v-for=\"item in data.imageNameList\" :key=\"item.id\"\u003e\n    \u003cimg :src=\"item.path\" alt=\"\" height=\"30\" style=\"border-radius: 5px; margin-right: 10px\"\u003e\n    \u003cspan\u003e{{ item.name }}\u003c/span\u003e\n  \u003c/a-select-option\u003e\n  \u003ctemplate #tagRender=\"{ value: val, label, closable, onClose, option }\"\u003e\n    \u003cimg :src=\"getLabel(label)\" height=\"30\" style=\"border-radius: 5px; margin-right: 5px\"/\u003e\n  \u003c/template\u003e\n\u003c/a-select\u003e\n       \n\n\u003cscript setup\u003e\nimport GVBTable from \"@/components/admin/gvb_table.vue\"\nimport {reactive, ref} from \"vue\";\nimport {imageNameListApi} from \"@/api/image_api\";\nimport {createMenuApi, updateMenuApi} from \"@/api/menu_api\";\nimport {message} from \"ant-design-vue\";\n\nconst bannerIDList = ref([])\n\nconst state = reactive({\n  image_sort_list: []\n})\n\n// 获取图片数据\nasync function getData() {\n  let res = await imageNameListApi()\n  data.imageNameList = res.data\n}\n\n// 选中之后的回显\nfunction getLabel(label) {\n  return label[0].props.src\n}\n\n// 选择菜单图片\nfunction bannerChange(idList) {\n  state.image_sort_list = []\n  for (let i = 0; i \u003c idList.length; i++) {\n    state.image_sort_list.push({\n      image_id: idList[i],\n      sort: i\n    })\n  }\n}\ngetData()\nconst data = reactive({\n  imageNameList: []\n})\n\n\u003c/script\u003e\n```\n\nbanner的先后顺序，就是点击的顺序\n\n\n\n\n\n## 添加菜单，更新菜单\n\nabstract是一个字符串，添加之前，要变成列表\n\n添加完成之后，两个都要清空\n\nimage_sort_list是用户改变banner的时候进行修改的\n\n```Vue\n\n\u003ca-modal :title=\"editID ? '编辑菜单' : '添加菜单'\" v-model:visible=\"data.visible\" @ok=\"handleOK\"\n\u003e\n  \u003ca-form\n      :model=\"state\"\n      name=\"basic\"\n      ref=\"formRef\"\n      :label-col=\"{ span: 4 }\"\n      :wrapper-col=\"{ span: 20 }\"\n      autocomplete=\"off\"\n  \u003e\n    \u003ca-form-item label=\"菜单名称\" name=\"title\" has-feedback\n                 :rules=\"[{ required: true, message: '请输入菜单名称' ,trigger: 'blur'}]\"\u003e\n      \u003ca-input v-model:value=\"state.title\" placeholder=\"菜单名称\"/\u003e\n    \u003c/a-form-item\u003e\n    \u003ca-form-item label=\"菜单路径\" name=\"path\" has-feedback\n                 :rules=\"[{ required: true, message: '请输入菜单路径' ,trigger: 'blur'}]\"\u003e\n      \u003ca-input v-model:value=\"state.path\" placeholder=\"菜单路径\"/\u003e\n    \u003c/a-form-item\u003e\n    \u003ca-form-item label=\"slogan\" name=\"slogan\" has-feedback\u003e\n      \u003ca-input v-model:value=\"state.slogan\" placeholder=\"slogan\"/\u003e\n    \u003c/a-form-item\u003e\n    \u003ca-form-item label=\"菜单简介\" name=\"abstract\" has-feedback\u003e\n      \u003ca-textarea\n          v-model:value=\"state_abstract\"\n          placeholder=\"菜单简介,多个简介用换行分隔\"\n          :auto-size=\"{ minRows: 2, maxRows: 5 }\"\n      /\u003e\n    \u003c/a-form-item\u003e\n    \u003ca-form-item label=\"banner时间\" name=\"banner_time\" has-feedback\u003e\n      \u003ca-input-number v-model:value=\"state.banner_time\" placeholder=\"banner时间\"/\u003e\n    \u003c/a-form-item\u003e\n    \u003ca-form-item label=\"简介时间\" name=\"abstract_time\" has-feedback\u003e\n      \u003ca-input-number v-model:value=\"state.abstract_time\" placeholder=\"简介时间\"/\u003e\n    \u003c/a-form-item\u003e\n    \u003ca-form-item label=\"序号\" name=\"sort\" has-feedback\u003e\n      \u003ca-input-number v-model:value=\"state.sort\" placeholder=\"序号\"/\u003e\n    \u003c/a-form-item\u003e\n\n    \u003ca-form-item label=\"banner选择\"\u003e\n      \u003ca-select\n          ref=\"select\"\n          v-model:value=\"bannerIDList\"\n          placeholder=\"选择banner\"\n          mode=\"multiple\"\n          @change=\"bannerChange\"\n      \u003e\n        \u003ca-select-option :value=\"item.id\" v-for=\"item in data.imageNameList\" :key=\"item.id\"\u003e\n          \u003cimg :src=\"item.path\" alt=\"\" height=\"30\" style=\"border-radius: 5px; margin-right: 10px\"\u003e\n          \u003cspan\u003e{{ item.name }}\u003c/span\u003e\n        \u003c/a-select-option\u003e\n        \u003ctemplate #tagRender=\"{ value: val, label, closable, onClose, option }\"\u003e\n          \u003cimg :src=\"getLabel(label)\" height=\"30\" style=\"border-radius: 5px; margin-right: 5px\"/\u003e\n        \u003c/template\u003e\n      \u003c/a-select\u003e\n    \u003c/a-form-item\u003e\n\n  \u003c/a-form\u003e\n\n\u003c/a-modal\u003e\n\n   \n\u003cscript setup\u003e\nimport GVBTable from \"@/components/admin/gvb_table.vue\"\nimport {reactive, ref} from \"vue\";\nimport {imageNameListApi} from \"@/api/image_api\";\nimport {createMenuApi, updateMenuApi} from \"@/api/menu_api\";\nimport {message} from \"ant-design-vue\";\n\nconst state_abstract = ref(\"\")\nconst bannerIDList = ref([])\nconst _state = {\n  abstract_time: 7,\n  banner_time: 7,\n  path: \"\",\n  slogan: \"\",\n  sort: 0,\n  title: \"\",\n  abstract: [],\n  image_sort_list: []\n}\nconst state = reactive({\n  abstract_time: 7,\n  banner_time: 7,\n  path: \"\",\n  slogan: \"\",\n  sort: 0,\n  title: \"\",\n  abstract: [],\n  image_sort_list: []\n})\nconst formRef = ref(null)\n\n// 获取图片数据\nasync function getData() {\n  let res = await imageNameListApi()\n  data.imageNameList = res.data\n}\n\n// 选中之后的回显\nfunction getLabel(label) {\n  return label[0].props.src\n}\n// 添加菜单，更新菜单\nasync function handleOK() {\n  try {\n    formRef.value.validate()\n  } catch (e) {\n    return\n  }\n  state.abstract = state_abstract.value.split(\"\\n\")\n  let res\n\n  if (editID.value) {\n    res = await updateMenuApi(editID.value, state)\n  } else {\n    res = await createMenuApi(state)\n  }\n\n  if (res.code) {\n    message.error(res.msg)\n    return\n  }\n  state_abstract.value = \"\"\n  bannerIDList.value = []\n  data.visible = false\n  message.success(res.msg)\n  gvbTable.value.ExportList()\n  return\n}\n\n// 选择菜单图片\nfunction bannerChange(idList) {\n  state.image_sort_list = []\n  for (let i = 0; i \u003c idList.length; i++) {\n    state.image_sort_list.push({\n      image_id: idList[i],\n      sort: i\n    })\n  }\n\n}\n\ngetData()\nconst gvbTable = ref(null)\nconst editID = ref(0)\nconst data = reactive({\n  visible: false,\n  imageNameList: []\n})\n\nfunction addMenu() {\n  editID.value = 0\n  data.visible = true\n  Object.assign(state, _state)\n}\n\nfunction updateModal(record) {\n  editID.value = record.id\n  state.abstract_time = record.abstract_time\n  state.banner_time = record.banner_time\n  state.path = record.path\n  state.slogan = record.slogan\n  state.sort = record.sort\n  state.title = record.title\n\n  state.abstract = record.abstract\n  state_abstract.value = record.abstract.join(\"\\n\")\n\n  bannerIDList.value = []\n  state.image_sort_list = []\n  for (let i = 0; i \u003c record.banners.length; i++) {\n    bannerIDList.value.push(record.banners[i].id)\n    state.image_sort_list.push({\n      image_id: record.banners[i].id,\n      sort: i\n    })\n  }\n  data.visible = true\n}\n\n\u003c/script\u003e\n```\n\n\n\n## 图片按照一行三列排\n\n```Vue\ndisplay: grid; \ngrid-template-columns: repeat(3, 1fr);\ngrid-column-gap: 5px; \ngrid-row-gap: 5px;\n```\n\n\n\n![](http://python.fengfengzhidao.com/pic/20230305182032.png)\n\n\n\n完整代码\n\n```Vue\n\u003ctemplate\u003e\n  \u003cdiv\u003e\n\n    \u003ca-modal :title=\"editID ? '编辑菜单' : '添加菜单'\" v-model:visible=\"data.visible\" @ok=\"handleOK\"\n    \u003e\n      \u003ca-form\n          :model=\"state\"\n          name=\"basic\"\n          ref=\"formRef\"\n          :label-col=\"{ span: 4 }\"\n          :wrapper-col=\"{ span: 20 }\"\n          autocomplete=\"off\"\n      \u003e\n        \u003ca-form-item label=\"菜单名称\" name=\"title\" has-feedback\n                     :rules=\"[{ required: true, message: '请输入菜单名称' ,trigger: 'blur'}]\"\u003e\n          \u003ca-input v-model:value=\"state.title\" placeholder=\"菜单名称\"/\u003e\n        \u003c/a-form-item\u003e\n        \u003ca-form-item label=\"菜单路径\" name=\"path\" has-feedback\n                     :rules=\"[{ required: true, message: '请输入菜单路径' ,trigger: 'blur'}]\"\u003e\n          \u003ca-input v-model:value=\"state.path\" placeholder=\"菜单路径\"/\u003e\n        \u003c/a-form-item\u003e\n        \u003ca-form-item label=\"slogan\" name=\"slogan\" has-feedback\u003e\n          \u003ca-input v-model:value=\"state.slogan\" placeholder=\"slogan\"/\u003e\n        \u003c/a-form-item\u003e\n        \u003ca-form-item label=\"菜单简介\" name=\"abstract\" has-feedback\u003e\n          \u003ca-textarea\n              v-model:value=\"state_abstract\"\n              placeholder=\"菜单简介,多个简介用换行分隔\"\n              :auto-size=\"{ minRows: 2, maxRows: 5 }\"\n          /\u003e\n        \u003c/a-form-item\u003e\n        \u003ca-form-item label=\"banner时间\" name=\"banner_time\" has-feedback\u003e\n          \u003ca-input-number v-model:value=\"state.banner_time\" placeholder=\"banner时间\"/\u003e\n        \u003c/a-form-item\u003e\n        \u003ca-form-item label=\"简介时间\" name=\"abstract_time\" has-feedback\u003e\n          \u003ca-input-number v-model:value=\"state.abstract_time\" placeholder=\"简介时间\"/\u003e\n        \u003c/a-form-item\u003e\n        \u003ca-form-item label=\"序号\" name=\"sort\" has-feedback\u003e\n          \u003ca-input-number v-model:value=\"state.sort\" placeholder=\"序号\"/\u003e\n        \u003c/a-form-item\u003e\n\n        \u003ca-form-item label=\"banner选择\"\u003e\n          \u003ca-select\n              ref=\"select\"\n              v-model:value=\"bannerIDList\"\n              placeholder=\"选择banner\"\n              mode=\"multiple\"\n              @change=\"bannerChange\"\n          \u003e\n            \u003ca-select-option :value=\"item.id\" v-for=\"item in data.imageNameList\" :key=\"item.id\"\u003e\n              \u003cimg :src=\"item.path\" alt=\"\" height=\"30\" style=\"border-radius: 5px; margin-right: 10px\"\u003e\n              \u003cspan\u003e{{ item.name }}\u003c/span\u003e\n            \u003c/a-select-option\u003e\n            \u003ctemplate #tagRender=\"{ value: val, label, closable, onClose, option }\"\u003e\n              \u003cimg :src=\"getLabel(label)\" height=\"30\" style=\"border-radius: 5px; margin-right: 5px\"/\u003e\n            \u003c/template\u003e\n          \u003c/a-select\u003e\n        \u003c/a-form-item\u003e\n\n      \u003c/a-form\u003e\n\n    \u003c/a-modal\u003e\n\n    \u003cGVBTable\n        :columns=\"data.columns\"\n        base-url=\"/api/menus\"\n        like-title=\"搜索菜单名称\"\n        ref=\"gvbTable\"\n        default-delete\n    \u003e\n      \u003ctemplate #add\u003e\n        \u003ca-button type=\"primary\" @click=\"addMenu\"\u003e添加\u003c/a-button\u003e\n      \u003c/template\u003e\n      \u003ctemplate #edit=\"{record}\"\u003e\n        \u003ca-button type=\"primary\" @click=\"updateModal(record)\"\u003e编辑\u003c/a-button\u003e\n      \u003c/template\u003e\n      \u003ctemplate #cell=\"{column, record}\"\u003e\n        \u003ctemplate v-if=\"column.key === 'abstract'\"\u003e\n          \u003cdiv v-for=\"(item, index) in record.abstract\" :key=\"index\"\u003e{{ item }}\u003c/div\u003e\n        \u003c/template\u003e\n        \u003ctemplate v-if=\"column.key === 'banners'\"\u003e\n          \u003cdiv style=\"display: grid; grid-template-columns: repeat(3, 1fr); grid-column-gap: 5px; grid-row-gap: 5px\"\u003e\n            \u003cimg v-for=\"item in record.banners\" :key=\"item.id\" :src=\"item.path\" height=\"40\"\n                 style=\"border-radius: 5px;\"\u003e\n          \u003c/div\u003e\n\n        \u003c/template\u003e\n\n      \u003c/template\u003e\n    \u003c/GVBTable\u003e\n  \u003c/div\u003e\n\n\u003c/template\u003e\n\n\u003cscript setup\u003e\nimport GVBTable from \"@/components/admin/gvb_table.vue\"\nimport {reactive, ref} from \"vue\";\nimport {imageNameListApi} from \"@/api/image_api\";\nimport {createMenuApi, updateMenuApi} from \"@/api/menu_api\";\nimport {message} from \"ant-design-vue\";\n\nconst state_abstract = ref(\"\")\nconst bannerIDList = ref([])\nconst _state = {\n  abstract_time: 7,\n  banner_time: 7,\n  path: \"\",\n  slogan: \"\",\n  sort: 0,\n  title: \"\",\n  abstract: [],\n  image_sort_list: []\n}\nconst state = reactive({\n  abstract_time: 7,\n  banner_time: 7,\n  path: \"\",\n  slogan: \"\",\n  sort: 0,\n  title: \"\",\n  abstract: [],\n  image_sort_list: []\n})\nconst formRef = ref(null)\n\n// 获取图片数据\nasync function getData() {\n  let res = await imageNameListApi()\n  data.imageNameList = res.data\n}\n\n// 选中之后的回显\nfunction getLabel(label) {\n  return label[0].props.src\n}\n// 添加菜单，更新菜单\nasync function handleOK() {\n  try {\n    formRef.value.validate()\n  } catch (e) {\n    return\n  }\n  state.abstract = state_abstract.value.split(\"\\n\")\n  let res\n\n  if (editID.value) {\n    res = await updateMenuApi(editID.value, state)\n  } else {\n    res = await createMenuApi(state)\n  }\n\n  if (res.code) {\n    message.error(res.msg)\n    return\n  }\n  state_abstract.value = \"\"\n  bannerIDList.value = []\n  data.visible = false\n  message.success(res.msg)\n  gvbTable.value.ExportList()\n  return\n}\n\n// 选择菜单图片\nfunction bannerChange(idList) {\n  state.image_sort_list = []\n  for (let i = 0; i \u003c idList.length; i++) {\n    state.image_sort_list.push({\n      image_id: idList[i],\n      sort: i\n    })\n  }\n\n}\n\ngetData()\nconst gvbTable = ref(null)\nconst editID = ref(0)\nconst data = reactive({\n  columns: [\n    {title: 'id', dataIndex: 'id', key: 'id'},\n    {title: '菜单标题', dataIndex: 'title', key: 'title'},\n    {title: '路径', dataIndex: 'path', key: 'path'},\n    {title: 'slogan', dataIndex: 'slogan', key: 'slogan'},\n    {title: '介绍', dataIndex: 'abstract', key: 'abstract'},\n    {title: '介绍切换时间', dataIndex: 'abstract_time', key: 'abstract_time'},\n    {title: 'banner切换时间', dataIndex: 'banner_time', key: 'banner_time'},\n    {title: '排序', dataIndex: 'sort', key: 'sort'},\n    {title: 'banner', dataIndex: 'banners', key: 'banners'},\n    {title: '发布时间', dataIndex: 'created_at', key: 'created_at'},\n    {title: '操作', dataIndex: 'action', key: 'action'},\n  ],\n  visible: false,\n  imageNameList: []\n})\n\nfunction addMenu() {\n  editID.value = 0\n  data.visible = true\n  Object.assign(state, _state)\n}\n\nfunction updateModal(record) {\n  editID.value = record.id\n  state.abstract_time = record.abstract_time\n  state.banner_time = record.banner_time\n  state.path = record.path\n  state.slogan = record.slogan\n  state.sort = record.sort\n  state.title = record.title\n\n  state.abstract = record.abstract\n  state_abstract.value = record.abstract.join(\"\\n\")\n\n  bannerIDList.value = []\n  state.image_sort_list = []\n  for (let i = 0; i \u003c record.banners.length; i++) {\n    bannerIDList.value.push(record.banners[i].id)\n    state.image_sort_list.push({\n      image_id: record.banners[i].id,\n      sort: i\n    })\n  }\n  data.visible = true\n}\n\n\u003c/script\u003e\n```","look_count":0,"comment_count":0,"digg_count":0,"collects_count":0,"user_id":1,"user_nick_name":"admin","user_avatar":"/uploads/avatar/default.png","category":"后台课程","source":"枫枫知道","link":"","banner_id":5,"banner_url":"/uploads/file/33.jpg","tags":["菜单"]},"id":"EdcWwYYBMeB77WN1jEYG"},{"row":{"id":"","created_at":"2023-03-08 20:39:31","updated_at":"2023-03-09 00:37:32","title":"tabs组件","keyword":"tabs组件","abstract":"\n\nstore.js\n\nimport {defineStore} from 'pinia'\nimport {message} from 'ant-design-vue';\n\nexport const ","content":"![](http://python.fengfengzhidao.com/pic/20230305095601.png)\n\n\n\nstore.js\n\n```Vue\nimport {defineStore} from 'pinia'\nimport {message} from 'ant-design-vue';\n\nexport const useStore = defineStore('gvb', {\n    state: () =\u003e {\n        return {\n            tabList: []\n        }\n    },\n    actions: {\n        // 添加tab\n        addTab(tab) {\n            // 已经存在，就不要再添加了\n            // 不存在的时候，进行添加\n            if (this.tabList.findIndex((item) =\u003e item.name === tab.name) === -1) {\n                this.tabList.push({name: tab.name, title: tab.title})\n            }\n        },\n        // tabs的持久化存储\n        saveTabs() {\n            localStorage.setItem(\"tabs\", JSON.stringify(this.tabList))\n        },\n        // 加载组件\n        loadTabs() {\n            let tabs = localStorage.getItem(\"tabs\")\n            if (tabs === null) {\n                this.tabList = [{title: \"首页\", name: \"home\"}]\n                return\n            }\n            this.tabList = JSON.parse(tabs)\n        },\n        // 移除tab\n        removeTab(tab) {\n            let index = this.tabList.findIndex((item) =\u003e item.name === tab.name)\n            this.tabList.splice(index, 1)\n            return index\n        },\n        // 移除全部tab\n        removeTabAll() {\n            this.tabList = [{title: \"首页\", name: \"home\"}]\n        }\n    }\n})\n\n\n```\n\n\n\ngvb_tabs.vue\n\n```Vue\n\u003ctemplate\u003e\n  \u003cdiv class=\"gvb_tabs\"\u003e\n    \u003cdiv :class=\"isActive(item)\"\n         v-for=\"(item, index) in store.tabList\"\n         :key=\"index\"\n         @click=\"checkTab(item)\"\n    \u003e\n      {{ item.title }}\n      \u003cspan @click.stop=\"removeTab(item)\" v-if=\"item.name !== 'home'\" class=\"gvb_tab_remove_icon\"\u003e×\u003c/span\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"gvb_tab_item remove_all\" @click=\"removeTabAll\"\u003e\n      全部关闭\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/template\u003e\n\n```\n\n\n\n```Vue\n\u003cscript setup\u003e\nimport {useStore} from \"@/stores/store\";\nimport {useRoute, useRouter} from \"vue-router\";\n\nconst store = useStore()\nconst route = useRoute()\nconst router = useRouter()\n// 是否选中\nfunction isActive(item) {\n  // 判断当前路由是否和item上的路由匹配\n  // 还要判断是不是home\n  if (route.name === item.name) {\n    return \"gvb_tab_item active\"\n  }\n  return \"gvb_tab_item\"\n}\n// 切换路由\nfunction checkTab(item) {\n  router.push({\n    name: item.name\n  })\n}\n// 移除tab\nfunction removeTab(item) {\n  let index = store.removeTab(item)\n  // 如果删除的是当前所在的tab\n  // 那就应该向前走一步\n  if (item.name === route.name) {\n    // 当前tab\n    // 前一个路由的路由索引\n    let beforeIndex = index - 1\n    // 前一个的路由\n    let beforeName = store.tabList[beforeIndex].name\n    router.push({\n      name: beforeName\n    })\n  }\n}\n// 关闭全部\nfunction removeTabAll() {\n  store.removeTabAll()\n  router.push({\n    name: \"home\"\n  })\n}\n// 加载路由\nstore.loadTabs()\n// 监听刷新\nwindow.onbeforeunload = function () {\n  // 保存\n  store.saveTabs()\n  return undefined\n}\n\n\u003c/script\u003e\n\n```\n\n\n\n```Vue\n\u003cstyle lang=\"scss\"\u003e\n.gvb_tabs {\n  height: 30px;\n  border-color: var(--order);\n  border-style: solid;\n  border-width: 1px 0 1px 0;\n  background-color: var(--card_bg);\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  position: relative;\n\n  .gvb_tab_item {\n    background-color: var(--card_bg);\n    border: 1px solid var(--card_boder);\n    padding: 0 10px;\n    margin-right: 10px;\n    cursor: pointer;\n    color: var(--text);\n    display: flex;\n    align-items: center;\n\n    .gvb_tab_remove_icon {\n      cursor: pointer;\n      width: 12px;\n      height: 12px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin-left: 5px;\n      border-radius: 50%;\n\n      \u0026:hover {\n        background-color: #f0eeee;\n      }\n    }\n\n    \u0026:first-child {\n      margin-left: 20px;\n    }\n\n    \u0026.active {\n      background-color: var(--active);\n      border-color: var(--active);\n      color: white;\n\n      \u0026::before {\n        display: inline-block;\n        content: \"\";\n        width: 12px;\n        height: 12px;\n        background-color: white;\n        border-radius: 50%;\n        margin-right: 5px;\n      }\n\n      .gvb_tab_remove_icon:hover {\n        background-color: #8fbef3;\n      }\n    }\n\n    \u0026.remove_all {\n      position: absolute;\n      right: 10px;\n\n    }\n  }\n}\n\u003c/style\u003e\n\n```\n\n\n\n\n\n## 添加tab\n\n```Vue\nstore.addTab({\n  name: key.name,\n  title: key.title,\n})\n\n```\n\n这样做的好处就是，可以将icon放入tab，更加灵活\n\nrouter.js更加的简洁\n\n\n\n## 删除tab\n\n主要难点就是，如果删除的是当前所在的tab，那就需要向移动一位","look_count":0,"comment_count":0,"digg_count":0,"collects_count":0,"user_id":1,"user_nick_name":"admin","user_avatar":"/uploads/avatar/default.png","category":"后台课程","source":"","link":"","banner_id":5,"banner_url":"/uploads/file/33.jpg","tags":["后台"]},"id":"Gtc7wYYBMeB77WN13UZE"},{"row":{"id":"","created_at":"2023-03-08 22:18:43","updated_at":"2023-03-09 00:37:52","title":"表格组件拆分","keyword":"表格组件拆分","abstract":"这是表格组件的文章简介","content":"1234sdjgsgkskdglgl","look_count":0,"comment_count":0,"digg_count":0,"collects_count":0,"user_id":1,"user_nick_name":"admin","user_avatar":"/uploads/avatar/default.png","category":"后台课程","source":"枫枫知道","link":"https://fontawesome.dashgame.com/","banner_id":12,"banner_url":"/uploads/file/235628ZxKUe.jpg","tags":["后台"]},"id":"IteWwYYBMeB77WN1rUbQ"},{"row":{"id":"","created_at":"2023-03-11 00:45:16","updated_at":"2023-03-11 00:45:16","title":"个人中心","keyword":"个人中心","abstract":"我的信息\n\n\n\n\u003ctemplate\u003e\n  \u003cdiv class=\"gvb_user_info_bg\"\u003e\n    \u003cdiv class=\"gvb_user_info_view\"\u003e\n      \u003cdiv ","content":"## 我的信息\n\n![](https://secure2.wostatic.cn/static/69Lgp3Bfwf1SKkTeGQBKRa/image.png?auth_key=1678453975-asXSYoePE453pggBWduXPt-0-3a70473c1aa70be79bec70e715bff089)\n\n\n\n```Vue\n\u003ctemplate\u003e\n  \u003cdiv class=\"gvb_user_info_bg\"\u003e\n    \u003cdiv class=\"gvb_user_info_view\"\u003e\n      \u003cdiv class=\"user_head\"\u003e\n        个人信息\n      \u003c/div\u003e\n      \u003cdiv class=\"body user_info_view\"\u003e\n        \u003ca-form :label-col=\"{ span: 2 }\"\n                :wrapper-col=\"{ span: 22 }\"\u003e\n          \u003ca-form-item label=\"昵称\"\u003e\n            \u003ca-input placeholder=\"昵称\" class=\"user_ipt\"\u003e\u003c/a-input\u003e\n          \u003c/a-form-item\u003e\n          \u003ca-form-item label=\"我的签名\"\u003e\n            \u003ca-textarea placeholder=\"我的签名\" class=\"user_ipt\" :auto-size=\"{ minRows: 2, maxRows: 5 }\"\u003e\u003c/a-textarea\u003e\n          \u003c/a-form-item\u003e\n          \u003ca-form-item label=\"我的博客\"\u003e\n            \u003ca-input placeholder=\"我的博客\" class=\"user_ipt\"\u003e\u003c/a-input\u003e\n          \u003c/a-form-item\u003e\n          \u003ca-form-item label=\"邮箱\"\u003e\n            \u003cspan\u003e556454545@qq.com\u003c/span\u003e\n          \u003c/a-form-item\u003e\n          \u003ca-form-item label=\"现地址\"\u003e\n            \u003cspan\u003e四川成都\u003c/span\u003e\n          \u003c/a-form-item\u003e\n          \u003ca-form-item label=\"当前角色\"\u003e\n            \u003cspan\u003e管理员\u003c/span\u003e\n          \u003c/a-form-item\u003e\n          \u003ca-form-item label=\"注册来源\"\u003e\n            \u003cspan\u003eQQ\u003c/span\u003e\n          \u003c/a-form-item\u003e\n          \u003ca-form-item label=\"我的积分\"\u003e\n            \u003cspan\u003e658\u003c/span\u003e\n          \u003c/a-form-item\u003e\n        \u003c/a-form\u003e\n      \u003c/div\u003e\n      \u003cdiv class=\"user_head\"\u003e\n        每日奖励\n      \u003c/div\u003e\n      \u003cdiv class=\"body daily_reward\"\u003e\n        \u003cdiv\u003e\n          \u003cimg src=\"../../../assets/icon/ok.svg\" alt=\"\"\u003e\n          每日登陆 +2\n        \u003c/div\u003e\n        \u003cdiv\u003e\n          \u003cimg src=\"../../../assets/icon/ok.svg\" alt=\"\"\u003e\n          发文 +3\n        \u003c/div\u003e\n        \u003cdiv\u003e\n          \u003cimg src=\"../../../assets/icon/ok.svg\" alt=\"\"\u003e\n          发评论 +1\n        \u003c/div\u003e\n        \u003cdiv\u003e\n          \u003cimg src=\"../../../assets/icon/error.svg\" alt=\"\"\u003e\n          群聊 +0.5\n        \u003c/div\u003e\n      \u003c/div\u003e\n\n      \u003cdiv class=\"user_head\"\u003e\n        成就勋章\n      \u003c/div\u003e\n      \u003cul class=\"body medal\"\u003e\n        \u003cli\u003e\n          \u003cimg src=\"https://i0.hdslb.com/bfs/face/21fdd1bcd9ad1b52d5725026d71c185a68681644.png\" alt=\"\"\u003e\n          \u003cdiv class=\"name\"\u003e初来乍到\u003c/div\u003e\n        \u003c/li\u003e\n        \u003cli\u003e\n          \u003cimg src=\"https://i0.hdslb.com/bfs/face/51ca16136e570938450bca360f28761ceb609f33.png\" alt=\"\"\u003e\n          \u003cdiv class=\"name\"\u003e有爱萌新\u003c/div\u003e\n        \u003c/li\u003e\n        \u003cli\u003e\n          \u003cimg src=\"https://i0.hdslb.com/bfs/face/89491e6cee3b1c88292b618a58703ab614665f66.png\" alt=\"\"\u003e\n          \u003cdiv class=\"name\"\u003e老司机\u003c/div\u003e\n        \u003c/li\u003e\n      \u003c/ul\u003e\n\n\n      \u003cdiv class=\"user_head\"\u003e\n        操作\n      \u003c/div\u003e\n      \u003cdiv class=\"body actions\"\u003e\n        \u003ca-button type=\"primary\"\u003e绑定邮箱\u003c/a-button\u003e\n        \u003ca-button type=\"primary\"\u003e修改密码\u003c/a-button\u003e\n        \u003ca-button type=\"danger\"\u003e注销退出\u003c/a-button\u003e\n      \u003c/div\u003e\n\n\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/template\u003e\n```\n\n\n\n```Vue\n\u003cstyle lang=\"scss\"\u003e\n.gvb_user_info_bg {\n  background-color: var(--card_bg);\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n\n  .gvb_user_info_view {\n    width: 1000px;\n  }\n\n  .user_head {\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    font-weight: 600;\n    margin-bottom: 10px;\n\n    \u0026::before {\n      width: 3px;\n      height: 1.5rem;\n      display: inline-block;\n      content: \"\";\n      margin-right: 5px;\n      background-color: var(--active);\n    }\n  }\n\n  .body {\n    margin-bottom: 20px;\n  }\n\n  .user_info_view {\n    .ant-form-item {\n      margin: 0 0 5px;\n    }\n\n    .user_ipt {\n      width: 400px;\n    }\n  }\n\n  .actions {\n\n    .ant-btn {\n      margin-right: 10px;\n    }\n  }\n\n  .medal {\n    display: flex;\n    flex-wrap: wrap;\n\n    li {\n      margin-right: 20px;\n\n      .name {\n        text-align: center;\n      }\n\n      \u0026:last-child {\n        margin-right: 0;\n      }\n\n      img {\n        width: 60px;\n        height: 60px;\n      }\n    }\n  }\n\n  .daily_reward {\n    display: flex;\n\n    \u003e div {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      margin-right: 50px;\n    }\n\n    img {\n      width: 60px;\n      height: 60px;\n    }\n  }\n\n\n}\n\u003c/style\u003e\n```\n\n","look_count":0,"comment_count":0,"digg_count":0,"collects_count":1,"user_id":2,"user_nick_name":"zhangsan","user_avatar":"/uploads/avatar/default.png","category":"后台课程","source":"","link":"","banner_id":14,"banner_url":"/uploads/file/235920pM89Q.jpg","tags":["前端"]},"id":"2iBpzIYBenTVo4BRkquV"},{"row":{"id":"","created_at":"2023-03-08 19:47:59","updated_at":"2023-03-08 19:47:59","title":"12. 群聊消息","keyword":"12. 群聊消息","abstract":"\n\n\u003ctemplate\u003e\n  \u003cdiv\u003e\n\n    \u003cGVBTable\n        :columns=\"data.columns\"\n        base-url=\"/api/chat_grou","content":"![](http://python.fengfengzhidao.com/pic/20230307220456.png)\n\n\n\n```Go\n\u003ctemplate\u003e\n  \u003cdiv\u003e\n\n    \u003cGVBTable\n        :columns=\"data.columns\"\n        base-url=\"/api/chat_groups_records\"\n        like-title=\"搜索消息名称\"\n        ref=\"gvbTable\"\n        :is-add=\"false\"\n        :is-edit=\"false\"\n        :is-delete=\"false\"\n        default-delete\n    \u003e\n      \u003ctemplate #cell=\"{column, record}\"\u003e\n        \u003ctemplate v-if=\"column.key === 'avatar'\"\u003e\n          \u003cimg :src=\"'/' + record.avatar\" alt=\"\" v-if=\"record.avatar !== ''\"\n               style=\"width: 30px;height: 30px;border-radius: 50%\"\u003e\n        \u003c/template\u003e\n        \u003ctemplate v-if=\"column.key === 'is_group'\"\u003e\n          \u003ca-tag v-if=\"record.is_group\" color=\"blue\"\u003e群消息\u003c/a-tag\u003e\n          \u003ca-tag v-else color=\"red\"\u003e系统消息\u003c/a-tag\u003e\n        \u003c/template\u003e\n        \u003ctemplate v-if=\"column.key === 'msg_type'\"\u003e\n          \u003cspan color=\"blue\"\u003e{{  chatTypeDict[record.msg_type] }}\u003c/span\u003e\n        \u003c/template\u003e\n      \u003c/template\u003e\n      \u003ctemplate #filters\u003e\n\n      \u003c/template\u003e\n    \u003c/GVBTable\u003e\n\n  \u003c/div\u003e\n\n\u003c/template\u003e\n\n\u003cscript setup\u003e\nimport GVBTable from \"@/components/admin/gvb_table.vue\"\nimport {reactive, ref} from \"vue\";\n\nconst level = ref(undefined)\nconst gvbTable = ref(null)\n\n/*\n  InRoomMsg  ctype.MsgType = 1 // 进入聊天室\n  TextMsg    ctype.MsgType = 2 // 发文本消息\n  ImageMsg   ctype.MsgType = 3 // 图片消息\n  VoiceMsg   ctype.MsgType = 4 // 语音消息\n  VideoMsg   ctype.MsgType = 5 // 视频消息\n  SystemMsg  ctype.MsgType = 6 // 系统消息\n  OutRoomMsg ctype.MsgType = 7 // 退出聊天室\n */\n\nconst chatTypeDict = {\n  1: \"进入聊天室\",\n  2: \"文本消息\",\n  3: \"图片消息\",\n  4: \"语音消息\",\n  5: \"视频消息\",\n  6: \"系统消息\",\n  7: \"退出聊天室\",\n}\n\nfunction onFilter() {\n  gvbTable.value.ExportList({level: level.value})\n}\n\n/*\n  {\n        \"avatar\": \"uploads/chat_avatar/大.png\",\n        \"content\": \"大意的巴蒂斯图塔 进入聊天室\",\n        \"created_at\": \"2023-02-26T10:47:16.948+08:00\",\n        \"id\": 14,\n        \"is_group\": true,\n        \"msg_type\": 1,\n        \"nick_name\": \"大意的巴蒂斯图塔\"\n      },\n */\nconst data = reactive({\n  columns: [\n    {title: 'id', dataIndex: 'id', key: 'id'},\n    {title: '昵称', dataIndex: 'nick_name', key: 'nick_name'},\n    {title: '头像', dataIndex: 'avatar', key: 'avatar'},\n    {title: '内容', dataIndex: 'content', key: 'content'},\n    {title: '是否是群聊', dataIndex: 'is_group', key: 'is_group'},\n    {title: '消息类型', dataIndex: 'msg_type', key: 'msg_type'},\n    {title: '日志时间', dataIndex: 'created_at', key: 'created_at'},\n  ],\n})\n\u003c/script\u003e\n```\n\n\n\n","look_count":0,"comment_count":0,"digg_count":5,"collects_count":0,"user_id":1,"user_nick_name":"admin","user_avatar":"/uploads/avatar/default.png","category":"后台课程","source":"","link":"","banner_id":17,"banner_url":"/uploads/file/165914XyhES.jpg","tags":["前端","后台"]},"id":"DdcMwYYBMeB77WN1sEY8"},{"row":{"id":"","created_at":"2023-03-18 19:20:26","updated_at":"2023-03-18 19:20:26","title":"普通用户的文章","keyword":"普通用户的文章","abstract":"1234","content":"你好啊","look_count":6,"comment_count":0,"digg_count":0,"collects_count":1,"user_id":14,"user_nick_name":"普通用户123","user_avatar":"/uploads/avatar/default.png","category":"后台课程","source":"","link":"","banner_id":16,"banner_url":"/uploads/file/105747KJAJa.jpg","tags":["后台"]},"id":"R05z9IYBUbEPfcjaDSjI"},{"row":{"id":"","created_at":"2023-03-26 16:33:59","updated_at":"2023-03-28 00:47:38","title":"vue全基础","keyword":"vue全基础","abstract":"vue基本概述\n\nVue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。\n\nVue.js是一套构建用户界面的渐进式框架，采用自底向上增量开发的设计。Vue的核心库关注于","content":"# vue基本概述\n\nVue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。\n\nVue.js是一套构建用户界面的渐进式框架，采用自底向上增量开发的设计。Vue的核心库关注于视图（html），不仅易上手，还便于与第三方库或项目整合。\n\n渐进式：一步一步，不是将所有的东西都学完才能使用。\n\n自底向上设计：一种设计程序的过程和方法，就是先编写出基础程序段，然后在逐步扩大规范、补充和升级某些 功能，实际上是一种自底向上构造程序的过程。\n\nVue.js的核心是允许采用简洁式模板语法来声明的将数据渲染进DOM的系统\n\n在使用数据之前需要先进性声明才可以使用\n\n### 为什么要学习Vue？\n\n简单，前端三大框架（Vue，React，angler）中是对小白最友好的框架\n\n另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。\n\n### Vue和Jquery有什么区别？\n\n数据驱动试图\n\n1. jquery到vue转变是一个思想的转变，是将jquery直接操作dom的思想转变到操作数据上去。\n2. jQuery是使用选择器选取DOM对象，对其进行赋值、取值、事件绑定等操作，其实和原生的HTML的区别只在于可以更方便的选取和操作DOM对象\n3. Vue则是通过Vue对象将数据和View完全分离开来了。对数据进行操作不再需要引用相应的DOM对象，可以说数据和View是分离的，他们通过Vue对象这个vm实现相互的绑定。这就是传说中的MVVM\n\n### 什么时候学习Vue？\n\n先把前端三件套熟悉（HTML，CSS，JavaScript）\n\n\n\n\n\n# Vue基本语法\n\n官方文档\n\n\n\n## 插值表达式\n\n使用{{ }}进行渲染`data:{}`里面的变量\n\n也可以是函数，不过在data里面的方法，在插值表达式中需要补充大括号\n\n例如\n\n```HTML\n\u003cdiv id=\"app\"\u003e\n    \u003cdiv\u003e{{ msg }}\u003c/div\u003e\n    \u003cdiv\u003e{{ getInfo() }}\u003c/div\u003e\n\u003c/div\u003e\n\u003cscript src=\"../vue.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n    new Vue({\n        el: '#app',\n        data: {\n            msg: '枫枫知道',\n            getInfo() {\n                // 函数的返回值就是插值表达式中的结果\n                return \"床前明月光\"\n            }\n        }\n    })\n\u003c/script\u003e\n```\n\n![](https://python.fengfengzhidao.com/img/20211208164829.png?t=1673766667016)\n\n在插值表达式中，支持运算符，以及一些方法\n\nvue指令：\n\n## v-text\n\n渲染文本，和插值表达式类似\n\n```HTML\n\u003cdiv v-text=\"msg\"\u003e\u003c/div\u003e\n\u003cdiv\u003e{{ msg }}\u003c/div\u003e\n```\n\n也是支持运算符的\n\n```HTML\n\u003cdiv v-text=\"2 \u003e 4 ? '成立': '不成立'\"\u003e\u003c/div\u003e\n```\n\n## v-html\n\n渲染标签，如果字符串是含标签的特殊字符，那么vue会将它渲染成标签\n\n如果是v-text或者是使用插值表达式，则会原样输出\n\n![](https://python.fengfengzhidao.com/img/20211208165756.png?t=1673766667021)\n\n\n\n注意：\n\nv-html一般是用来渲染信任的文本，例如文章的详情内容等，最好不要用在用户提交的地方\n\n容易造成XSS攻击\n\n## v-bind\n\n可以给标签动态添加内容，也可以给动态的修改标签属性\n\n不过在属性上的操作稍微和操作内容不太一样，我们使用`v-bind`指令\n\n例如我想动态修改img标签的src属性，希望它去读取data里面的值\n\n但是我们不能在属性中使用插值表达式\n\n这样写src直接将我的内容原样输出了，所以我们需要使用v-bind，全称为动态属性\n\n那么我可以这么做\n\n```HTML\n\u003cimg v-bind:src=\"src\" alt=\"\"\u003e\n```\n\n当然，`v-bind:`  可以简写为  `:`\n\n```HTML\n\u003cimg :src=\"src\" alt=\"\"\u003e\n\n```\n\nv-bind不仅可以用于HTML存在的属性，还可以应用在自定义属性上\n\n例如\n\n```HTML\n\u003cp :id=\"'p' + '_01'\" :data=\"msg\" :还可以是中文=\"msg\"\u003e\u003c/p\u003e\n\n实际结果：\n\u003cp id=\"p_01\" data=\"haha\" 还可以是中文=\"haha\"\u003e\u003c/p\u003e\n\n```\n\n在vue所有的指令中，都是支持表达式的\n\n例如：\n\n```JavaScript\n\u003cdiv class=\"name\"\u003e\n    {{ a.length === 0 ? '没有数据' : a }}\n    -{{ a.split('.')[1] }}\n\u003c/div\u003e\n```\n\n什么是表达式？\n\n```JavaScript\n// 这是语句\nvar a = 1;\n\n// 这是表达式\na.length === 0 ? '没有数据' : a\n\n```\n\n## 条件渲染\n\n### v-if和v-else的普通使用\n\nv-if中的布尔值为true，则渲染这个div\n\n如果if不成立，则渲染else中的代码块\n\n```HTML\n\u003cdiv id=\"app\"\u003e\n    \u003cdiv\u003e{{ num }}\u003c/div\u003e\n    \u003cdiv id=\"if\"\u003e\n        \u003cdiv v-if=\"num \u003e 0.9\"\u003e大于0.9的概率\u003c/div\u003e\n        \u003cdiv v-else\u003ev-if不满足显示我\u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\u003cscript src=\"../vue.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n    new Vue({\n        el: '#app',\n        data: {\n            num: Math.random(), // 一个0-1之间的随机数字\n        }\n    })\n\u003c/script\u003e\n\n```\n\n### v-else-if多条件语句\n\n```HTML\n\u003cdiv id=\"v-else-if\"\u003e\n    \u003cdiv v-if=\"num \u003e 0.9\"\u003e大于0.9的概率\u003c/div\u003e\n    \u003cdiv v-else-if=\"num \u003e 0.6\"\u003e大于0.6的概率\u003c/div\u003e\n    \u003cdiv v-else-if=\"num \u003e 0.4\"\u003e大于0.4的概率\u003c/div\u003e\n    \u003cdiv v-else-if=\"num \u003e 0.2\"\u003e大于0.2的概率\u003c/div\u003e\n    \u003cdiv v-else\u003e所有条件都不成立\u003c/div\u003e\n\u003c/div\u003e\n```\n\n\n\n\n\nv-if=\"flag\"，为true的时候显示\n\n为false的时候消失\n\n```JavaScript\n\u003cdiv id=\"app\"\u003e\n    \u003cdiv class=\"name\" v-if=\"flag\"\u003e\n        {{ name }}\n    \u003c/div\u003e\n    \u003cdiv v-else\u003e\n        if没匹配到就显示我\n    \u003c/div\u003e\n\n\u003c/div\u003e\n\u003cscript\u003e\n    var vue = new Vue({\n        el: '#app', // vue挂载的位置，不能是body\n        data: {\n            flag: false,\n            name: '枫枫'\n        }\n    })\n\u003c/script\u003e\n```\n\n## v-show与v-if的区别\n\n1. v-if如果是false，不会渲染\n2. v-show如果是false，不会显示 ` style=\"display: none;\"`\n\n体会一下v-if和v-show\n\n```HTML\n一个是看不见，但是我存在，只是我隐藏了    v-show \n一个是看不见，因为我本来就没被渲染       v-if\n```\n\n\n\n## 列表渲染\n\n主要分为遍历列表和遍历对象\n\n#### 遍历列表\n\n```JavaScript\nlis: [\n    '张三',\n    '王伟',\n    '张伟',\n    '王五',\n]\n```\n\n此时的item就是每个元素\n\n```HTML\n\u003cul\u003e\n    \u003cli v-for=\"item in lis\" :key=\"item\"\u003e\n        {{ item }}\n    \u003c/li\u003e\n\u003c/ul\u003e\n```\n\nkey要唯一！！！\n\n\n\n如果需要遍历出每个元素的索引\n\n则在遍历的时候指定index\n\n```HTML\n\u003cul\u003e\n    \u003cli v-for=\"(item, index) in lis\" :key=\"item\"\u003e\n        {{ index }} -- {{ item }}\n    \u003c/li\u003e\n\u003c/ul\u003e\n```\n\n#### 遍历对象\n\n```JavaScript\nobj:{\n    name: '张三',\n    age: 21,\n    addr: '北京市',\n}\n```\n\n一个参数，就是遍历对象的值\n\n二个参数，值和键\n\n三个参数，值，键，索引\n\n```HTML\n\u003cul\u003e\n    \u003cli v-for=\"item in obj\" :key=\"item\"\u003e\n        对象的值：{{ item }}\n    \u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n    \u003cli v-for=\"(item, key) in obj\" :key=\"item\"\u003e\n        对象的值：{{ item }}\n        对象的键：{{ key }}\n    \u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n    \u003cli v-for=\"(item, key, index) in obj\" :key=\"item\"\u003e\n        对象的值：{{ item }}\n        对象的键：{{ key }}\n        变量的索引：{{ index }}\n    \u003c/li\u003e\n\u003c/ul\u003e\n```\n\n\n\n## Vue事件\n\nv-on:或者@\n\n\n```HTML\n\u003cdiv id=\"app\"\u003e\n    \u003cdiv\u003e\n        {{ num }}\n    \u003c/div\u003e\n    \u003cdiv\u003e\n        \u003c!--        执行的方法必须在methods中--\u003e\n        \u003cbutton v-on:click=\"add\"\u003e点我 +\u003c/button\u003e\n        \u003cbutton @dblclick=\"num--\"\u003e点我 -1\u003c/button\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\n```\n\n事件所执行的方法是要被定义在methods里面\n\n```JavaScript\nmethods: {\n    add() {\n        this.num ++\n    }\n}\n\n```\n\n参数问题\n\n可以通过传参进行参数传递\n\n```HTML\n\u003cbutton v-on:click=\"add(10)\"\u003e点我 +\u003c/button\u003e\n\n\n...\nadd(number) {\n    this.num += number\n}\n// 此时的add函数就能接收到传递进来的参数值\n```\n\n默认参数\n\n默认参数就是触发当前事件的事件对象\n\n```JavaScript\n\u003cbutton id=\"add\" class=\"add_cls\" v-on:click=\"add\"\u003e点我 +\u003c/button\u003e\n```\n\n一定是`v-on:click=\"add\"`，只写一个函数名，\n\n而不是`v-on:click=\"add()\"`，这样获取不到事件对象\n\n```JavaScript\n// 获取触发当前事件的标签\nadd(event) {\n    // 触发当前事件的事件对象\n    console.log(event)\n    // 获取标签\n    console.log(event.target)\n    // 获取id，class\n    console.log(event.target.id)\n    console.log(event.target.className)\n}\n\n```\n\n如果有参数，想接收事件对象\n\n使用`$event`进行传递\n\n```JavaScript\n\u003cbutton id=\"add\" class=\"add_cls\" v-on:click=\"add(10, $event)\"\u003e点我 +\u003c/button\u003e\n\n...\n\nadd(number, event) {\n    this.num += number\n    // 触发当前事件的事件对象\n    console.log(event)\n    // 获取标签\n    console.log(event.target)\n    // 获取id，class\n    console.log(event.target.id)\n    console.log(event.target.className)\n}\n```\n\n\n\n### 图片轮播案例\n\n```HTML\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003ctitle\u003e图片轮播\u003c/title\u003e\n    \u003cscript src=\"../vue.js\"\u003e\u003c/script\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\u003cdiv id=\"app\"\u003e\n    \u003cdiv\u003e\n        \u003cimg :src=\"img_list[index]\" alt=\"\"\u003e\n    \u003c/div\u003e\n    \u003cdiv\u003e\n        \u003cbutton @click=\"prevImag(index, img_list.length)\"\u003e上一张\u003c/button\u003e\n        \u003cbutton @click=\"nextImag\"\u003e下一张\u003c/button\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\u003cscript\u003e\n    var vue = new Vue({\n        el: '#app', // vue挂载的位置，不能是body\n        data: {\n            index: 0,\n            img_list: [\n                'http://h2.ioliu.cn/bing/SalzburgKrampus_ZH-CN7355658592_640x480.jpg?imageslim',\n                'http://h2.ioliu.cn/bing/MistyTor_ZH-CN7520952555_640x480.jpg?imageslim',\n                'http://h2.ioliu.cn/bing/Koenigsbourg_ZH-CN7675452866_640x480.jpg?imageslim',\n                'http://h2.ioliu.cn/bing/CuvervilleIsland_ZH-CN9814166047_640x480.jpg?imageslim',\n                'http://h2.ioliu.cn/bing/ElanValley_ZH-CN9533069637_640x480.jpg?imageslim',\n                'http://h2.ioliu.cn/bing/WinterWaxwing_ZH-CN9435499385_640x480.jpg?imageslim',\n            ]\n        },\n        methods: {\n            // 下一张\n            nextImag() {\n                // 让索引加1\n                // 判断是不是最后一张，如果是就回到第一张\n                if (this.index === this.img_list.length - 1) {\n                    this.index = 0\n                    return\n                }\n                this.index++\n            },\n            // 上一张\n            prevImag(index, len){\n                // 我希望把索引和列表长度传递进来\n                if (index === 0) {\n                    this.index = len - 1\n                    return\n                }\n                this.index --\n            }\n        }\n    })\n\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n```\n\n### 事件修饰符\n\n在事件处理程序中调用 `event.preventDefault()` 或 `event.stopPropagation()` 是非常常见的需求。尽管我们可以在方法中轻松实现这点，但更好的方式是：方法只有纯粹的数据逻辑，而不是去处理 DOM 事件细节。\n\n为了解决这个问题，Vue.js 为 `v-on` 提供了**事件修饰符**。之前提过，修饰符是由点开头的指令后缀来表示的。\n\n```HTML\n\u003c!-- 阻止单击事件继续传播 --\u003e\n\u003ca v-on:click.stop=\"doThis\"\u003e\u003c/a\u003e\n\n\u003c!-- 提交事件不再重载页面 --\u003e\n\u003cform v-on:submit.prevent=\"onSubmit\"\u003e\u003c/form\u003e\n\n\u003c!-- 修饰符可以串联 --\u003e\n\u003ca v-on:click.stop.prevent=\"doThat\"\u003e\u003c/a\u003e\n\n\u003c!-- 只有修饰符 --\u003e\n\u003cform v-on:submit.prevent\u003e\u003c/form\u003e\n\n\u003c!-- 添加事件监听器时使用事件捕获模式 --\u003e\n\u003c!-- 即内部元素触发的事件先在此处理，然后才交由内部元素进行处理 --\u003e\n\u003cdiv v-on:click.capture=\"doThis\"\u003e...\u003c/div\u003e\n\n\u003c!-- 只当在 event.target 是当前元素自身时触发处理函数 --\u003e\n\u003c!-- 即事件不是从内部元素触发的 --\u003e\n\u003cdiv v-on:click.self=\"doThat\"\u003e...\u003c/div\u003e\n\u003c!--阻止默认事件--\u003e\n\u003ca href=\"http://www.fengfengzhidao.com\" @click.prevent=\"my_alert\"\u003e枫枫知道\u003c/a\u003e\n\n```\n\n\n\n#### 事件冒泡\n\n```HTML\n\u003cdiv class=\"parent\" @click=\"log('外元素')\"\u003e\n    \u003cdiv class=\"center\" @click=\"log('中元素')\"\u003e\n        \u003cdiv class=\"child\" @click=\"log('里元素')\"\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\n点击里元素，执行顺序\n\n点击中间的元素\n\n被父元素包裹的元素，点击事件发送后会逐级将事件向上传递\n\n```HTML\n\u003cp\u003e阻止事件冒泡\u003c/p\u003e\n\u003cdiv class=\"parent\" @click=\"log('外元素')\"\u003e\n    \u003cdiv class=\"center\" @click=\"log('中元素')\"\u003e\n        \u003cdiv class=\"child\" @click.stop=\"log('里元素')\"\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\n添加stop事件修饰符之后，点击里元素，会阻止事件继续向上传播\n\n\n\n键盘事件\n\n```HTML\n@keydown   键盘按下\n@keyup     键盘回弹\n\n```\n\n\n\n按下回车触发\n\n支持组合键\n\n```HTML\n\u003cinput type=\"text\" v-model=\"msg\" @keyup.enter.ctrl=\"get_msg('上')\"\u003e\n\u003cinput type=\"text\" v-model=\"msg\" @keyup.enter=\"get_msg('上')\"\u003e\n```\n\n\n\n\u003e 使用修饰符时，顺序很重要；相应的代码会以同样的顺序产生。因此，用 `v-on:click.prevent.self` 会阻止**所有的点击**，而 `v-on:click.self.prevent` 只会阻止对元素自身的点击。\n\n#### 2.1.4新增\n\n```HTML\n\u003c!-- 点击事件将只会触发一次 --\u003e\n\u003ca v-on:click.once=\"doThis\"\u003e\u003c/a\u003e\n```\n\n\n\n### 按键修饰符\n\n最常见的可能就是在一个输入框中，判断用户是否按下了回车键\n\n```HTML\n\u003c!-- 只有在 `key` 是 `Enter` 时调用 `vm.submit()` --\u003e\n\u003cinput v-on:keyup.enter=\"submit\"\u003e\n```\n\n一些必要的按键名称\n\n```HTML\n.enter\n.tab\n.delete (捕获“删除”和“退格”键)\n.esc\n.space\n.up\n.down\n.left\n.right\n```\n\n组合按键\n\n```HTML\n\u003c!-- Alt + C --\u003e\n\u003cinput v-on:keyup.alt.67=\"clear\"\u003e\n\n\u003c!-- Ctrl + Click --\u003e\n\u003cdiv v-on:click.ctrl=\"doSomething\"\u003eDo something\u003c/div\u003e\n```\n\n\n\n\n\n\n\n## 计算属性\n\n- 调用的时候不用加括号（只是一个属性）\n- 可以监听属性变化，属性变化，计算属性重新执行\n- 并且有缓存（多个计算属性，只执行一次）\n\n和methods的区别\n\n属性变化，methods方法全部重新获取\n\n```HTML\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003ctitle\u003e计算属性\u003c/title\u003e\n    \u003cscript src=\"../vue.js\"\u003e\u003c/script\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\u003cdiv id=\"app\"\u003e\n    \u003cdiv\u003e{{ name }}\u003c/div\u003e\n    \u003cdiv\u003e{{ name.split('').reverse().join('') }}\u003c/div\u003e\n    \u003cdiv\u003e{{ name.length === 5 ? '五言绝句' : '七言绝句' }}\u003c/div\u003e\n    \u003cdiv v-if=\"name.length === 5\"\u003e五言绝句\u003c/div\u003e\n    \u003cdiv v-else-if=\"name.length === 7\"\u003e七言绝句\u003c/div\u003e\n    \u003cdiv v-else\u003e错了\u003c/div\u003e\n\n    \u003c!--  计算属性  --\u003e\n    \u003cdiv\u003e{{ getName }}\u003c/div\u003e\n    \u003cdiv\u003e{{ getName }}\u003c/div\u003e\n    \u003cdiv\u003e{{ getName }}\u003c/div\u003e\n    \u003cdiv\u003e{{ getName }}\u003c/div\u003e\n    \u003cdiv\u003e{{ getName }}\u003c/div\u003e\n    \u003cdiv\u003e{{ getName }}\u003c/div\u003e\n    \u003cdiv\u003e{{ getName }}\u003c/div\u003e\n    \u003cdiv\u003e{{ get_data_name() }}\u003c/div\u003e\n    \u003cdiv\u003e{{ get_data_name() }}\u003c/div\u003e\n    \u003cdiv\u003e{{ get_data_name() }}\u003c/div\u003e\n    \u003cdiv\u003e{{ get_data_name() }}\u003c/div\u003e\n    \u003cdiv\u003e{{ get_data_name() }}\u003c/div\u003e\n\n    \u003cbutton @click=\"getsub\"\u003e\n        点我\n    \u003c/button\u003e\n    \u003cspan\u003e{{ num }}\u003c/span\u003e\n    \u003cbutton @click=\"set_name\"\u003e计算属性\u003c/button\u003e\n\u003c/div\u003e\n\u003cscript\u003e\n    var vue = new Vue({\n        el: '#app', // vue挂载的位置，不能是body\n        data: {\n            name: '床前明月光',\n            num: 0\n        },\n        methods: {\n            get_data_name() {\n                console.log('属性方法')\n                return this.name.split('').reverse().join('')\n            },\n            getsub(e) {\n                this.num ++\n            },\n            set_name(){\n                this.name += 'a'\n            }\n        },\n\n        computed: {\n            getName() {\n                console.log('计算属性')\n                return this.name.split('').reverse().join('')\n            }\n        }\n    })\n\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n```\n\n### computed与watch，methods的区别\n\nmethods：可以放入函数，并且没有缓存\n\nwatch：\n\n监听，当数据发送变化时，才会触发\n\n可以得到现在的值和过去的值\n\n还可以监听路由变化\n\n和属性同名\n\n## 自定义过滤器\n\n创建一个过滤器\n\n```JavaScript\n// 自定义过滤器\nfilters:{\n    // 截取最后一个字符\n    getLastChar(item){\n        return item.substr(item.length-1,1)\n    }\n}\n```\n\n使用过滤器\n\n```HTML\n\u003cli v-for=\"item in student_list\" :key=\"item.id\"\u003e\n    {{item.name|getLastChar }} -- {{ item.addr }}\n\u003c/li\u003e\n```\n\n### 时间过滤器\n\n![](http://python.fengfengzhidao.com/1031/20211208215339.png)\n\n```HTML\n\u003cdiv id=\"app\"\u003e\n    \u003cdiv\u003e\n        当前时间：{{ now|get_date }}\n    \u003c/div\u003e\n    \u003cul\u003e\n        \u003cli v-for=\"item in date_list\" :key=\"item.id\"\u003e\n            id：{{ item.id }} 时间：{{ item.date|get_date }}\n        \u003c/li\u003e\n    \u003c/ul\u003e\n    \u003cdiv\u003e\n        时间过滤\n    \u003c/div\u003e\n    \u003cul\u003e\n        \u003cli v-for=\"item in date_list\" :key=\"item.id\"\u003e\n            id：{{ item.id }} 时间：{{ item.date|time_to_filter }}\n        \u003c/li\u003e\n    \u003c/ul\u003e\n\u003c/div\u003e\n\u003cscript src=\"../vue.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n    function getDateDiff(datestamp) {\n        var publishTime = datestamp / 1000,\n            d_seconds,\n            d_minutes,\n            d_hours,\n            d_days,\n            timeNow = parseInt(new Date().getTime() / 1000),\n            d,\n            date = new Date(publishTime * 1000),\n            Y = date.getFullYear(),\n            M = date.getMonth() + 1,\n            D = date.getDate(),\n            H = date.getHours(),\n            m = date.getMinutes(),\n            s = date.getSeconds();\n        //小于10的在前面补0\n        if (M \u003c 10) {\n            M = '0' + M;\n        }\n        if (D \u003c 10) {\n            D = '0' + D;\n        }\n        if (H \u003c 10) {\n            H = '0' + H;\n        }\n        if (m \u003c 10) {\n            m = '0' + m;\n        }\n        if (s \u003c 10) {\n            s = '0' + s;\n        }\n        d = timeNow - publishTime;\n        d_days = parseInt(d / 86400);\n        d_hours = parseInt(d / 3600);\n        d_minutes = parseInt(d / 60);\n        d_seconds = parseInt(d);\n        if (d_days \u003e 0 \u0026\u0026 d_days \u003c 30) {\n            return d_days + '天前';\n        } else if (d_days \u003c= 0 \u0026\u0026 d_hours \u003e 0) {\n            return d_hours + '小时前';\n        } else if (d_hours \u003c= 0 \u0026\u0026 d_minutes \u003e 0) {\n            return d_minutes + '分钟前';\n        } else if (d_seconds \u003c 60) {\n            if (d_seconds \u003c= 0) {\n                return '刚刚发表';\n            } else {\n                return d_seconds + '秒前';\n            }\n        } else if (d_days \u003e= 30) {\n            return Y + '-' + M + '-' + D + ' ' + H + ':' + m;\n        }\n    }\n\n    var vue = new Vue({\n        el: '#app',\n        data: {\n            now: '2021-12-8 22:01:11',\n            date_list: [\n                {id: 1, date: '2021-12-8 22:02:11'},\n                {id: 2, date: '2021-12-6 22:02:21'},\n                {id: 3, date: '2021-12-8 21:01:14'},\n                {id: 4, date: '2021-12-5 20:12:11'},\n            ]\n        },\n        filters: {\n            // 年-月-日\n            get_date(date_str) {\n                // date，传递的参数\n\n                // 字符串转时间对象\n                let date = new Date(date_str)\n                return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`\n            },\n            time_to_filter(date_str) {\n                // 字符串-\u003e对象-\u003e时间戳\n                // 和当前时间做差，算出相差的时间（多少秒，多少分）\n                // 字符串转时间对象-\u003e时间戳\n                let datestamp = new Date(date_str).getTime()\n                return getDateDiff(datestamp)\n            }\n        }\n    })\n\u003c/script\u003e\n```\n\n### 参数问题\n\n自定义过滤器也是可以接受参数，它的书写语法是\n\n```JavaScript\n\u003cli v-for=\"item in date_list\" :key=\"item.id\"\u003e\n    id：{{ item.id }} 时间：{{ item.date|time_to_filter('a', 'b') }}\n\u003c/li\u003e\n\n\n...\n\nfilters: {\n    ...\n    time_to_filter(date_str, a, b) {\n        // date_str  -\u003e  '自身的值'\n        // a  -\u003e 'a'\n        // b  -\u003e 'b'\n        \n        return date_str\n    }\n}\n\n```\n\n过滤器方法的第一个参数就是调用者本身的值，第二个参数之后就是调用的实参\n\n并且支持链式过滤器\n\n```HTML\n\u003cdiv\u003e{{now|get_now|get_now1}}\u003c/div\u003e\n```\n\n\n\n\n\n## 全局方法\n\n需要将属性和方法挂载到`Vue.prototype`上\n\n```JavaScript\nVue.prototype.$com = \"全局变量\"\n\nlet global_method = ()=\u003e{\n    return \"全局方法\"\n}\nfunction add(){\n    return \"全局 add 方法\"\n}\nVue.prototype.$global_method = global_method\nVue.prototype.$add = add\n```\n\n使用\n\n```HTML\n\u003cdiv\u003e\n    {{ $global_method() }}\n\u003c/div\u003e\n\u003cdiv\u003e\n    {{ $add() }}\n\u003c/div\u003e\n```\n\n### 全局过滤器\n\n```JavaScript\n// 全局过滤器\nlet global_filter = (item) =\u003e {\n    return item + '--global'\n}\n// 注册全局过滤器   (过滤器名称，方法)\nVue.filter('global_filter', global_filter)\n```\n\n使用全局过滤器\n\n```HTML\n\u003cdiv\u003e\n    {{ $com|global_filter }}\n\u003c/div\u003e\n```\n\n\n\n## 局部组件\n\n```HTML\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003ctitle\u003e局部组件\u003c/title\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\u003cdiv id=\"app\"\u003e\n    \u003cApp\u003e\u003c/App\u003e  \u003c!--使用子组件--\u003e\n\u003c/div\u003e\n\u003cscript src=\"../vue.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n    // app 组件 html css js\n    const App = {\n        data() {\n            // 在组件中使用数据，需要 使用函数，返回值返回对象  data(){ return {} }\n            return {msg: 'hello'}\n        },\n        template: `\n          \u003cdiv\u003e\n              \u003ch3\u003e我是app组件\u003c/h3\u003e\n              \u003cp\u003e{{ msg }}\u003c/p\u003e\n              \u003cbutton @click=\"handleClick\"\u003e按钮\u003c/button\u003e\n          \u003c/div\u003e\n\n        `,\n        methods: {\n            handleClick() {\n                this.msg = 'world'\n            }\n        }\n    }\n    new Vue({\n        el: '#app',\n        data: {},\n        components: {\n            App  // 挂载子组件\n        }\n    })\n\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n```\n\n## 全局组件\n\n```HTML\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003ctitle\u003e局部组件\u003c/title\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\u003cdiv id=\"app\"\u003e\n    \u003cApp\u003e\u003c/App\u003e  \u003c!--使用子组件--\u003e\n\u003c/div\u003e\n\u003cscript src=\"../vue.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n    // app 组件 html css js\n    // 只要创建组件，就可以在template中使用\n    Vue.component('Vheader', {\n        template: `\n            \u003cdiv\u003e\n                \u003cspan\u003e我是导航组件\u003c/span\u003e\n            \u003c/div\u003e\n        `\n    })\n    Vue.component('Vfooter', {\n        template: `\n            \u003cdiv\u003e\n                \u003cspan\u003e我是底部组件\u003c/span\u003e\n            \u003c/div\u003e\n        `\n    })\n    Vue.component('Vsider', {\n        data() {\n            return {msg: '侧边栏'};\n        },\n        template: `\n          \u003cdiv\u003e\n              \u003cspan class=\"sider_title\"\u003e我是侧边栏组件\u003c/span\u003e\n              \u003cspan\u003e{{ msg }}\u003c/span\u003e\n          \u003c/div\u003e\n        `,\n    })\n    const Vbtn = {\n        template: `\n            \u003cbutton\u003e按钮\u003c/button\u003e\n        `\n    }\n\n    const App = {\n        data() {\n            // 在组件中使用数据，需要 使用函数，返回值返回对象  data(){ return {} }\n            return {msg: 'hello'}\n        },\n        template: `\n          \u003cdiv\u003e\n          \u003cVheader\u003e\u003c/Vheader\u003e\n          \u003cVbtn\u003e\u003c/Vbtn\u003e\n          \u003cVbtn\u003e\u003c/Vbtn\u003e\n          \u003cVbtn\u003e\u003c/Vbtn\u003e\n          \u003cVsider\u003e\u003c/Vsider\u003e\n          \u003cVfooter\u003e\u003c/Vfooter\u003e\n          \u003ch3\u003e我是app组件\u003c/h3\u003e\n          \u003cp\u003e{{ msg }}\u003c/p\u003e\n          \u003cbutton @click=\"handleClick\"\u003e按钮\u003c/button\u003e\n          \u003c/div\u003e\n\n        `,\n        components: {\n          Vbtn  \n        },\n        methods: {\n            handleClick() {\n                this.msg = 'world'\n            }\n        }\n    }\n    new Vue({\n        el: '#app',\n        data: {},\n        components: {\n            App  // 挂载子组件\n        }\n    })\n\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n```\n\n## 组件通信\n\n### 父传子\n\n父传子：通过`props`来进行通信\n\n```HTML\n1. 在自组件中声明props接收在父组件挂载的属性\n2. 可以在自组件的template在任意使用\n3， 在父组件绑定自定义的属性\n```\n\n\n\n### props传入一个对象\n\n```JavaScript\nprops: ['title', 'likes', 'isPublished', 'commentIds', 'author']\n\n\nprops: {\n  title: String,\n  likes: Number,\n  isPublished: Boolean,\n  commentIds: Array,\n  author: Object,\n  callback: Function,\n  contactsPromise: Promise // or any other constructor\n}\n\n\nprops: {\n    data: {\n        type: String,  // 类型\n        required: true,  // 必填项\n        default: '张三'  // 如果没传值，那么这个默认值就是它\n    }\n}\n\n```\n\n\n\n```HTML\n\u003cdiv id=\"app\"\u003e\n    \u003cApp\u003e\u003c/App\u003e  \u003c!--使用子组件--\u003e\n\u003c/div\u003e\n\u003cscript src=\"../vue.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n    Vue.component('Child', {\n        template: `\n          \u003cdiv\u003e\n          \u003ch3\u003e我是子组件\u003c/h3\u003e\n          \u003ch4\u003e{{ childData }}\u003c/h4\u003e\n          \u003c/div\u003e\n        `,\n        props: ['childData']\n    })\n    const App = {\n        data() {\n            // 在组件中使用数据，需要 使用函数，返回值返回对象  data(){ return {} }\n            return {msg: '我是父组件传递的值'}\n        },\n        template: `\n          \u003cdiv\u003e\n          \u003cChild :childData=\"msg\"\u003e\u003c/Child\u003e\n          \u003cp\u003e{{ msg }}\u003c/p\u003e\n          \u003c/div\u003e\n\n        `,\n    }\n    new Vue({\n        el: '#app',\n        data: {},\n        components: {\n            App  // 挂载子组件\n        }\n    })\n\u003c/script\u003e\n```\n\n\n\n### created与mounted\n\n```JavaScript\ncreated(){\n    console.log(this.data, 1)\n},\nmounted(){\n    console.log(this.data, 2)\n}\n```\n\n\n\n### 子传父\n\n```HTML\n1. 在父组件中，自组件上绑定自定义事件\n2. 在自组件中，触发原生的事件，在事件函数通过this.$emit触发自定义的事件\n```\n\n父组件\n\n```JavaScript\n\u003ccomment1 v-on:eff=\"eff\"\u003e\u003c/comment1\u003e\n\ncomponents: {\n    comment1\n},\nmethods: {\n    eff(data) {\n        // data 是子组件传递的数据\n        console.log('父组件被调用了', data)\n    }\n}\n\n```\n\n子组件\n\n```JavaScript\nlet comment1 = {\n    template: `\n      \u003cdiv\u003e\n      \u003cul\u003e\n        \u003cli\u003e兰州拉面\u003c/li\u003e\n        \u003cli\u003e哈尔滨啤酒\u003c/li\u003e\n        \u003cli\u003e四川担担面\u003c/li\u003e\n        \u003cbutton @click=\"add\"\u003e点我触发父组件方法\u003c/button\u003e\n      \u003c/ul\u003e\n      \u003c/div\u003e`,\n    methods: {\n        add() {\n            this.$emit('eff', {name: '子组件传来的数据'})\n        }\n    }\n\n}\n```\n\n## 平行组件\n\n```HTML\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003ctitle\u003e平行组件\u003c/title\u003e\n    \u003cstyle\u003e\n        body {\n            margin: 0;\n        }\n\n        #app {\n            display: flex;\n        }\n\n        #app \u003e div {\n            width: 50%;\n            height: 200px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n\n        #gouwuc {\n            background-color: #3a8ee6;\n        }\n\n        #get {\n            background-color: #b3d9d9;\n        }\n    \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\u003cdiv id=\"app\"\u003e\n    \u003cApp1 id=\"gouwuc\"\u003e\u003c/App1\u003e  \u003c!--使用子组件--\u003e\n    \u003cApp2 id=\"get\"\u003e\u003c/App2\u003e  \u003c!--使用子组件--\u003e\n\u003c/div\u003e\n\u003cscript src=\"../vue.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n    let Bus = new Vue()\n    let App1 = {\n        data() {\n            return {\n                num: 100\n            }\n        },\n        template: `\n          \u003cdiv\u003e\n          购物车 商品总数{{ num }}\n          \u003c/div\u003e`,\n        mounted(){\n            Bus.$on('add', (data)=\u003e{\n                this.num ++\n            })\n        }\n    }\n    let App2 = {\n        data() {\n            return {\n                num: 100\n            }\n        },\n        methods: {\n            add() {\n                Bus.$emit('add', {msg: '你的好兄弟又下单啦'})\n            }\n        },\n        template: `\n          \u003cdiv\u003e\n          \u003cbutton @click=\"add\"\u003e加入购物车\u003c/button\u003e\n          \u003c/div\u003e`\n    }\n    new Vue({\n        el: '#app',\n        data: {},\n        components: {\n            App1,\n            App2,\n        }\n    })\n\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n```\n\n多次嵌套取值\n\n```HTML\n1. provide  提供变量  函数(){return {} },\n2. inject  接收变量 inject: [],\n```\n\n\n\n## 匿名插槽\n\n```JavaScript\nlet base_layout = {\n    data() {\n        return {}\n    },\n    template: `\n      \u003cdiv\u003e\n      \u003cheader\u003e\n        \u003cslot\u003e我是页头\u003c/slot\u003e\n      \u003c/header\u003e\n      \u003c/div\u003e`\n}\nnew Vue({\n    el: '#app',\n    components: {\n        base_layout\n    }\n})\n```\n\n在模板中把想要替换的东西放在`\u003cslot\u003e`标签中，这就是一个占位符\n\n```HTML\n\u003cbase_layout\u003e实际的内容\u003c/base_layout\u003e\n```\n\n这样就会将标签中的内容去代替slot中的内容\n\n如果slot都没有名字，那么如果有多个slot，就会全部进行替换\n\n## 具名插槽\n\n如果你的模板中需要有多个地方被替换\n\n那么匿名插槽就不太合适了，我们给每个插槽都起一个别名\n\n```JavaScript\nlet base_layout = {\n    data() {\n        return {}\n    },\n    template: `\n      \u003cdiv\u003e\n      \u003cheader\u003e\n        \u003cslot name=\"header\"\u003e我是页头\u003c/slot\u003e\n      \u003c/header\u003e\n      \u003cmain\u003e\n        \u003cslot name=\"main\"\u003e我是内容\u003c/slot\u003e\n      \u003c/main\u003e\n      \u003cfooter\u003e\n        \u003cslot name=\"footer\"\u003e我是页脚\u003c/slot\u003e\n      \u003c/footer\u003e\n      \u003c/div\u003e`\n}\n```\n\n这样我们在进行替换的时候，指明要替换哪个slot就OK了\n\n```HTML\n\u003cbase_layout\u003e\n    \u003ctemplate v-slot:header\u003e\n        头部\n    \u003c/template\u003e\n    \u003ctemplate v-slot:main\u003e\n        身体\n    \u003c/template\u003e\n    \u003ctemplate v-slot:footer\u003e\n        尾部\n    \u003c/template\u003e\n\u003c/base_layout\u003e\n```\n\n注意v-slot的写法\n\n```HTML\nv-slot:header\n```\n\n`v-slot:` 可以简写为 #\n\n```HTML\n \u003cbase_layout\u003e\n    \u003ctemplate v-slot:header\u003e\n        \u003cchild\u003e\u003c/child\u003e\n        \u003cdiv\u003e\n            哈哈哈哈\n        \u003c/div\u003e\n    \u003c/template\u003e\n    \u003ctemplate #main\u003e\n        身体\n    \u003c/template\u003e\n    \u003ctemplate v-slot:footer\u003e\n        尾部\n    \u003c/template\u003e\n\u003c/base_layout\u003e\n```\n\n\u003e 我们在替换的时候，是可以写任意标签的，也就是说，在替换的时候，你也可以将组件写入插槽中\n\n```HTML\n\u003cbase_layout\u003e\n    \u003ctemplate v-slot:header\u003e\n        \u003cchild\u003e\u003c/child\u003e\n        \u003cdiv\u003e\n            哈哈哈哈\n        \u003c/div\u003e\n    \u003c/template\u003e\n    \u003ctemplate v-slot:main\u003e\n        身体\n    \u003c/template\u003e\n    \u003ctemplate v-slot:footer\u003e\n        尾部\n    \u003c/template\u003e\n\u003c/base_layout\u003e\n```\n\n\n\n## 作用域插槽\n\n```JavaScript\nlet base_layout = {\n    data() {\n        return {\n            user: {\n                name: '枫枫',\n                xin: '知道'\n            }\n        }\n    },\n    template: `\n      \u003cdiv\u003e\n      \u003cmain\u003e\n        \u003cslot :user=\"user\"\u003e{{ user.xin }}\u003c/slot\u003e\n      \u003c/main\u003e\n      \u003c/div\u003e`\n}\n```\n\n在子组件中，我在插槽里面显示的是user的xin，如果我想让它显示user的name应该怎么做呢\n\n如果我们直接在父组件调用的时候这样写\n\n```HTML\n\u003cbase_layout\u003e\n    {{ user.name }}\n\u003c/base_layout\u003e\n```\n\n这是错误的写法，因为我们的user是被定义再自组件中的，在父组件中就无法使用这个user，所以就会报错啦\n\n那么我们就应该将这个user对象传递给父组件\n\n在子组件中\n\n```HTML\n\u003cslot :user=\"user\"\u003e{{ user.xin }}\u003c/slot\u003e\n```\n\n通过动态属性的方式将user传递给父组件\n\n在父组件中\n\n```HTML\n\u003cbase_layout\u003e\n    \u003ctemplate v-slot:default=\"slotProps\"\u003e\n        {{ slotProps.user.name }}\n    \u003c/template\u003e\n\u003c/base_layout\u003e\n```\n\n接收传递来的user即可\n\nslotProps可以是你自己定义的名字，它里面存储的是这样的\n\n```HTML\n{ \"user\": { \"name\": \"枫枫\", \"xin\": \"知道\" } }\n```\n\n所以我们将slotProps中的user中的name传递给子组件，就可以做到数据动态替换\n\n\n\n如果你的组件中，有且只有一个默认插槽，那么在替换的时候，是可以这么做的\n\n```HTML\n\u003cbase_layout v-slot:default=\"slotProps\"\u003e\n    {{ slotProps }}\n\u003c/base_layout\u003e\n```\n\n但是，如果出现了具名插槽，这样会导致作用域混乱\n\n我们应该这样使用\n\n```JavaScript\nlet base_1 = {\n    data(){\n        return {\n            user: {\n                name: '枫枫知道',\n                age: 21\n            }\n        }\n    },\n    template: `\n    \u003cdiv\u003e\n    \u003cheader\u003e\n      我的名字是 \u003cslot :user=\"user\" name=\"name\"\u003e{{ user.name }}\u003c/slot\u003e，年龄是\u003cslot :user=\"user\" name=\"age\"\u003e{{ user.age }}\u003c/slot\u003e\n    \u003c/header\u003e\n    \u003c/div\u003e`\n}\n```\n\n\n\n```HTML\n\u003cbase_1\u003e\n    \u003ctemplate v-slot:name\u003e张子枫\u003c/template\u003e\n    \u003ctemplate v-slot:age=\"slotBase\"\u003e{{ slotBase }}\u003c/template\u003e\n\u003c/base_1\u003e\n```\n\n\n\n## 动态组件\n\n\u003e `\u003ccomponent\u003e`元素是vue 里面的一个内置组件。\n在\u003ccomponent\u003e里面使用 v-bind: is，可以实现动态组件的效果。\n\n## 自定义指令\n\n前面使用的v-if， v-show，以及v-for这些都是Vue为我们提供的内置指令\n\n当然，我们也可以自己自定义一个指令\n\n### 局部自定义指令\n\n```JavaScript\ndirectives: {\n    focus: {\n        // 指令的定义\n        // 使用这个指令就会聚焦在输入框中\n        inserted: function (el) {\n            el.focus()\n        }\n    }\n}\n```\n\n使用\n\n```HTML\n\u003cinput type=\"text\" v-focus\u003e\n```\n\n在focus中有几个钩子函数，需要了解\n\n- `bind`：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。\n- `inserted`：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。\n- `update`：所在组件的 VNode 更新时调用，**但是可能发生在其子 VNode 更新之前**。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新 (详细的钩子函数参数见下)。\n\n\n\n## 绑定方法到this\n\n```JavaScript\nVue.prototype.meta_ = () =\u003e {\n    console.log(1)\n}\n```\n\n在created生命周期中不能使用\n\n可以在mounted方法中使用","look_count":0,"comment_count":0,"digg_count":0,"collects_count":0,"user_id":1,"user_nick_name":"admin","user_avatar":"/uploads/avatar/default.png","category":"前端课程","source":"","link":"","banner_id":16,"banner_url":"/uploads/file/105747KJAJa.jpg","tags":["前端","vue"]},"id":"8UgNHYcBHDYvTeDligHz"},{"row":{"id":"","created_at":"2023-03-23 20:33:47","updated_at":"2023-03-28 00:55:31","title":"首页的一些组件","keyword":"首页的一些组件","abstract":"gvb_card\n\n\n\n\u003ctemplate\u003e\n  \u003cdiv class=\"gvb_card_view\"\u003e\n    \u003cdiv class=\"title\"\u003e\n      \u003ch2\u003e{{ props.titl","content":"## gvb_card\n\n![](https://secure2.wostatic.cn/static/cTa44ze3tnkTCyjxZNpx8s/image.png?auth_key=1679573000-sPam7GzjBsRtQLFdgtnqwP-0-cf1828e035633e117aa2e201d853fe96)\n\n\n\n```Vue\n\u003ctemplate\u003e\n  \u003cdiv class=\"gvb_card_view\"\u003e\n    \u003cdiv class=\"title\"\u003e\n      \u003ch2\u003e{{ props.title }}\u003c/h2\u003e\n      \u003ca v-if=\"props.link_name!==''\" :href=\"props.link\"\u003e{{ props.link_name }}\u003c/a\u003e\n    \u003c/div\u003e\n    \u003cdiv :class=\"{body: true, top20: top20}\"\u003e\n      \u003cslot\u003e\u003c/slot\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/template\u003e\n\n\u003cscript setup\u003e\n\nconst props = defineProps({\n  title: {\n    type: String,\n  },\n  link: {\n    type: String,\n  },\n  link_name: {\n    type: String,\n  },\n  top20: {\n    type: Boolean\n  }\n})\n\n\u003c/script\u003e\n\n\u003cstyle lang=\"scss\"\u003e\n.gvb_card_view {\n\n\n  .title {\n    padding: 20px 20px 10px 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-radius: 5px 5px 0 0;\n    background-color: var(--card_bg);\n\n    h2 {\n      font-size: 20px;\n      font-weight: 600;\n      color: var(--h2);\n    }\n\n    a {\n      color: var(--text);\n    }\n  }\n\n  .body {\n    border-radius: 0 0 5px 5px;\n    background-color: var(--card_bg);\n    margin-top: 1px;\n    padding: 10px 20px 20px 20px;\n  }\n\n  .body.top20 {\n    padding: 20px;\n  }\n}\n\u003c/style\u003e\n\n```\n\n\n\n\n\n## 今日热搜\n\n```Vue\n\u003ctemplate\u003e\n  \u003cGVBCCard title=\"今日热搜\" class=\"news_card\" link_name=\"查看更多\" link=\"/news\"\u003e\n    \u003cspan class=\"index\"\u003e1\u003c/span\u003e\n    \u003ca href=\"https://s.weibo.com/weibo?q=枫枫知道\"\n       target=\"_blank\"\u003e枫枫知道\u003c/a\u003e\n    \u003cspan class=\"num\"\u003e68.7万\u003c/span\u003e\n  \u003c/GVBCCard\u003e\n\u003c/template\u003e\n\n\u003cscript setup\u003e\nimport GVBCCard from \"@/components/gvb_card.vue\"\n\n\u003c/script\u003e\n\n\u003cstyle lang=\"scss\"\u003e\n.news_card {\n  .body {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .index {\n      width: 5%;\n    }\n\n    a {\n      width: 85%;\n    }\n\n    .num {\n      width: 10%;\n      text-align: right;\n    }\n\n  }\n\n\n}\n\u003c/style\u003e\n```\n\n\n\n还没有讲到itab的新闻数据获取\n\n\n\n## 文章日历\n\n![](https://secure2.wostatic.cn/static/cxM2iKnxfBBHaMZU5C3hE9/image.png?auth_key=1679573000-chRUsJ2WFfsGGUEU8J24nK-0-5d923d9ac3688c36ed115927c028b34c)\n\n\n\n```Vue\n\u003ctemplate\u003e\n  \u003cGVBCCard title=\"文章日历\" class=\"article_calendar_card\"\u003e\n    \u003cGvbArticleCalendar :is-title=\"false\"\u003e\u003c/GvbArticleCalendar\u003e\n  \u003c/GVBCCard\u003e\n\u003c/template\u003e\n\n\u003cscript setup\u003e\nimport GVBCCard from \"@/components/gvb_card.vue\"\nimport GvbArticleCalendar from \"@/components/charts/article_calendar.vue\"\n\n\u003c/script\u003e\n```\n\n\n\n\n\n## 独家广告\n\n![](https://secure2.wostatic.cn/static/4rsseEtywbjJWwPbugdNbS/image.png?auth_key=1679573000-sKJ7R7hgDtWKc2WSLx6fzi-0-0365d76a4e6dd48ce862b83d2ffdca06)\n\n\n\n```Vue\n\u003ctemplate\u003e\n  \u003cGVBCCard title=\"独家广告\" class=\"advert_card\"\u003e\n    \u003ca-carousel arrows autoplay :autoplaySpeed=\"3000\" class=\"advert_carousel\"\u003e\n      \u003cdiv class=\"advert_image\" v-for=\"item in data.advert_list\" :key=\"item.id\"\u003e\n        \u003ca :href=\"item.href\" target=\"_blank\"\u003e\u003cimg :src=\"item.images\" alt=\"\"\u003e\u003c/a\u003e\n      \u003c/div\u003e\n      \u003ctemplate #prevArrow\u003e\n        \u003cdiv class=\"default_slick-arrow\" style=\"left: 10px\"\u003e\n          \u003ci class=\"fa fa-chevron-circle-left carousel_icon\"\u003e\u003c/i\u003e\n        \u003c/div\u003e\n      \u003c/template\u003e\n      \u003ctemplate #nextArrow\u003e\n        \u003cdiv class=\"default_slick-arrow\" style=\"right: 10px;\"\u003e\n          \u003ci class=\"fa fa-chevron-circle-right carousel_icon\"\u003e\u003c/i\u003e\n        \u003c/div\u003e\n      \u003c/template\u003e\n    \u003c/a-carousel\u003e\n  \u003c/GVBCCard\u003e\n\u003c/template\u003e\n\n\u003cscript setup\u003e\nimport GVBCCard from \"@/components/gvb_card.vue\"\nimport {reactive} from \"vue\";\n\nconst data = reactive({\n  advert_list: [\n    {\n      id: 1,\n      href: \"https://www.bilibili.com/video/BV1xg411t7RZ/\",\n      images: \"http://python.fengfengzhidao.com/pic/20221112205133.png\",\n    },\n    {\n      id: 2,\n      href: \"https://www.bilibili.com/video/BV1xg411t7RZ/\",\n      images: \"http://python.fengfengzhidao.com/pic/20220709141219.png\",\n    }\n  ]\n})\n\n\u003c/script\u003e\n\n\u003cstyle lang=\"scss\"\u003e\n.advert_carousel {\n  height: 200px;\n\n  .default_slick-arrow {\n    z-index: 10;\n  }\n\n  .default_slick-arrow:before {\n    display: none;\n  }\n\n  .carousel_icon {\n    color: white;\n    font-size: 20px;\n  }\n\n  .advert_image {\n    height: 200px;\n\n\n    img {\n      height: 100%;\n      object-fit: cover;\n      display: block;\n      width: 100%;\n    }\n\n  }\n}\n\u003c/style\u003e\n```\n\n\n\n\n\n## 标签云\n\n![](https://secure2.wostatic.cn/static/5SPm5yygLb4sFhWQtYQB2X/image.png?auth_key=1679573000-qp2q5eBWikZpmjyErSvrjc-0-05badb447ee9b088038f5083510a9c33)\n\n```Vue\n\u003ctemplate\u003e\n\n  \u003cGVBCCard title=\"标签云\" top20 class=\"tags_cloud_card\"\u003e\n    \u003cul class=\"tags_cloud_ul\"\u003e\n      \u003cli v-for=\"(item, index) in data.tag_list\" :key=\"index\"\u003e\n        \u003cspan\u003e{{ item.tag }}\u003c/span\u003e\n        \u003ci\u003e{{ item.count }}\u003c/i\u003e\n      \u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/GVBCCard\u003e\n\n\u003c/template\u003e\n\n\u003cscript setup\u003e\nimport GVBCCard from \"@/components/gvb_card.vue\"\nimport {reactive} from \"vue\";\n\nconst data = reactive({\n  tag_list: [\n    {\"tag\": \"后台\", \"count\": 8},\n    {\"tag\": \"前端\", \"count\": 2},\n    {\"tag\": \"后台\", \"count\": 15},\n    {\"tag\": \"后台\", \"count\": 28},\n    {\"tag\": \"python\", \"count\": 63},\n    {\"tag\": \"后台\", \"count\": 8},\n    {\"tag\": \"后台\", \"count\": 8},\n    {\"tag\": \"后台\", \"count\": 8},\n    {\"tag\": \"后台\", \"count\": 8},\n    {\"tag\": \"后台\", \"count\": 8},\n    {\"tag\": \"后台\", \"count\": 8},\n    {\"tag\": \"后台\", \"count\": 8},\n  ]\n})\n\n\n\u003c/script\u003e\n\n\u003cstyle lang=\"scss\"\u003e\n\n\n@keyframes move_box {\n  0% {\n    left: 0;\n    top: 0;\n  }\n\n  25% {\n    left: calc(100% - 20px);\n    top: 0;\n  }\n\n  50% {\n    top: calc(100% - 20px);\n    left: calc(100% - 20px)\n  }\n\n  75% {\n    left: 0;\n    top: calc(100% - 20px);\n  }\n\n  to {\n    left: 0;\n    top: 0\n  }\n}\n\n.tags_cloud_card .body {\n  position: relative;\n\n  \u0026::before {\n    display: block;\n    position: absolute;\n    content: \"\";\n    width: 20px;\n    height: 20px;\n    background-color: var(--active);\n    -webkit-animation-name: move_box;\n    animation-name: move_box;\n    -webkit-animation-duration: 5s;\n    animation-duration: 5s;\n    -webkit-animation-iteration-count: infinite;\n    animation-iteration-count: infinite;\n  }\n}\n\n\n.tags_cloud_ul {\n  display: flex;\n  flex-wrap: wrap;\n\n  li {\n    width: 33.33%;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--h2);\n  }\n\n  li:nth-child(6n+1), li:nth-child(6n+2), li:nth-child(6n+3) {\n    background-color: var(--bg)\n  }\n\n  li:nth-child(3n+1), li:nth-child(3n+2) {\n    border-right: 1px solid var(--bg_darken)\n  }\n}\n\u003c/style\u003e\n```\n\n\n\n\n\n## 站点信息\n\n\n\n![](https://secure2.wostatic.cn/static/qkRFUnmVMBjj6KfeCkw529/image.png?auth_key=1679573000-vtgeecKSVZmqqi64HRN6sK-0-3ba3bd078104b3ef40371bb51903f163)\n\n\n\n1. 时间转中文年月日\n2. 动态时间\n3. 文章访问量\n\n\n\n```Vue\n\u003ctemplate\u003e\n\n  \u003cGVBCCard title=\"站点信息\" class=\"site_card\"\u003e\n    \u003cdiv\u003e\u003cb\u003e建站时间\u003c/b\u003e\u003cspan\u003e2022年12月06日\u003c/span\u003e\u003c/div\u003e\n    \u003cdiv\u003e\u003cb\u003e网站程序\u003c/b\u003e\u003cspan\u003eVue3+Gin\u003c/span\u003e\u003c/div\u003e\n    \u003cdiv\u003e\u003cb\u003e运行时间\u003c/b\u003e\u003cspan\u003e106天15时1分24秒\u003c/span\u003e\u003c/div\u003e\n    \u003cdiv\u003e\u003cb\u003e总访问量\u003c/b\u003e\u003cspan\u003e856235\u003c/span\u003e\u003c/div\u003e\n    \u003cdiv\u003e\u003cb\u003e博客文章\u003c/b\u003e\u003cspan\u003e17\u003c/span\u003e\u003c/div\u003e\n    \u003cdiv\u003e\n      \u003cb\u003e联系我\u003c/b\u003e\n      \u003cdiv class=\"my_image\"\u003e\n        \u003cdiv class=\"qq_image\"\u003e\n          \u003cimg src=\"http://www.fengfengzhidao.com/static/my/img/footer/qq.png\" alt=\"\"\u003e\n          \u003cspan\u003e我的QQ\u003c/span\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"wechat_image\"\u003e\n          \u003cimg src=\"http://www.fengfengzhidao.com/static/my/img/footer/wechat.png\" alt=\"\"\u003e\n          \u003cspan\u003e我的微信\u003c/span\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n\n    \u003c/div\u003e\n  \u003c/GVBCCard\u003e\n\u003c/template\u003e\n\n\u003cscript setup\u003e\nimport GVBCCard from \"@/components/gvb_card.vue\"\nimport {reactive} from \"vue\";\n\nconst data = reactive({\n  date: \"\",\n  look_count: 2003412,\n  article_count: 45,\n  qq_url: \"\",\n  wechat_url: \"\"\n})\n\n\u003c/script\u003e\n\n\u003cstyle lang=\"scss\"\u003e\n.site_card {\n  .body {\n    \u003e div {\n      font-size: 16px;\n      margin-bottom: 8px;\n\n      b {\n        margin-right: 5px;\n\n        \u0026::after {\n          content: \":\";\n        }\n      }\n    }\n\n    .my_image {\n      display: flex;\n      margin-top: 10px;\n      justify-content: space-around;\n\n      \u003e div {\n        width: 50%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        img {\n          width: 100px;\n          height: 100px;\n        }\n      }\n    }\n  }\n}\n\u003c/style\u003e\n```\n\n\n\n\n\n## 意见反馈\n\n![](https://secure2.wostatic.cn/static/bsKz1v11VrDSSZi23LvN3Y/image.png?auth_key=1679573000-6ACGm6H89EBpDiWZ2mUCHd-0-5d8110dfcece0174d827fcdf6970e81d)\n\n```Vue\n\u003ctemplate\u003e\n  \u003cGVBCCard title=\"意见反馈\" class=\"fade_back_card\"\u003e\n    \u003ca-input placeholder=\"请输入邮箱\" v-model:value=\"data.email\"\u003e\u003c/a-input\u003e\n    \u003ca-textarea placeholder=\"请输入反馈内容\" v-model:value=\"data.content\" :auto-size=\"{ minRows: 3, maxRows: 5 }\"\n                style=\"margin-top: 10px\"\u003e\u003c/a-textarea\u003e\n    \u003ca-button type=\"primary\" style=\"width: 100%; margin-top: 10px\" @click=\"okHandler\"\u003e提交\u003c/a-button\u003e\n  \u003c/GVBCCard\u003e\n\n\u003c/template\u003e\n\n\u003cscript setup\u003e\nimport GVBCCard from \"@/components/gvb_card.vue\"\nimport {reactive} from \"vue\";\nimport {message} from \"ant-design-vue\";\n\nconst data = reactive({\n  email: \"\",\n  content: \"\"\n})\n\nfunction okHandler() {\n  data.content = \"\"\n  message.success(\"反馈成功\")\n}\n\u003c/script\u003e\n\n\u003cstyle scoped\u003e\n\n\u003c/style\u003e\n```\n\n\n\n\n\n## 个人名片\n\n![](https://secure2.wostatic.cn/static/vEm5qk3NRpLdtAV7ubmVWw/image.png?auth_key=1679573000-ctwyF9No5w9z8X711WTgCe-0-4435d66cea5c325b9d9da3dabacab2a1)\n\n1. 24节气的判断\n2. 24节气图片的显示\n\n\n\n```Vue\n\u003ctemplate\u003e\n  \u003cdiv class=\"my_card\"\u003e\n    \u003cdiv class=\"title\"\u003e\n      \u003ch3\u003e个人名片\u003c/h3\u003e\n      \u003ch4\u003eMY\u003c/h4\u003e\n      \u003ch4\u003ePROFILE\u003c/h4\u003e\n      \u003cimg src=\"http://www.fengfengzhidao.com/static/my/img/footer/wechat.png\" alt=\"我的微信\"\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"jieqi\"\u003e\n      \u003cimg :title=\"data.title\" :src=\"data.src\" :style=\"{transform: data.transform}\" alt=\"24节气\"\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"footer\"\u003e\n      \u003cp\u003eNAME \u003cspan\u003e枫枫知道\u003c/span\u003e\u003c/p\u003e\n      \u003cp\u003eJOB \u003cspan\u003e全栈开发\u003c/span\u003e\u003c/p\u003e\n      \u003cp\u003eADDR \u003cspan\u003e湖南长沙\u003c/span\u003e\u003c/p\u003e\n      \u003cp\u003eWEB \u003ca target=\"_blank\" href=\"http://www.fengfengzhidao.com\"\u003ewww.fengfengzhidao.com\u003c/a\u003e\u003c/p\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/template\u003e\n\n\u003cscript setup\u003e\n\nimport {reactive} from \"vue\";\n\nconst data = reactive({\n  title: \"立春\",\n  transform: \"translate(0px, -223px)\",\n  src: \"/static/24_hourse/0.png\"\n})\n\nfunction getjq(yyyy, mm, dd) {\n\n  mm = mm - 1;\n\n  let sTermInfo = new Array(0, 21208, 42467, 63836, 85337, 107014, 128867, 150921, 173149, 195551, 218072, 240693, 263343, 285989, 308563, 331033, 353350, 375494, 397447, 419210, 440795, 462224, 483532, 504758);\n\n  let solarTerm = new Array(\"小寒\", \"大寒\", \"立春\", \"雨水\", \"惊蛰\", \"春分\", \"清明\", \"谷雨\", \"立夏\", \"小满\", \"芒种\", \"夏至\", \"小暑\", \"大暑\", \"立秋\", \"处暑\", \"白露\", \"秋分\", \"寒露\", \"霜降\", \"立冬\", \"小雪\", \"大雪\", \"冬至\");\n\n  let solarTerms = \"\";\n\n  while (solarTerms === \"\") {\n    let tmp1 = new Date((31556925974.7 * (yyyy - 1900) + sTermInfo[mm * 2 + 1] * 60000) + Date.UTC(1900, 0, 6, 2, 5));\n    let tmp2 = tmp1.getUTCDate();\n    if (tmp2 === dd) solarTerms = solarTerm[mm * 2 + 1];\n    tmp1 = new Date((31556925974.7 * (yyyy - 1900) + sTermInfo[mm * 2] * 60000) + Date.UTC(1900, 0, 6, 2, 5));\n    tmp2 = tmp1.getUTCDate();\n    if (tmp2 === dd) solarTerms = solarTerm[mm * 2];\n    if (dd \u003e 1) {\n      dd = dd - 1;\n    } else {\n      mm = mm - 1;\n      if (mm \u003c 0) {\n        yyyy = yyyy - 1;\n        mm = 11;\n      }\n      dd = 31;\n    }\n  }\n  return solarTerms;\n}\n\nfunction set_jieqi_main() {\n  let today = new Date();\n  let year = today.getFullYear()\n  let month = today.getMonth() + 1; //获取当前月份(0-11,0代表1月)\n  let day = today.getDate(); //获取当前日(1-31)\n\n  let hourse_img = {\n    '立春': ['0.png', '立春', 'translate(0px, -223px)'],\n    '雨水': ['1.png', '雨水', 'translate(0px, -207px)'],\n    '惊蛰': ['2.png', '惊蛰', 'translate(0px, -223px)'],\n    '春分': ['3.png', '春分', 'translate(0px, -190px)'],\n    '清明': ['4.png', '清明', 'translate(0px, -279px)'],\n    '谷雨': ['5.png', '谷雨', 'translate(0px, -239px)'],\n    '立夏': ['6.png', '立夏', 'translate(0px, -210px)'],\n    '小满': ['7.png', '小满', 'translate(0px, -226px)'],\n    '芒种': ['8.png', '芒种', 'translate(0px, -199px)'],\n    '夏至': ['9.png', '夏至', 'translate(0px, -120px)'],\n    '小暑': ['10.png', '小暑', 'translate(0px, -232px)'],\n    '大暑': ['11.png', '大暑', 'translate(0px, -117px)'],\n    '立秋': ['12.png', '立秋', 'translate(0px, -151px)'],\n    '处暑': ['13.png', '处暑', 'translate(0px, -161px)'],\n    '白露': ['14.png', '白露', 'translate(0px, -57px)'],\n    '秋分': ['15.png', '秋分', 'translate(0px, -129px)'],\n    '寒露': ['16.png', '寒露', 'translate(0px, -185px)'],\n    '霜降': ['17.png', '霜降', 'translate(0px, -181px)'],\n    '立冬': ['18.png', '立冬', 'translate(0px, -181px)'],\n    '小雪': ['19.png', '小雪', 'translate(0px, -181px)'],\n    '大雪': ['20.png', '大雪', 'translate(0px, -82px)'],\n    '冬至': ['21.png', '冬至', 'translate(0px, -242px)'],\n    '小寒': ['22.png', '小寒', 'translate(0px, -48px)'],\n    '大寒': ['23.png', '大寒', 'translate(0px, -114px)'],\n  }\n\n  let now = getjq(year, month, day)\n  let load = hourse_img[now]\n  if (load) {\n    data.title = load[1]\n    data.src = `/static/24_hourse/${load[0]}`\n    data.transform = load[2]\n    // $('#jieqiset').attr('src', `/static/24_hourse/${load[0]}`).css('transform', `${load[2]}`).attr('title', load[1])\n  }\n}\n\nset_jieqi_main()\n\u003c/script\u003e\n\n\u003cstyle lang=\"scss\"\u003e\n.my_card {\n  padding: 20px;\n  width: 100%;\n  background-color: var(--card_bg);\n  border-radius: 5px;\n  margin-bottom: 20px;\n\n  .title {\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n\n\n    h3 {\n      color: #c93535;\n      font-size: 20px;\n      font-weight: 700;\n      letter-spacing: .3em;\n      margin-bottom: 10px;\n    }\n\n    h4 {\n      color: var(--md_tag, #e0bb53);\n      text-transform: uppercase;\n      font-style: italic;\n      font-weight: 700;\n      font-size: 22px;\n      letter-spacing: .2em;\n    }\n\n    img {\n      position: absolute;\n      right: 0;\n      top: 0;\n      height: 90px;\n      width: 90px;\n    }\n  }\n\n  .jieqi {\n    width: 100%;\n    height: 215px;\n    border-radius: 5px;\n    margin: 10px 0;\n    overflow: hidden;\n    transition: all 0.3s;\n    cursor: pointer;\n\n    img {\n      width: 100%;\n    }\n\n    \u0026:hover {\n      transform: scale(1.03);\n    }\n  }\n\n  .footer {\n    p {\n      margin-bottom: 5px;\n      color: var(--font_del);\n\n      span {\n        color: var(--text);\n      }\n\n      a {\n        color: var(--active);\n      }\n    }\n  }\n}\n\u003c/style\u003e\n```\n\n\n\n\n\n## gvb_footer\n\n![](https://secure2.wostatic.cn/static/uBCHtRuWLiEn2QVt1QBLt3/image.png?auth_key=1679573000-ar34sT9gf5QnpVjQ2PCizX-0-c6e3b5a08fb6da3197b9bbc84c79a89e)\n\n```Vue\n\u003ctemplate\u003e\n  \u003cfooter class=\"gvb_footer\"\u003e\n    \u003cdiv class=\"left\"\u003e\n      \u003cp class=\"thank\"\u003eThank For\u003c/p\u003e\n      \u003cp class=\"info\"\u003e\n        \u003cimg src=\"/static/footer/tencent.png\" alt=\"\"\u003e\n        \u003cspan\u003e腾讯云服务器\u003c/span\u003e\n        \u003cimg src=\"/static/footer/tencent.png\" alt=\"\"\u003e\n        \u003cspan\u003e腾讯云SSL证书\u003c/span\u003e\n        \u003cimg src=\"/static/footer/qiniu.png\" alt=\"\"\u003e\n        \u003cspan\u003e七牛云存储\u003c/span\u003e\n      \u003c/p\u003e\n      \u003cp class=\"version\"\u003e\n        \u003cspan\u003eversion\u003c/span\u003e\n        \u003cspan\u003e7.0.1\u003c/span\u003e\n      \u003c/p\u003e\n      \u003cp\u003e建站日期：2022-03-13\u003c/p\u003e\n      \u003cp class=\"beian\"\u003e\n        \u003cimg src=\"/static/footer/badges.png\" alt=\"\"\u003e\n        \u003ca href=\"https://beian.miit.gov.cn/\"\u003e湘ICP备2021010654号-3\u003c/a\u003e\n      \u003c/p\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"right\"\u003e\n      \u003cdiv class=\"my_info\"\u003e\n        \u003cdiv class=\"qq\" title=\"我的QQ\"\u003e\n          \u003ca href=\"tencent://message/?uin=2974771769\u0026Site=\u0026Menu=yes\" title=\"向我咨询\"\u003e\n            \u003cimg class=\"show_img\" src=\"/static/footer/qq.png\" alt=\"\"\u003e\n            \u003cimg class=\"img\" src=\"/static/footer/qq_icon.svg\" alt=\"\"\u003e\n          \u003c/a\u003e\n\n        \u003c/div\u003e\n        \u003cdiv class=\"wechat\" title=\"我的微信\"\u003e\n          \u003cimg class=\"show_img\" src=\"/static/footer/wechat.png\" alt=\"\"\u003e\n          \u003cimg class=\"img\" src=\"/static/footer/wexin_icon.svg\" alt=\"\"\u003e\n        \u003c/div\u003e\n        \u003cdiv title=\"我的哔哩哔哩\"\u003e\n          \u003ca href=\"https://space.bilibili.com/359151217\" target=\"_blank\"\u003e\n            \u003cimg class=\"img\" src=\"/static/footer/bilibili_icon.svg\" alt=\"\"\u003e\n          \u003c/a\u003e\n\n        \u003c/div\u003e\n        \u003cdiv title=\"gitee\"\u003e\n          \u003ca href=\"https://gitee.com/fengfengzhidao\" target=\"_blank\"\u003e\n            \u003cimg class=\"img\" src=\"/static/footer/gitee_icon.svg\" alt=\"\"\u003e\n          \u003c/a\u003e\n        \u003c/div\u003e\n        \u003cdiv title=\"GitHub\"\u003e\n          \u003ca href=\"https://github.com/fengfengzhidao/\" target=\"_blank\"\u003e\n            \u003cimg class=\"img\" src=\"/static/footer/github_icon.svg\" alt=\"\"\u003e\n          \u003c/a\u003e\n\n        \u003c/div\u003e\n      \u003c/div\u003e\n      \u003cp\u003e\n        \u003cspan\u003e联系邮箱：2974771769@qq.com\u003c/span\u003e\n      \u003c/p\u003e\n    \u003c/div\u003e\n  \u003c/footer\u003e\n\u003c/template\u003e\n\n\u003cscript setup\u003e\n\n\u003c/script\u003e\n\n\u003cstyle lang=\"scss\"\u003e\n// 底部信息栏\n.gvb_footer {\n  display: flex;\n  padding: 25px 0;\n  width: 100%;\n  background-color: var(--card_bg);\n\n  .left, .right {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 50%;\n  }\n\n  p {\n    margin-bottom: 10px;\n    font-size: 14px;\n\n    \u0026:last-child {\n      margin-bottom: 0;\n    }\n    a{\n      color: var(--text);\n    }\n\n  }\n\n  .thank {\n    color: #26c6da;\n    font-size: 20px;\n  }\n\n  .info {\n    display: flex;\n\n    span {\n      margin-right: 10px;\n\n      \u0026:last-child {\n        margin-right: 0;\n      }\n    }\n\n    img {\n      width: 20px;\n      margin-right: 5px;\n    }\n  }\n\n  .version {\n    color: white;\n    display: flex;\n\n    span {\n      padding: 5px 10px;\n    }\n\n    span:first-child {\n      background-color: #ff9800;\n      border-bottom-left-radius: 5px;\n      border-top-left-radius: 5px;\n    }\n\n    span:last-child {\n      background-color: #26c6da;\n      border-bottom-right-radius: 5px;\n      border-top-right-radius: 5px;\n    }\n  }\n\n  .beian {\n    display: flex;\n\n    img {\n      width: 20px;\n      margin-right: 5px;\n    }\n  }\n\n  .my_info {\n    display: flex;\n    margin-bottom: 10px;\n\n    \u003e div {\n      margin-right: 20px;\n      cursor: pointer;\n\n      \u0026:last-child {\n        margin-right: 0;\n      }\n    }\n\n    .img {\n      width: 30px;\n    }\n\n    .qq, .wechat {\n      position: relative;\n\n      .show_img {\n        opacity: 0;\n        position: absolute;\n        border: 1px #f0eeee solid;\n        width: 63px;\n        left: -14px;\n        top: -10px;\n        transition: all 0.6s;\n      }\n\n      \u0026:hover {\n        .show_img {\n          opacity: 1;\n          top: -69px;\n        }\n\n      }\n    }\n  }\n\n}\n\u003c/style\u003e\n\n```","look_count":0,"comment_count":0,"digg_count":0,"collects_count":6,"user_id":1,"user_nick_name":"admin","user_avatar":"/uploads/avatar/default.png","category":"后台课程","source":"","link":"","banner_id":14,"banner_url":"/uploads/file/235920pM89Q.jpg","tags":["前端","后台"]},"id":"SU52DocBUbEPfcjaAig6"}],"mapping":{"mappings":{"properties":{"Category":{"fields":{"keyword":{"ignore_above":256,"type":"keyword"}},"type":"text"},"Tags":{"fields":{"keyword":{"ignore_above":256,"type":"keyword"}},"type":"text"},"UpdatedAt":{"fields":{"keyword":{"ignore_above":256,"type":"keyword"}},"type":"text"},"abstract":{"type":"text"},"banner_id":{"type":"integer"},"banner_url":{"type":"keyword"},"category":{"type":"keyword"},"coll_count":{"type":"long"},"collects_count":{"type":"integer"},"comment_count":{"type":"integer"},"content":{"type":"text"},"created_at":{"format":"[yyyy-MM-dd HH:mm:ss]","null_value":"null","type":"date"},"digg_count":{"type":"integer"},"id":{"fields":{"keyword":{"ignore_above":256,"type":"keyword"}},"type":"text"},"keyword":{"type":"keyword"},"link":{"type":"keyword"},"look_count":{"type":"integer"},"source":{"type":"keyword"},"tags":{"type":"keyword"},"title":{"type":"text"},"updated_at":{"format":"[yyyy-MM-dd HH:mm:ss]","null_value":"null","type":"date"},"user_avatar":{"type":"keyword"},"user_id":{"type":"integer"},"user_nick_name":{"type":"keyword"}}}}}