{
  "data": [
    {
      "row": {
        "key": "B9cKwYYBMeB77WN1l0bs",
        "body": "",
        "slug": "B9cKwYYBMeB77WN1l0bs#13.文章管理",
        "title": "13.文章管理"
      },
      "id": "CNcKwYYBMeB77WN1mEYi"
    },
    {
      "row": {
        "key": "B9cKwYYBMeB77WN1l0bs",
        "body": "后端增加了标签名称列表，文章分类列表注意事项：文章分类搜索应该注意还是不要走key这个参数去查询，不然 模糊匹配和分类搜索就只能二选一Vue\u003ctemplate\u003e  \u003cdiv\u003e    \u003cGVBTable        :columns=\"data.columns\"        base-url=\"/api/articles\"        like-title=\"搜索文章标题\"        ref=\"gvbTable\"        default-delete    \u003e      \u003ctemplate #add\u003e        \u003ca-button type=\"primary\"\u003e添加\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #edit=\"{record}\"\u003e        \u003ca-button type=\"primary\"\u003e编辑\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #cell=\"{column, record, index }\"\u003e        \u003ctemplate v-if=\"column.key === 'index'\"\u003e          \u003cspan\u003e{{ index + 1 }}\u003c/span\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'title'\"\u003e          \u003cspan class=\"gvb_article_title\" v-html=\"record.title\"\u003e\u003c/span\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'banner_url'\"\u003e          \u003cimg :src=\"'/' + record.banner_url\" alt=\"\" height=\"60\" style=\"border-radius: 5px\"\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'data'\"\u003e          \u003cdiv class=\"gvb_article_data\"\u003e            \u003cspan\u003e\u003ci class=\"fa fa-eye\"\u003e\u003c/i\u003e{{ record.look_count }}\u003c/span\u003e            \u003cspan\u003e\u003ci class=\"fa fa-thumbs-o-up\"\u003e\u003c/i\u003e{{ record.digg_count }}\u003c/span\u003e            \u003cspan\u003e\u003ci class=\"fa fa-comment-o\"\u003e\u003c/i\u003e{{ record.comment_count }}\u003c/span\u003e            \u003cspan\u003e\u003ci class=\"fa fa-star-o\"\u003e\u003c/i\u003e{{ record.collects_count }}\u003c/span\u003e          \u003c/div\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'abstract'\"\u003e          \u003cspan class=\"gvb_article_abstract\"\u003e{{ record.abstract }}\u003c/span\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'tags'\"\u003e          \u003cdiv class=\"gvb_article_tags\"\u003e            \u003ca-tag :color=\"getColor(i)\" v-for=\"(item, i) in record.tags\" :key=\"i\"\u003e{{ item }}\u003c/a-tag\u003e          \u003c/div\u003e        \u003c/template\u003e      \u003c/template\u003e      \u003ctemplate #filters\u003e        \u003ca-select            class=\"gvb_select\"            v-model:value=\"tag\"            style=\"width: 200px\"            allowClear            @change=\"onFilter\"            :options=\"data.tagOptions\"            placeholder=\"筛选文章标签\"        \u003e\u003c/a-select\u003e        \u003ca-select            class=\"gvb_select\"            v-model:value=\"category\"            style=\"width: 200px\"            allowClear            @change=\"onFilter\"            :options=\"data.categoryOptions\"            placeholder=\"筛选文章分类\"        \u003e\u003c/a-select\u003e      \u003c/template\u003e    \u003c/GVBTable\u003e  \u003c/div\u003e\u003c/template\u003e\u003cscript setup\u003eimport {getTagNameListApi} from \"@/api/tag_api\";import {getCategoryListApi} from \"@/api/article_api\";import {reactive, ref} from \"vue\";import GVBTable from \"@/components/admin/gvb_table.vue\"const tag = ref(null)const category = ref(null)const gvbTable = ref(null)const data = reactive({  list: [    {      \"abstract\": \"需要一个全局变量，用于保存配置文件，存放在global目录下\",      \"banner_id\": 3,      \"banner_url\": \"uploads/file/29.jpg\",      \"category\": \"p1\",      \"collects_count\": 0,      \"comment_count\": 0,      \"created_at\": \"2023-02-24 21:21:29\",      \"digg_count\": 0,      \"id\": \"P46Vg4YB6uoytGZA-bE7\",      \"look_count\": 0,      \"tags\": [        \"golang\",        \"后端\",        \"教程\",      ],      \"title\": \"后端项目搭建\",      \"updated_at\": \"2023-02-24 21:31:13\",      \"user_avatar\": \"/uploads/avatar/default.png\",      \"user_id\": 1,      \"user_nick_name\": \"admin\"    },  ],  columns: [    // {title: 'id', dataIndex: 'id', key: 'id'},    {title: 'Index', dataIndex: 'index', key: 'index'},    {title: '文章标题', dataIndex: 'title', key: 'title'},    {title: '文章分类', dataIndex: 'category', key: 'category'},    {title: '文章简介', dataIndex: 'abstract', key: 'abstract'},    {title: '作者', dataIndex: 'user_nick_name', key: 'user_nick_name'},    {title: '封面', dataIndex: 'banner_url', key: 'banner_url'},    {title: '文章数据', dataIndex: 'data', key: 'data'},    // {title: '浏览量', dataIndex: 'look_count', key: 'look_count'},    // {title: '点赞', dataIndex: 'digg_count', key: 'digg_count'},    // {title: '评论', dataIndex: 'comment_count', key: 'comment_count'},    // {title: '收藏', dataIndex: 'collects_count', key: 'collects_count'},    {title: '标签', dataIndex: 'tags', key: 'tags'},    {title: '发布时间', dataIndex: 'created_at', key: 'created_at'},    {title: '操作', dataIndex: 'action', key: 'action'},  ],  tagOptions: [],  categoryOptions: []})const colorList = [\"red\", \"blue\", \"green\", \"purple\", \"cyan\", \"orange\", \"pink\"]function getColor(index) {  return colorList[index]}function onFilter() {  gvbTable.value.ExportList({tag: tag.value, key: category.value})}async function getData() {  let res = await getTagNameListApi()  data.tagOptions = res.data  let c = await getCategoryListApi()  data.categoryOptions = c.data}getData()\u003c/script\u003e\u003cstyle lang=\"scss\"\u003e.gvb_article_data {  span {    margin-right: 7px;    i {      margin-right: 3px;    }    \u0026:last-child {      margin-right: 0;    }  }}.gvb_article_abstract {  max-width: 12rem;  overflow-x: hidden;  display: inline-block;  white-space: nowrap;  text-overflow: ellipsis;}.gvb_article_tags {  display: grid;  grid-template-columns: repeat(3, 1fr);  grid-column-gap: 10px;  grid-row-gap: 10px;  justify-items: self-start;}.gvb_article_title {  em {    color: red;    margin-right: 1px;  }}\u003c/style\u003e\n",
        "slug": "B9cKwYYBMeB77WN1l0bs#文章列表",
        "title": "文章列表"
      },
      "id": "CdcKwYYBMeB77WN1mEYi"
    },
    {
      "row": {
        "key": "B9cKwYYBMeB77WN1l0bs",
        "body": "markdown组件选择1. 主题切换2. 图片上传3. 粘贴图片上传4. ctrl s打开侧边栏Vuenpm i md-editor-v3\n",
        "slug": "B9cKwYYBMeB77WN1l0bs#文章添加",
        "title": "文章添加"
      },
      "id": "CtcKwYYBMeB77WN1mEYi"
    },
    {
      "row": {
        "key": "B9cKwYYBMeB77WN1l0bs",
        "body": "监听store里面的主题变化Vue\u003ctemplate\u003e  \u003cmd-editor v-model=\"data.content\" :theme=\"theme\"/\u003e\u003c/template\u003e\u003cscript setup\u003eimport {reactive, ref, watch} from 'vue';import {useStore} from \"@/stores/store\";import MdEditor from 'md-editor-v3';import 'md-editor-v3/lib/style.css';const store = useStore()const theme = ref(\"dark\")const data = reactive({  content: \"hello fengfeng\",})watch(() =\u003e store.theme, (themeVal) =\u003e {  theme.value = themeVal ? \"\" : \"dark\"}, {immediate: true}) // 初始化就执行回调\u003c/script\u003e\u003cstyle scoped\u003e.md-editor-dark {  --md-color: #999;  --md-hover-color: #bbb;  --md-bk-color: #141414;  // 自己改的黑夜颜色  --md-bk-color-outstand: #111;  --md-bk-hover-color: #1b1a1a;  --md-border-color: #2d2d2d;  --md-border-hover-color: #636262;  --md-border-active-color: #777;  --md-modal-mask: #00000073;  --md-scrollbar-bg-color: #0f0f0f;  --md-scrollbar-thumb-color: #2d2d2d;  --md-scrollbar-thumb-hover-color: #3a3a3a;  --md-scrollbar-thumb-active-color: #3a3a3a;}// 高度.md-editor {  height: calc(100vh - 130px);}\u003c/style\u003e\n",
        "slug": "B9cKwYYBMeB77WN1l0bs#主题切换",
        "title": "主题切换"
      },
      "id": "C9cKwYYBMeB77WN1mEYi"
    },
    {
      "row": {
        "key": "B9cKwYYBMeB77WN1l0bs",
        "body": "自带了从剪贴板上传图片的功能Vue\u003ctemplate\u003e  \u003cmd-editor v-model=\"data.content\"  @on-upload-img=\"onUploadImg\"/\u003e\u003c/template\u003e\u003cscript setup\u003eimport {reactive} from 'vue';import MdEditor from 'md-editor-v3';import {uploadImageApi} from \"@/api/image_api\";import 'md-editor-v3/lib/style.css';const data = reactive({  content: \"hello fengfeng\",})const onUploadImg = async (files, callback) =\u003e {  const res = await Promise.all(      files.map((file) =\u003e {        return uploadImageApi(file)      })  );  callback(res.map((item) =\u003e item.data));};\u003c/script\u003eimage_api.jsVueexport function uploadImageApi(file) {    return new Promise((resolve, reject) =\u003e {        const form = new FormData();        form.append('image', file);        Service.post(\"/api/image\", form, {            headers: {                'Content-Type': 'multipart/form-data'            }        }).then((res) =\u003e resolve(res))            .catch((error) =\u003e reject(error));    })}\n",
        "slug": "B9cKwYYBMeB77WN1l0bs#图片上传",
        "title": "图片上传"
      },
      "id": "DNcKwYYBMeB77WN1mEYi"
    },
    {
      "row": {
        "key": "DdcMwYYBMeB77WN1sEY8",
        "body": "Go\u003ctemplate\u003e  \u003cdiv\u003e    \u003cGVBTable        :columns=\"data.columns\"        base-url=\"/api/chat_groups_records\"        like-title=\"搜索消息名称\"        ref=\"gvbTable\"        :is-add=\"false\"        :is-edit=\"false\"        :is-delete=\"false\"        default-delete    \u003e      \u003ctemplate #cell=\"{column, record}\"\u003e        \u003ctemplate v-if=\"column.key === 'avatar'\"\u003e          \u003cimg :src=\"'/' + record.avatar\" alt=\"\" v-if=\"record.avatar !== ''\"               style=\"width: 30px;height: 30px;border-radius: 50%\"\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'is_group'\"\u003e          \u003ca-tag v-if=\"record.is_group\" color=\"blue\"\u003e群消息\u003c/a-tag\u003e          \u003ca-tag v-else color=\"red\"\u003e系统消息\u003c/a-tag\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'msg_type'\"\u003e          \u003cspan color=\"blue\"\u003e{{  chatTypeDict[record.msg_type] }}\u003c/span\u003e        \u003c/template\u003e      \u003c/template\u003e      \u003ctemplate #filters\u003e      \u003c/template\u003e    \u003c/GVBTable\u003e  \u003c/div\u003e\u003c/template\u003e\u003cscript setup\u003eimport GVBTable from \"@/components/admin/gvb_table.vue\"import {reactive, ref} from \"vue\";const level = ref(undefined)const gvbTable = ref(null)/*  InRoomMsg  ctype.MsgType = 1 // 进入聊天室  TextMsg    ctype.MsgType = 2 // 发文本消息  ImageMsg   ctype.MsgType = 3 // 图片消息  VoiceMsg   ctype.MsgType = 4 // 语音消息  VideoMsg   ctype.MsgType = 5 // 视频消息  SystemMsg  ctype.MsgType = 6 // 系统消息  OutRoomMsg ctype.MsgType = 7 // 退出聊天室 */const chatTypeDict = {  1: \"进入聊天室\",  2: \"文本消息\",  3: \"图片消息\",  4: \"语音消息\",  5: \"视频消息\",  6: \"系统消息\",  7: \"退出聊天室\",}function onFilter() {  gvbTable.value.ExportList({level: level.value})}/*  {        \"avatar\": \"uploads/chat_avatar/大.png\",        \"content\": \"大意的巴蒂斯图塔 进入聊天室\",        \"created_at\": \"2023-02-26T10:47:16.948+08:00\",        \"id\": 14,        \"is_group\": true,        \"msg_type\": 1,        \"nick_name\": \"大意的巴蒂斯图塔\"      }, */const data = reactive({  columns: [    {title: 'id', dataIndex: 'id', key: 'id'},    {title: '昵称', dataIndex: 'nick_name', key: 'nick_name'},    {title: '头像', dataIndex: 'avatar', key: 'avatar'},    {title: '内容', dataIndex: 'content', key: 'content'},    {title: '是否是群聊', dataIndex: 'is_group', key: 'is_group'},    {title: '消息类型', dataIndex: 'msg_type', key: 'msg_type'},    {title: '日志时间', dataIndex: 'created_at', key: 'created_at'},  ],})\u003c/script\u003e\n",
        "slug": "DdcMwYYBMeB77WN1sEY8#12.群聊消息",
        "title": "12.群聊消息"
      },
      "id": "DtcMwYYBMeB77WN1sEZR"
    },
    {
      "row": {
        "key": "D9cVwYYBMeB77WN1XkY7",
        "body": "Vue\u003ctemplate\u003e  \u003cdiv\u003e    \u003cGVBTable        :columns=\"data.columns\"        base-url=\"/api/logs\"        like-title=\"搜索日志名称\"        ref=\"gvbTable\"        :is-add=\"false\"        :is-edit=\"false\"        default-delete    \u003e      \u003ctemplate #cell=\"{column, record}\"\u003e        \u003ctemplate v-if=\"column.key === 'level'\"\u003e          \u003ca-tag :color=\"levelColor[record.level]\"\u003e{{ record.level }}\u003c/a-tag\u003e        \u003c/template\u003e      \u003c/template\u003e       \u003ctemplate #filters\u003e        \u003ca-select          class=\"gvb_select\"          v-model:value=\"level\"          style=\"width: 200px\"          allowClear          @change=\"onFilter\"          :options=\"levelOptions\"          placeholder=\"筛选日志等级\"      \u003e\u003c/a-select\u003e      \u003c/template\u003e    \u003c/GVBTable\u003e  \u003c/div\u003e\u003c/template\u003e\u003cscript setup\u003eimport GVBTable from \"@/components/admin/gvb_table.vue\"import {reactive, ref} from \"vue\";const levelColor = {  \"debug\": \"green\",  \"info\": \"blue\",  \"warn\": \"orange\",  \"error\": \"red\",}const levelOptions = [  {label: \"debug\", value: 1,},  {label: \"info\", value: 2,},  {label: \"warn\", value: 3,},  {label: \"error\", value: 4,}]const level = ref(undefined)const gvbTable = ref(null)function onFilter(){  gvbTable.value.ExportList({level: level.value})}const data = reactive({  columns: [    {title: 'id', dataIndex: 'id', key: 'id'},    {title: 'ip', dataIndex: 'ip', key: 'ip'},    {title: '地址', dataIndex: 'addr', key: 'addr'},    {title: '等级', dataIndex: 'level', key: 'level'},    {title: '内容', dataIndex: 'content', key: 'content'},    {title: '日志时间', dataIndex: 'created_at', key: 'created_at'},    {title: '操作', dataIndex: 'action', key: 'action'},  ],})\u003c/script\u003e后端的一些bug1. swag，自定义类型不能识别Gotype LogRequest struct {  models.PageInfo  Level log_stash.Level `form:\"level\"`}// LogListView 日志列表// @Tags 日志管理// @Summary 日志列表// @Description 日志列表// @Param data query LogRequest    false  \"查询参数\"// @Param level query int false \"日志等级\"// @Router /api/logs [get]// @Produce json// @Success 200 {object} res.Response{data=res.ListResponse[log_stash.LogStashModel]}func (LogApi) LogListView(c *gin.Context) {}2. 分页查询，总条数问题\n",
        "slug": "D9cVwYYBMeB77WN1XkY7#日志管理",
        "title": "日志管理"
      },
      "id": "ENcVwYYBMeB77WN1XkZQ"
    },
    {
      "row": {
        "key": "EdcWwYYBMeB77WN1jEYG",
        "body": "\n",
        "slug": "EdcWwYYBMeB77WN1jEYG#菜单管理",
        "title": "菜单管理"
      },
      "id": "EtcWwYYBMeB77WN1jEYh"
    },
    {
      "row": {
        "key": "EdcWwYYBMeB77WN1jEYG",
        "body": "Vue\u003ca-select    ref=\"select\"    v-model:value=\"bannerIDList\"    placeholder=\"选择banner\"    mode=\"multiple\"    @change=\"bannerChange\"\u003e  \u003ca-select-option :value=\"item.id\" v-for=\"item in data.imageNameList\" :key=\"item.id\"\u003e    \u003cimg :src=\"item.path\" alt=\"\" height=\"30\" style=\"border-radius: 5px; margin-right: 10px\"\u003e    \u003cspan\u003e{{ item.name }}\u003c/span\u003e  \u003c/a-select-option\u003e  \u003ctemplate #tagRender=\"{ value: val, label, closable, onClose, option }\"\u003e    \u003cimg :src=\"getLabel(label)\" height=\"30\" style=\"border-radius: 5px; margin-right: 5px\"/\u003e  \u003c/template\u003e\u003c/a-select\u003e       \u003cscript setup\u003eimport GVBTable from \"@/components/admin/gvb_table.vue\"import {reactive, ref} from \"vue\";import {imageNameListApi} from \"@/api/image_api\";import {createMenuApi, updateMenuApi} from \"@/api/menu_api\";import {message} from \"ant-design-vue\";const bannerIDList = ref([])const state = reactive({  image_sort_list: []})// 获取图片数据async function getData() {  let res = await imageNameListApi()  data.imageNameList = res.data}// 选中之后的回显function getLabel(label) {  return label[0].props.src}// 选择菜单图片function bannerChange(idList) {  state.image_sort_list = []  for (let i = 0; i \u003c idList.length; i++) {    state.image_sort_list.push({      image_id: idList[i],      sort: i    })  }}getData()const data = reactive({  imageNameList: []})\u003c/script\u003ebanner的先后顺序，就是点击的顺序\n",
        "slug": "EdcWwYYBMeB77WN1jEYG#select显示图片",
        "title": "select显示图片"
      },
      "id": "E9cWwYYBMeB77WN1jEYh"
    },
    {
      "row": {
        "key": "EdcWwYYBMeB77WN1jEYG",
        "body": "abstract是一个字符串，添加之前，要变成列表添加完成之后，两个都要清空image_sort_list是用户改变banner的时候进行修改的Vue\u003ca-modal :title=\"editID ? '编辑菜单' : '添加菜单'\" v-model:visible=\"data.visible\" @ok=\"handleOK\"\u003e  \u003ca-form      :model=\"state\"      name=\"basic\"      ref=\"formRef\"      :label-col=\"{ span: 4 }\"      :wrapper-col=\"{ span: 20 }\"      autocomplete=\"off\"  \u003e    \u003ca-form-item label=\"菜单名称\" name=\"title\" has-feedback                 :rules=\"[{ required: true, message: '请输入菜单名称' ,trigger: 'blur'}]\"\u003e      \u003ca-input v-model:value=\"state.title\" placeholder=\"菜单名称\"/\u003e    \u003c/a-form-item\u003e    \u003ca-form-item label=\"菜单路径\" name=\"path\" has-feedback                 :rules=\"[{ required: true, message: '请输入菜单路径' ,trigger: 'blur'}]\"\u003e      \u003ca-input v-model:value=\"state.path\" placeholder=\"菜单路径\"/\u003e    \u003c/a-form-item\u003e    \u003ca-form-item label=\"slogan\" name=\"slogan\" has-feedback\u003e      \u003ca-input v-model:value=\"state.slogan\" placeholder=\"slogan\"/\u003e    \u003c/a-form-item\u003e    \u003ca-form-item label=\"菜单简介\" name=\"abstract\" has-feedback\u003e      \u003ca-textarea          v-model:value=\"state_abstract\"          placeholder=\"菜单简介,多个简介用换行分隔\"          :auto-size=\"{ minRows: 2, maxRows: 5 }\"      /\u003e    \u003c/a-form-item\u003e    \u003ca-form-item label=\"banner时间\" name=\"banner_time\" has-feedback\u003e      \u003ca-input-number v-model:value=\"state.banner_time\" placeholder=\"banner时间\"/\u003e    \u003c/a-form-item\u003e    \u003ca-form-item label=\"简介时间\" name=\"abstract_time\" has-feedback\u003e      \u003ca-input-number v-model:value=\"state.abstract_time\" placeholder=\"简介时间\"/\u003e    \u003c/a-form-item\u003e    \u003ca-form-item label=\"序号\" name=\"sort\" has-feedback\u003e      \u003ca-input-number v-model:value=\"state.sort\" placeholder=\"序号\"/\u003e    \u003c/a-form-item\u003e    \u003ca-form-item label=\"banner选择\"\u003e      \u003ca-select          ref=\"select\"          v-model:value=\"bannerIDList\"          placeholder=\"选择banner\"          mode=\"multiple\"          @change=\"bannerChange\"      \u003e        \u003ca-select-option :value=\"item.id\" v-for=\"item in data.imageNameList\" :key=\"item.id\"\u003e          \u003cimg :src=\"item.path\" alt=\"\" height=\"30\" style=\"border-radius: 5px; margin-right: 10px\"\u003e          \u003cspan\u003e{{ item.name }}\u003c/span\u003e        \u003c/a-select-option\u003e        \u003ctemplate #tagRender=\"{ value: val, label, closable, onClose, option }\"\u003e          \u003cimg :src=\"getLabel(label)\" height=\"30\" style=\"border-radius: 5px; margin-right: 5px\"/\u003e        \u003c/template\u003e      \u003c/a-select\u003e    \u003c/a-form-item\u003e  \u003c/a-form\u003e\u003c/a-modal\u003e   \u003cscript setup\u003eimport GVBTable from \"@/components/admin/gvb_table.vue\"import {reactive, ref} from \"vue\";import {imageNameListApi} from \"@/api/image_api\";import {createMenuApi, updateMenuApi} from \"@/api/menu_api\";import {message} from \"ant-design-vue\";const state_abstract = ref(\"\")const bannerIDList = ref([])const _state = {  abstract_time: 7,  banner_time: 7,  path: \"\",  slogan: \"\",  sort: 0,  title: \"\",  abstract: [],  image_sort_list: []}const state = reactive({  abstract_time: 7,  banner_time: 7,  path: \"\",  slogan: \"\",  sort: 0,  title: \"\",  abstract: [],  image_sort_list: []})const formRef = ref(null)// 获取图片数据async function getData() {  let res = await imageNameListApi()  data.imageNameList = res.data}// 选中之后的回显function getLabel(label) {  return label[0].props.src}// 添加菜单，更新菜单async function handleOK() {  try {    formRef.value.validate()  } catch (e) {    return  }  state.abstract = state_abstract.value.split(\"\\n\")  let res  if (editID.value) {    res = await updateMenuApi(editID.value, state)  } else {    res = await createMenuApi(state)  }  if (res.code) {    message.error(res.msg)    return  }  state_abstract.value = \"\"  bannerIDList.value = []  data.visible = false  message.success(res.msg)  gvbTable.value.ExportList()  return}// 选择菜单图片function bannerChange(idList) {  state.image_sort_list = []  for (let i = 0; i \u003c idList.length; i++) {    state.image_sort_list.push({      image_id: idList[i],      sort: i    })  }}getData()const gvbTable = ref(null)const editID = ref(0)const data = reactive({  visible: false,  imageNameList: []})function addMenu() {  editID.value = 0  data.visible = true  Object.assign(state, _state)}function updateModal(record) {  editID.value = record.id  state.abstract_time = record.abstract_time  state.banner_time = record.banner_time  state.path = record.path  state.slogan = record.slogan  state.sort = record.sort  state.title = record.title  state.abstract = record.abstract  state_abstract.value = record.abstract.join(\"\\n\")  bannerIDList.value = []  state.image_sort_list = []  for (let i = 0; i \u003c record.banners.length; i++) {    bannerIDList.value.push(record.banners[i].id)    state.image_sort_list.push({      image_id: record.banners[i].id,      sort: i    })  }  data.visible = true}\u003c/script\u003e\n",
        "slug": "EdcWwYYBMeB77WN1jEYG#添加菜单，更新菜单",
        "title": "添加菜单，更新菜单"
      },
      "id": "FNcWwYYBMeB77WN1jEYh"
    },
    {
      "row": {
        "key": "EdcWwYYBMeB77WN1jEYG",
        "body": "Vuedisplay: grid; grid-template-columns: repeat(3, 1fr);grid-column-gap: 5px; grid-row-gap: 5px;完整代码Vue\u003ctemplate\u003e  \u003cdiv\u003e    \u003ca-modal :title=\"editID ? '编辑菜单' : '添加菜单'\" v-model:visible=\"data.visible\" @ok=\"handleOK\"    \u003e      \u003ca-form          :model=\"state\"          name=\"basic\"          ref=\"formRef\"          :label-col=\"{ span: 4 }\"          :wrapper-col=\"{ span: 20 }\"          autocomplete=\"off\"      \u003e        \u003ca-form-item label=\"菜单名称\" name=\"title\" has-feedback                     :rules=\"[{ required: true, message: '请输入菜单名称' ,trigger: 'blur'}]\"\u003e          \u003ca-input v-model:value=\"state.title\" placeholder=\"菜单名称\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"菜单路径\" name=\"path\" has-feedback                     :rules=\"[{ required: true, message: '请输入菜单路径' ,trigger: 'blur'}]\"\u003e          \u003ca-input v-model:value=\"state.path\" placeholder=\"菜单路径\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"slogan\" name=\"slogan\" has-feedback\u003e          \u003ca-input v-model:value=\"state.slogan\" placeholder=\"slogan\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"菜单简介\" name=\"abstract\" has-feedback\u003e          \u003ca-textarea              v-model:value=\"state_abstract\"              placeholder=\"菜单简介,多个简介用换行分隔\"              :auto-size=\"{ minRows: 2, maxRows: 5 }\"          /\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"banner时间\" name=\"banner_time\" has-feedback\u003e          \u003ca-input-number v-model:value=\"state.banner_time\" placeholder=\"banner时间\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"简介时间\" name=\"abstract_time\" has-feedback\u003e          \u003ca-input-number v-model:value=\"state.abstract_time\" placeholder=\"简介时间\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"序号\" name=\"sort\" has-feedback\u003e          \u003ca-input-number v-model:value=\"state.sort\" placeholder=\"序号\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"banner选择\"\u003e          \u003ca-select              ref=\"select\"              v-model:value=\"bannerIDList\"              placeholder=\"选择banner\"              mode=\"multiple\"              @change=\"bannerChange\"          \u003e            \u003ca-select-option :value=\"item.id\" v-for=\"item in data.imageNameList\" :key=\"item.id\"\u003e              \u003cimg :src=\"item.path\" alt=\"\" height=\"30\" style=\"border-radius: 5px; margin-right: 10px\"\u003e              \u003cspan\u003e{{ item.name }}\u003c/span\u003e            \u003c/a-select-option\u003e            \u003ctemplate #tagRender=\"{ value: val, label, closable, onClose, option }\"\u003e              \u003cimg :src=\"getLabel(label)\" height=\"30\" style=\"border-radius: 5px; margin-right: 5px\"/\u003e            \u003c/template\u003e          \u003c/a-select\u003e        \u003c/a-form-item\u003e      \u003c/a-form\u003e    \u003c/a-modal\u003e    \u003cGVBTable        :columns=\"data.columns\"        base-url=\"/api/menus\"        like-title=\"搜索菜单名称\"        ref=\"gvbTable\"        default-delete    \u003e      \u003ctemplate #add\u003e        \u003ca-button type=\"primary\" @click=\"addMenu\"\u003e添加\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #edit=\"{record}\"\u003e        \u003ca-button type=\"primary\" @click=\"updateModal(record)\"\u003e编辑\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #cell=\"{column, record}\"\u003e        \u003ctemplate v-if=\"column.key === 'abstract'\"\u003e          \u003cdiv v-for=\"(item, index) in record.abstract\" :key=\"index\"\u003e{{ item }}\u003c/div\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'banners'\"\u003e          \u003cdiv style=\"display: grid; grid-template-columns: repeat(3, 1fr); grid-column-gap: 5px; grid-row-gap: 5px\"\u003e            \u003cimg v-for=\"item in record.banners\" :key=\"item.id\" :src=\"item.path\" height=\"40\"                 style=\"border-radius: 5px;\"\u003e          \u003c/div\u003e        \u003c/template\u003e      \u003c/template\u003e    \u003c/GVBTable\u003e  \u003c/div\u003e\u003c/template\u003e\u003cscript setup\u003eimport GVBTable from \"@/components/admin/gvb_table.vue\"import {reactive, ref} from \"vue\";import {imageNameListApi} from \"@/api/image_api\";import {createMenuApi, updateMenuApi} from \"@/api/menu_api\";import {message} from \"ant-design-vue\";const state_abstract = ref(\"\")const bannerIDList = ref([])const _state = {  abstract_time: 7,  banner_time: 7,  path: \"\",  slogan: \"\",  sort: 0,  title: \"\",  abstract: [],  image_sort_list: []}const state = reactive({  abstract_time: 7,  banner_time: 7,  path: \"\",  slogan: \"\",  sort: 0,  title: \"\",  abstract: [],  image_sort_list: []})const formRef = ref(null)// 获取图片数据async function getData() {  let res = await imageNameListApi()  data.imageNameList = res.data}// 选中之后的回显function getLabel(label) {  return label[0].props.src}// 添加菜单，更新菜单async function handleOK() {  try {    formRef.value.validate()  } catch (e) {    return  }  state.abstract = state_abstract.value.split(\"\\n\")  let res  if (editID.value) {    res = await updateMenuApi(editID.value, state)  } else {    res = await createMenuApi(state)  }  if (res.code) {    message.error(res.msg)    return  }  state_abstract.value = \"\"  bannerIDList.value = []  data.visible = false  message.success(res.msg)  gvbTable.value.ExportList()  return}// 选择菜单图片function bannerChange(idList) {  state.image_sort_list = []  for (let i = 0; i \u003c idList.length; i++) {    state.image_sort_list.push({      image_id: idList[i],      sort: i    })  }}getData()const gvbTable = ref(null)const editID = ref(0)const data = reactive({  columns: [    {title: 'id', dataIndex: 'id', key: 'id'},    {title: '菜单标题', dataIndex: 'title', key: 'title'},    {title: '路径', dataIndex: 'path', key: 'path'},    {title: 'slogan', dataIndex: 'slogan', key: 'slogan'},    {title: '介绍', dataIndex: 'abstract', key: 'abstract'},    {title: '介绍切换时间', dataIndex: 'abstract_time', key: 'abstract_time'},    {title: 'banner切换时间', dataIndex: 'banner_time', key: 'banner_time'},    {title: '排序', dataIndex: 'sort', key: 'sort'},    {title: 'banner', dataIndex: 'banners', key: 'banners'},    {title: '发布时间', dataIndex: 'created_at', key: 'created_at'},    {title: '操作', dataIndex: 'action', key: 'action'},  ],  visible: false,  imageNameList: []})function addMenu() {  editID.value = 0  data.visible = true  Object.assign(state, _state)}function updateModal(record) {  editID.value = record.id  state.abstract_time = record.abstract_time  state.banner_time = record.banner_time  state.path = record.path  state.slogan = record.slogan  state.sort = record.sort  state.title = record.title  state.abstract = record.abstract  state_abstract.value = record.abstract.join(\"\\n\")  bannerIDList.value = []  state.image_sort_list = []  for (let i = 0; i \u003c record.banners.length; i++) {    bannerIDList.value.push(record.banners[i].id)    state.image_sort_list.push({      image_id: record.banners[i].id,      sort: i    })  }  data.visible = true}\u003c/script\u003e\n",
        "slug": "EdcWwYYBMeB77WN1jEYG#图片按照一行三列排",
        "title": "图片按照一行三列排"
      },
      "id": "FdcWwYYBMeB77WN1jEYh"
    },
    {
      "row": {
        "key": "Ftc6wYYBMeB77WN1QkbM",
        "body": "在base_api.js中，统一给get列表页请求加一个headersVueexport function baseListApi(url, params) {return Service.get(url, {params, headers:{  Gvb_referer: \"admin\"  }})}原因是因为referer没法在前端配置\n",
        "slug": "Ftc6wYYBMeB77WN1QkbM#广告管理",
        "title": "广告管理"
      },
      "id": "F9c6wYYBMeB77WN1Qkbi"
    },
    {
      "row": {
        "key": "Ftc6wYYBMeB77WN1QkbM",
        "body": "Vue\u003ctemplate\u003e  \u003cdiv\u003e    \u003cGVBTable        :columns=\"data.columns\"        base-url=\"/api/adverts\"        like-title=\"搜索广告名称\"        ref=\"gvbTable\"        default-delete    \u003e      \u003ctemplate #add\u003e        \u003ca-button type=\"primary\" \u003e添加\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #edit=\"{record}\"\u003e        \u003ca-button type=\"primary\"\u003e编辑\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #cell=\"{column, record}\"\u003e        \u003ctemplate v-if=\"column.key === 'images'\"\u003e          \u003cimg :src=\"record.images\" alt=\"\" height=\"60\" style=\"border-radius: 5px\"\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'is_show'\"\u003e          \u003ca-tag v-if=\"record.is_show\" color=\"green\"\u003e显示\u003c/a-tag\u003e          \u003ca-tag v-else color=\"red\"\u003e不显示\u003c/a-tag\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'href'\"\u003e          \u003cspan\u003e{{ record.href }}\u003c/span\u003e          \u003ca-button type=\"link\" target=\"_blank\" :href=\"record.href\"\u003e访问\u003c/a-button\u003e        \u003c/template\u003e      \u003c/template\u003e    \u003c/GVBTable\u003e  \u003c/div\u003e\u003c/template\u003e\u003cscript setup\u003eimport {reactive} from \"vue\";const data = reactive({  columns: [    {title: 'id', dataIndex: 'id', key: 'id'},    {title: '广告标题', dataIndex: 'title', key: 'title'},    {title: '图片路径', dataIndex: 'images', key: 'images'},    {title: '跳转地址', dataIndex: 'href', key: 'href'},    {title: '是否显示', dataIndex: 'is_show', key: 'is_show'},    {title: '添加时间', dataIndex: 'created_at', key: 'created_at'},    {title: '操作', dataIndex: 'action', key: 'action'},  ],})\u003c/script\u003e\n",
        "slug": "Ftc6wYYBMeB77WN1QkbM#广告列表",
        "title": "广告列表"
      },
      "id": "GNc6wYYBMeB77WN1Qkbi"
    },
    {
      "row": {
        "key": "Ftc6wYYBMeB77WN1QkbM",
        "body": "Vue\u003ctemplate\u003e  \u003cdiv\u003e    \u003ca-modal :title=\"editID ? '编辑广告' : '添加广告'\" v-model:visible=\"data.visible\" @ok=\"handleOK\"\u003e      \u003ca-form          :model=\"state\"          name=\"basic\"          ref=\"formRef\"          :label-col=\"{ span: 4 }\"          :wrapper-col=\"{ span: 20 }\"          autocomplete=\"off\"      \u003e        \u003ca-form-item label=\"广告名称\" name=\"title\" has-feedback                     :rules=\"[{ required: true, message: '请输入广告名称' ,trigger: 'blur'}]\"\u003e          \u003ca-input v-model:value=\"state.title\" placeholder=\"广告名称\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"广告链接\" name=\"href\" has-feedback                     :rules=\"[{ required: true, message: '请输入广告链接' ,trigger: 'blur'}, {validator: checkUrl, message: 'url不合法', trigger: 'blur'}]\"\u003e          \u003ca-input v-model:value=\"state.href\" placeholder=\"广告链接\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"图片地址\" name=\"images\" has-feedback                     :rules=\"[{ required: true, message: '请输入图片地址' ,trigger: 'blur'}]\"\u003e          \u003ca-input v-model:value=\"state.images\" placeholder=\"图片地址\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"是否显示\" name=\"is_show\"\u003e          \u003ca-switch v-model:checked=\"state.is_show\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"图片预览\"\u003e          \u003cimg :src=\"state.images\" height=\"60\" style=\"border-radius: 5px\" alt=\"\"\u003e        \u003c/a-form-item\u003e      \u003c/a-form\u003e    \u003c/a-modal\u003e    \u003cGVBTable        :columns=\"data.columns\"        base-url=\"/api/adverts\"        like-title=\"搜索广告名称\"        ref=\"gvbTable\"        default-delete    \u003e      \u003ctemplate #add\u003e        \u003ca-button type=\"primary\" @click=\"addModal\"\u003e添加\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #edit=\"{record}\"\u003e        \u003ca-button type=\"primary\" @click=\"updateModal(record)\"\u003e编辑\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #cell=\"{column, record}\"\u003e        \u003ctemplate v-if=\"column.key === 'images'\"\u003e          \u003cimg :src=\"record.images\" alt=\"\" height=\"60\" style=\"border-radius: 5px\"\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'is_show'\"\u003e          \u003ca-tag v-if=\"record.is_show\" color=\"green\"\u003e显示\u003c/a-tag\u003e          \u003ca-tag v-else color=\"red\"\u003e不显示\u003c/a-tag\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'href'\"\u003e          \u003cspan\u003e{{ record.href }}\u003c/span\u003e          \u003ca-button type=\"link\" target=\"_blank\" :href=\"record.href\"\u003e访问\u003c/a-button\u003e        \u003c/template\u003e      \u003c/template\u003e    \u003c/GVBTable\u003e  \u003c/div\u003e\u003c/template\u003e\u003cscript setup\u003eimport GVBTable from \"@/components/admin/gvb_table.vue\"import {reactive, ref} from \"vue\";import {message} from \"ant-design-vue\";import {createAdvertApi, updateAdvertApi} from \"@/api/advert_api\";const gvbTable = ref(null)const formRef = ref(null)const editID = ref(0)const _state = {  href: \"\",  images: \"\",  is_show: true,  title: \"\"}const state = reactive({  href: \"\",  images: \"\",  is_show: true,  title: \"\"})let checkUrl = async (_rule, value) =\u003e {  try {    new URL(value)    return Promise.resolve()  } catch (err) {    return Promise.reject('不合法的url');  }};const data = reactive({  columns: [    {title: 'id', dataIndex: 'id', key: 'id'},    {title: '广告标题', dataIndex: 'title', key: 'title'},    {title: '图片路径', dataIndex: 'images', key: 'images'},    {title: '跳转地址', dataIndex: 'href', key: 'href'},    {title: '是否显示', dataIndex: 'is_show', key: 'is_show'},    {title: '添加时间', dataIndex: 'created_at', key: 'created_at'},    {title: '操作', dataIndex: 'action', key: 'action'},  ],  visible: false,  modalVisible: false,  fileList: []})async function handleOK() {  let res  if (editID){    res = await updateAdvertApi(editID.value, state)  }else {    res = await createAdvertApi(state)  }  if (res.code) {    message.error(res.msg)    return  }  message.success(res.msg)  data.visible = false  Object.assign(state, _state)  gvbTable.value.ExportList()  return}function updateModal(record) {  editID.value = record.id  state.title = record.title  state.href = record.href  state.images = record.images  state.is_show = record.is_show  data.visible = true}function addModal() {  data.visible = true  editID.value = 0  Object.assign(state, _state)}\u003c/script\u003e接口Vueimport {Service} from \"@/services/service\";// 发布广告export function createAdvertApi(data){    return Service.post(\"/api/adverts\", data)}// 更新广告export function updateAdvertApi(id, data){    return Service.put(\"/api/adverts/\" + id, data)}\n",
        "slug": "Ftc6wYYBMeB77WN1QkbM#添加广告，编辑广告",
        "title": "添加广告，编辑广告"
      },
      "id": "Gdc6wYYBMeB77WN1Qkbi"
    },
    {
      "row": {
        "key": "Gtc7wYYBMeB77WN13UZE",
        "body": "store.jsVueimport {defineStore} from 'pinia'import {message} from 'ant-design-vue';export const useStore = defineStore('gvb', {    state: () =\u003e {        return {            tabList: []        }    },    actions: {        // 添加tab        addTab(tab) {            // 已经存在，就不要再添加了            // 不存在的时候，进行添加            if (this.tabList.findIndex((item) =\u003e item.name === tab.name) === -1) {                this.tabList.push({name: tab.name, title: tab.title})            }        },        // tabs的持久化存储        saveTabs() {            localStorage.setItem(\"tabs\", JSON.stringify(this.tabList))        },        // 加载组件        loadTabs() {            let tabs = localStorage.getItem(\"tabs\")            if (tabs === null) {                this.tabList = [{title: \"首页\", name: \"home\"}]                return            }            this.tabList = JSON.parse(tabs)        },        // 移除tab        removeTab(tab) {            let index = this.tabList.findIndex((item) =\u003e item.name === tab.name)            this.tabList.splice(index, 1)            return index        },        // 移除全部tab        removeTabAll() {            this.tabList = [{title: \"首页\", name: \"home\"}]        }    }})gvb_tabs.vueVue\u003ctemplate\u003e  \u003cdiv class=\"gvb_tabs\"\u003e    \u003cdiv :class=\"isActive(item)\"         v-for=\"(item, index) in store.tabList\"         :key=\"index\"         @click=\"checkTab(item)\"    \u003e      {{ item.title }}      \u003cspan @click.stop=\"removeTab(item)\" v-if=\"item.name !== 'home'\" class=\"gvb_tab_remove_icon\"\u003e×\u003c/span\u003e    \u003c/div\u003e    \u003cdiv class=\"gvb_tab_item remove_all\" @click=\"removeTabAll\"\u003e      全部关闭    \u003c/div\u003e  \u003c/div\u003e\u003c/template\u003eVue\u003cscript setup\u003eimport {useStore} from \"@/stores/store\";import {useRoute, useRouter} from \"vue-router\";const store = useStore()const route = useRoute()const router = useRouter()// 是否选中function isActive(item) {  // 判断当前路由是否和item上的路由匹配  // 还要判断是不是home  if (route.name === item.name) {    return \"gvb_tab_item active\"  }  return \"gvb_tab_item\"}// 切换路由function checkTab(item) {  router.push({    name: item.name  })}// 移除tabfunction removeTab(item) {  let index = store.removeTab(item)  // 如果删除的是当前所在的tab  // 那就应该向前走一步  if (item.name === route.name) {    // 当前tab    // 前一个路由的路由索引    let beforeIndex = index - 1    // 前一个的路由    let beforeName = store.tabList[beforeIndex].name    router.push({      name: beforeName    })  }}// 关闭全部function removeTabAll() {  store.removeTabAll()  router.push({    name: \"home\"  })}// 加载路由store.loadTabs()// 监听刷新window.onbeforeunload = function () {  // 保存  store.saveTabs()  return undefined}\u003c/script\u003eVue\u003cstyle lang=\"scss\"\u003e.gvb_tabs {  height: 30px;  border-color: var(--order);  border-style: solid;  border-width: 1px 0 1px 0;  background-color: var(--card_bg);  display: flex;  justify-content: left;  align-items: center;  position: relative;  .gvb_tab_item {    background-color: var(--card_bg);    border: 1px solid var(--card_boder);    padding: 0 10px;    margin-right: 10px;    cursor: pointer;    color: var(--text);    display: flex;    align-items: center;    .gvb_tab_remove_icon {      cursor: pointer;      width: 12px;      height: 12px;      display: flex;      justify-content: center;      align-items: center;      margin-left: 5px;      border-radius: 50%;      \u0026:hover {        background-color: #f0eeee;      }    }    \u0026:first-child {      margin-left: 20px;    }    \u0026.active {      background-color: var(--active);      border-color: var(--active);      color: white;      \u0026::before {        display: inline-block;        content: \"\";        width: 12px;        height: 12px;        background-color: white;        border-radius: 50%;        margin-right: 5px;      }      .gvb_tab_remove_icon:hover {        background-color: #8fbef3;      }    }    \u0026.remove_all {      position: absolute;      right: 10px;    }  }}\u003c/style\u003e\n",
        "slug": "Gtc7wYYBMeB77WN13UZE#tabs组件",
        "title": "tabs组件"
      },
      "id": "G9c7wYYBMeB77WN13UZb"
    },
    {
      "row": {
        "key": "Gtc7wYYBMeB77WN13UZE",
        "body": "Vuestore.addTab({  name: key.name,  title: key.title,})这样做的好处就是，可以将icon放入tab，更加灵活router.js更加的简洁\n",
        "slug": "Gtc7wYYBMeB77WN13UZE#添加tab",
        "title": "添加tab"
      },
      "id": "HNc7wYYBMeB77WN13UZb"
    },
    {
      "row": {
        "key": "Gtc7wYYBMeB77WN13UZE",
        "body": "主要难点就是，如果删除的是当前所在的tab，那就需要向移动一位\n",
        "slug": "Gtc7wYYBMeB77WN13UZE#删除tab",
        "title": "删除tab"
      },
      "id": "Hdc7wYYBMeB77WN13UZb"
    },
    {
      "row": {
        "key": "INc-wYYBMeB77WN14UZN",
        "body": "Vue\u003ctemplate\u003e  \u003cdiv\u003e    \u003ca-modal title=\"上传图片\" v-model:visible=\"data.visible\" @ok=\"uploadComplete\"\u003e      \u003ca-upload          v-model:file-list=\"data.fileList\"          action=\"/api/images\"          list-type=\"picture-card\"          name=\"images\"          multiple          :headers=\"{token: store.userInfo.token}\"      \u003e        \u003ci class=\"fa fa-cloud-upload\"\u003e\u003c/i\u003e        \u003cdiv style=\"margin-left: 5px\"\u003e上传图片\u003c/div\u003e      \u003c/a-upload\u003e    \u003c/a-modal\u003e    \u003ca-modal title=\"编辑图片\" v-model:visible=\"data.modalVisible\" @ok=\"update\"\u003e      \u003ca-form          :model=\"updateState\"          name=\"basic\"          ref=\"formRef\"          :label-col=\"{ span: 4 }\"          :wrapper-col=\"{ span: 20 }\"          autocomplete=\"off\"      \u003e        \u003ca-form-item label=\"文件名称\" name=\"name\" has-feedback                     :rules=\"[{ required: true, message: '请输入文件名' ,trigger: 'blur'}]\"\u003e          \u003ca-input v-model:value=\"updateState.name\" placeholder=\"用户名\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"图片预览\"\u003e          \u003cimg :src=\"updateState.path\" height=\"80\" style=\"border-radius: 5px\" alt=\"\"\u003e        \u003c/a-form-item\u003e      \u003c/a-form\u003e    \u003c/a-modal\u003e    \u003cGVBTable        :columns=\"data.columns\"        base-url=\"/api/images\"        like-title=\"搜索图片名称\"        ref=\"gvbTable\"        default-delete    \u003e      \u003ctemplate #add\u003e        \u003ca-button type=\"primary\" @click=\"data.visible = true\"\u003e添加\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #edit=\"{record}\"\u003e        \u003ca-button type=\"primary\" @click=\"updateModal(record)\"\u003e编辑\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #cell=\"{column, record}\"\u003e        \u003ctemplate v-if=\"column.key === 'path'\"\u003e          \u003cimg :src=\"record.path\" alt=\"\" height=\"60\" style=\"border-radius: 5px\"\u003e        \u003c/template\u003e      \u003c/template\u003e    \u003c/GVBTable\u003e      \u003c/div\u003e\u003c/template\u003e\u003cscript setup\u003eimport GVBTable from \"@/components/admin/gvb_table.vue\"import {reactive, ref} from \"vue\";import {imageRenameApi} from \"@/api/image_api\";import {message} from \"ant-design-vue\";import {useStore} from \"@/stores/store\";const store = useStore()const gvbTable = ref(null)const formRef = ref(null)const data = reactive({  columns: [    {title: 'id', dataIndex: 'id', key: 'id'},    {title: '图片名称', dataIndex: 'name', key: 'name'},    {title: '路径', dataIndex: 'path', key: 'path'},    {title: '类型', dataIndex: 'image_type', key: 'image_type'},    {title: '上传时间', dataIndex: 'created_at', key: 'created_at'},    {title: '操作', dataIndex: 'action', key: 'action'},  ],  visible: false,  modalVisible: false,  fileList: []})const updateState = reactive({  id: 0,  name: \"\",  path: \"\"})// 打开模态框的操作function updateModal(record) {  data.modalVisible = true  updateState.id = record.id  updateState.name = record.name  updateState.path = record.path}// 修改图片的名称async function update() {  try {    await formRef.value.validate()    let res = await imageRenameApi(updateState)    if (res.code) {      message.error(res.msg)      return    }    message.success(res.msg)    data.modalVisible = false    gvbTable.value.ExportList()  } catch (e) {  }}function uploadComplete(){  data.visible = false  gvbTable.value.ExportList()}\u003c/script\u003e\n",
        "slug": "INc-wYYBMeB77WN14UZN#图片管理",
        "title": "图片管理"
      },
      "id": "Idc-wYYBMeB77WN14kYW"
    },
    {
      "row": {
        "key": "IteWwYYBMeB77WN1rUbQ",
        "body": "1234sdjgsgkskdglgl\n",
        "slug": "IteWwYYBMeB77WN1rUbQ#表格组件拆分",
        "title": "表格组件拆分"
      },
      "id": "J9cRwoYBMeB77WN1EkbJ"
    },
    {
      "row": {
        "key": "2iBpzIYBenTVo4BRkquV",
        "body": "",
        "slug": "2iBpzIYBenTVo4BRkquV#个人中心",
        "title": "个人中心"
      },
      "id": "2yBpzIYBenTVo4BRk6uH"
    },
    {
      "row": {
        "key": "2iBpzIYBenTVo4BRkquV",
        "body": "Vue\u003ctemplate\u003e  \u003cdiv class=\"gvb_user_info_bg\"\u003e    \u003cdiv class=\"gvb_user_info_view\"\u003e      \u003cdiv class=\"user_head\"\u003e        个人信息      \u003c/div\u003e      \u003cdiv class=\"body user_info_view\"\u003e        \u003ca-form :label-col=\"{ span: 2 }\"                :wrapper-col=\"{ span: 22 }\"\u003e          \u003ca-form-item label=\"昵称\"\u003e            \u003ca-input placeholder=\"昵称\" class=\"user_ipt\"\u003e\u003c/a-input\u003e          \u003c/a-form-item\u003e          \u003ca-form-item label=\"我的签名\"\u003e            \u003ca-textarea placeholder=\"我的签名\" class=\"user_ipt\" :auto-size=\"{ minRows: 2, maxRows: 5 }\"\u003e\u003c/a-textarea\u003e          \u003c/a-form-item\u003e          \u003ca-form-item label=\"我的博客\"\u003e            \u003ca-input placeholder=\"我的博客\" class=\"user_ipt\"\u003e\u003c/a-input\u003e          \u003c/a-form-item\u003e          \u003ca-form-item label=\"邮箱\"\u003e            \u003cspan\u003e556454545@qq.com\u003c/span\u003e          \u003c/a-form-item\u003e          \u003ca-form-item label=\"现地址\"\u003e            \u003cspan\u003e四川成都\u003c/span\u003e          \u003c/a-form-item\u003e          \u003ca-form-item label=\"当前角色\"\u003e            \u003cspan\u003e管理员\u003c/span\u003e          \u003c/a-form-item\u003e          \u003ca-form-item label=\"注册来源\"\u003e            \u003cspan\u003eQQ\u003c/span\u003e          \u003c/a-form-item\u003e          \u003ca-form-item label=\"我的积分\"\u003e            \u003cspan\u003e658\u003c/span\u003e          \u003c/a-form-item\u003e        \u003c/a-form\u003e      \u003c/div\u003e      \u003cdiv class=\"user_head\"\u003e        每日奖励      \u003c/div\u003e      \u003cdiv class=\"body daily_reward\"\u003e        \u003cdiv\u003e          \u003cimg src=\"../../../assets/icon/ok.svg\" alt=\"\"\u003e          每日登陆 +2        \u003c/div\u003e        \u003cdiv\u003e          \u003cimg src=\"../../../assets/icon/ok.svg\" alt=\"\"\u003e          发文 +3        \u003c/div\u003e        \u003cdiv\u003e          \u003cimg src=\"../../../assets/icon/ok.svg\" alt=\"\"\u003e          发评论 +1        \u003c/div\u003e        \u003cdiv\u003e          \u003cimg src=\"../../../assets/icon/error.svg\" alt=\"\"\u003e          群聊 +0.5        \u003c/div\u003e      \u003c/div\u003e      \u003cdiv class=\"user_head\"\u003e        成就勋章      \u003c/div\u003e      \u003cul class=\"body medal\"\u003e        \u003cli\u003e          \u003cimg src=\"https://i0.hdslb.com/bfs/face/21fdd1bcd9ad1b52d5725026d71c185a68681644.png\" alt=\"\"\u003e          \u003cdiv class=\"name\"\u003e初来乍到\u003c/div\u003e        \u003c/li\u003e        \u003cli\u003e          \u003cimg src=\"https://i0.hdslb.com/bfs/face/51ca16136e570938450bca360f28761ceb609f33.png\" alt=\"\"\u003e          \u003cdiv class=\"name\"\u003e有爱萌新\u003c/div\u003e        \u003c/li\u003e        \u003cli\u003e          \u003cimg src=\"https://i0.hdslb.com/bfs/face/89491e6cee3b1c88292b618a58703ab614665f66.png\" alt=\"\"\u003e          \u003cdiv class=\"name\"\u003e老司机\u003c/div\u003e        \u003c/li\u003e      \u003c/ul\u003e      \u003cdiv class=\"user_head\"\u003e        操作      \u003c/div\u003e      \u003cdiv class=\"body actions\"\u003e        \u003ca-button type=\"primary\"\u003e绑定邮箱\u003c/a-button\u003e        \u003ca-button type=\"primary\"\u003e修改密码\u003c/a-button\u003e        \u003ca-button type=\"danger\"\u003e注销退出\u003c/a-button\u003e      \u003c/div\u003e    \u003c/div\u003e  \u003c/div\u003e\u003c/template\u003eVue\u003cstyle lang=\"scss\"\u003e.gvb_user_info_bg {  background-color: var(--card_bg);  display: flex;  justify-content: center;  padding: 20px;  .gvb_user_info_view {    width: 1000px;  }  .user_head {    font-size: 18px;    display: flex;    align-items: center;    font-weight: 600;    margin-bottom: 10px;    \u0026::before {      width: 3px;      height: 1.5rem;      display: inline-block;      content: \"\";      margin-right: 5px;      background-color: var(--active);    }  }  .body {    margin-bottom: 20px;  }  .user_info_view {    .ant-form-item {      margin: 0 0 5px;    }    .user_ipt {      width: 400px;    }  }  .actions {    .ant-btn {      margin-right: 10px;    }  }  .medal {    display: flex;    flex-wrap: wrap;    li {      margin-right: 20px;      .name {        text-align: center;      }      \u0026:last-child {        margin-right: 0;      }      img {        width: 60px;        height: 60px;      }    }  }  .daily_reward {    display: flex;    \u003e div {      display: flex;      flex-direction: column;      align-items: center;      margin-right: 50px;    }    img {      width: 60px;      height: 60px;    }  }}\u003c/style\u003e\n",
        "slug": "2iBpzIYBenTVo4BRkquV#我的信息",
        "title": "我的信息"
      },
      "id": "3CBpzIYBenTVo4BRk6uH"
    },
    {
      "row": {
        "key": "R05z9IYBUbEPfcjaDSjI",
        "body": "你好啊\n",
        "slug": "R05z9IYBUbEPfcjaDSjI#普通用户的文章",
        "title": "普通用户的文章"
      },
      "id": "SE5z9IYBUbEPfcjaDijT"
    }
  ],
  "mapping": {
    "mappings": {
      "properties": {
        "body": {
          "type": "text"
        },
        "key": {
          "type": "keyword"
        },
        "slug": {
          "type": "keyword"
        },
        "title": {
          "type": "text"
        }
      }
    }
  }
}