{"data":[{"row":{"key":"B9cKwYYBMeB77WN1l0bs","body":"","slug":"B9cKwYYBMeB77WN1l0bs#13.文章管理","title":"13.文章管理"},"id":"CNcKwYYBMeB77WN1mEYi"},{"row":{"key":"B9cKwYYBMeB77WN1l0bs","body":"后端增加了标签名称列表，文章分类列表注意事项：文章分类搜索应该注意还是不要走key这个参数去查询，不然 模糊匹配和分类搜索就只能二选一Vue\u003ctemplate\u003e  \u003cdiv\u003e    \u003cGVBTable        :columns=\"data.columns\"        base-url=\"/api/articles\"        like-title=\"搜索文章标题\"        ref=\"gvbTable\"        default-delete    \u003e      \u003ctemplate #add\u003e        \u003ca-button type=\"primary\"\u003e添加\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #edit=\"{record}\"\u003e        \u003ca-button type=\"primary\"\u003e编辑\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #cell=\"{column, record, index }\"\u003e        \u003ctemplate v-if=\"column.key === 'index'\"\u003e          \u003cspan\u003e{{ index + 1 }}\u003c/span\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'title'\"\u003e          \u003cspan class=\"gvb_article_title\" v-html=\"record.title\"\u003e\u003c/span\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'banner_url'\"\u003e          \u003cimg :src=\"'/' + record.banner_url\" alt=\"\" height=\"60\" style=\"border-radius: 5px\"\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'data'\"\u003e          \u003cdiv class=\"gvb_article_data\"\u003e            \u003cspan\u003e\u003ci class=\"fa fa-eye\"\u003e\u003c/i\u003e{{ record.look_count }}\u003c/span\u003e            \u003cspan\u003e\u003ci class=\"fa fa-thumbs-o-up\"\u003e\u003c/i\u003e{{ record.digg_count }}\u003c/span\u003e            \u003cspan\u003e\u003ci class=\"fa fa-comment-o\"\u003e\u003c/i\u003e{{ record.comment_count }}\u003c/span\u003e            \u003cspan\u003e\u003ci class=\"fa fa-star-o\"\u003e\u003c/i\u003e{{ record.collects_count }}\u003c/span\u003e          \u003c/div\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'abstract'\"\u003e          \u003cspan class=\"gvb_article_abstract\"\u003e{{ record.abstract }}\u003c/span\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'tags'\"\u003e          \u003cdiv class=\"gvb_article_tags\"\u003e            \u003ca-tag :color=\"getColor(i)\" v-for=\"(item, i) in record.tags\" :key=\"i\"\u003e{{ item }}\u003c/a-tag\u003e          \u003c/div\u003e        \u003c/template\u003e      \u003c/template\u003e      \u003ctemplate #filters\u003e        \u003ca-select            class=\"gvb_select\"            v-model:value=\"tag\"            style=\"width: 200px\"            allowClear            @change=\"onFilter\"            :options=\"data.tagOptions\"            placeholder=\"筛选文章标签\"        \u003e\u003c/a-select\u003e        \u003ca-select            class=\"gvb_select\"            v-model:value=\"category\"            style=\"width: 200px\"            allowClear            @change=\"onFilter\"            :options=\"data.categoryOptions\"            placeholder=\"筛选文章分类\"        \u003e\u003c/a-select\u003e      \u003c/template\u003e    \u003c/GVBTable\u003e  \u003c/div\u003e\u003c/template\u003e\u003cscript setup\u003eimport {getTagNameListApi} from \"@/api/tag_api\";import {getCategoryListApi} from \"@/api/article_api\";import {reactive, ref} from \"vue\";import GVBTable from \"@/components/admin/gvb_table.vue\"const tag = ref(null)const category = ref(null)const gvbTable = ref(null)const data = reactive({  list: [    {      \"abstract\": \"需要一个全局变量，用于保存配置文件，存放在global目录下\",      \"banner_id\": 3,      \"banner_url\": \"uploads/file/29.jpg\",      \"category\": \"p1\",      \"collects_count\": 0,      \"comment_count\": 0,      \"created_at\": \"2023-02-24 21:21:29\",      \"digg_count\": 0,      \"id\": \"P46Vg4YB6uoytGZA-bE7\",      \"look_count\": 0,      \"tags\": [        \"golang\",        \"后端\",        \"教程\",      ],      \"title\": \"后端项目搭建\",      \"updated_at\": \"2023-02-24 21:31:13\",      \"user_avatar\": \"/uploads/avatar/default.png\",      \"user_id\": 1,      \"user_nick_name\": \"admin\"    },  ],  columns: [    // {title: 'id', dataIndex: 'id', key: 'id'},    {title: 'Index', dataIndex: 'index', key: 'index'},    {title: '文章标题', dataIndex: 'title', key: 'title'},    {title: '文章分类', dataIndex: 'category', key: 'category'},    {title: '文章简介', dataIndex: 'abstract', key: 'abstract'},    {title: '作者', dataIndex: 'user_nick_name', key: 'user_nick_name'},    {title: '封面', dataIndex: 'banner_url', key: 'banner_url'},    {title: '文章数据', dataIndex: 'data', key: 'data'},    // {title: '浏览量', dataIndex: 'look_count', key: 'look_count'},    // {title: '点赞', dataIndex: 'digg_count', key: 'digg_count'},    // {title: '评论', dataIndex: 'comment_count', key: 'comment_count'},    // {title: '收藏', dataIndex: 'collects_count', key: 'collects_count'},    {title: '标签', dataIndex: 'tags', key: 'tags'},    {title: '发布时间', dataIndex: 'created_at', key: 'created_at'},    {title: '操作', dataIndex: 'action', key: 'action'},  ],  tagOptions: [],  categoryOptions: []})const colorList = [\"red\", \"blue\", \"green\", \"purple\", \"cyan\", \"orange\", \"pink\"]function getColor(index) {  return colorList[index]}function onFilter() {  gvbTable.value.ExportList({tag: tag.value, key: category.value})}async function getData() {  let res = await getTagNameListApi()  data.tagOptions = res.data  let c = await getCategoryListApi()  data.categoryOptions = c.data}getData()\u003c/script\u003e\u003cstyle lang=\"scss\"\u003e.gvb_article_data {  span {    margin-right: 7px;    i {      margin-right: 3px;    }    \u0026:last-child {      margin-right: 0;    }  }}.gvb_article_abstract {  max-width: 12rem;  overflow-x: hidden;  display: inline-block;  white-space: nowrap;  text-overflow: ellipsis;}.gvb_article_tags {  display: grid;  grid-template-columns: repeat(3, 1fr);  grid-column-gap: 10px;  grid-row-gap: 10px;  justify-items: self-start;}.gvb_article_title {  em {    color: red;    margin-right: 1px;  }}\u003c/style\u003e\n","slug":"B9cKwYYBMeB77WN1l0bs#文章列表","title":"文章列表"},"id":"CdcKwYYBMeB77WN1mEYi"},{"row":{"key":"B9cKwYYBMeB77WN1l0bs","body":"markdown组件选择1. 主题切换2. 图片上传3. 粘贴图片上传4. ctrl s打开侧边栏Vuenpm i md-editor-v3\n","slug":"B9cKwYYBMeB77WN1l0bs#文章添加","title":"文章添加"},"id":"CtcKwYYBMeB77WN1mEYi"},{"row":{"key":"B9cKwYYBMeB77WN1l0bs","body":"监听store里面的主题变化Vue\u003ctemplate\u003e  \u003cmd-editor v-model=\"data.content\" :theme=\"theme\"/\u003e\u003c/template\u003e\u003cscript setup\u003eimport {reactive, ref, watch} from 'vue';import {useStore} from \"@/stores/store\";import MdEditor from 'md-editor-v3';import 'md-editor-v3/lib/style.css';const store = useStore()const theme = ref(\"dark\")const data = reactive({  content: \"hello fengfeng\",})watch(() =\u003e store.theme, (themeVal) =\u003e {  theme.value = themeVal ? \"\" : \"dark\"}, {immediate: true}) // 初始化就执行回调\u003c/script\u003e\u003cstyle scoped\u003e.md-editor-dark {  --md-color: #999;  --md-hover-color: #bbb;  --md-bk-color: #141414;  // 自己改的黑夜颜色  --md-bk-color-outstand: #111;  --md-bk-hover-color: #1b1a1a;  --md-border-color: #2d2d2d;  --md-border-hover-color: #636262;  --md-border-active-color: #777;  --md-modal-mask: #00000073;  --md-scrollbar-bg-color: #0f0f0f;  --md-scrollbar-thumb-color: #2d2d2d;  --md-scrollbar-thumb-hover-color: #3a3a3a;  --md-scrollbar-thumb-active-color: #3a3a3a;}// 高度.md-editor {  height: calc(100vh - 130px);}\u003c/style\u003e\n","slug":"B9cKwYYBMeB77WN1l0bs#主题切换","title":"主题切换"},"id":"C9cKwYYBMeB77WN1mEYi"},{"row":{"key":"B9cKwYYBMeB77WN1l0bs","body":"自带了从剪贴板上传图片的功能Vue\u003ctemplate\u003e  \u003cmd-editor v-model=\"data.content\"  @on-upload-img=\"onUploadImg\"/\u003e\u003c/template\u003e\u003cscript setup\u003eimport {reactive} from 'vue';import MdEditor from 'md-editor-v3';import {uploadImageApi} from \"@/api/image_api\";import 'md-editor-v3/lib/style.css';const data = reactive({  content: \"hello fengfeng\",})const onUploadImg = async (files, callback) =\u003e {  const res = await Promise.all(      files.map((file) =\u003e {        return uploadImageApi(file)      })  );  callback(res.map((item) =\u003e item.data));};\u003c/script\u003eimage_api.jsVueexport function uploadImageApi(file) {    return new Promise((resolve, reject) =\u003e {        const form = new FormData();        form.append('image', file);        Service.post(\"/api/image\", form, {            headers: {                'Content-Type': 'multipart/form-data'            }        }).then((res) =\u003e resolve(res))            .catch((error) =\u003e reject(error));    })}\n","slug":"B9cKwYYBMeB77WN1l0bs#图片上传","title":"图片上传"},"id":"DNcKwYYBMeB77WN1mEYi"},{"row":{"key":"DdcMwYYBMeB77WN1sEY8","body":"Go\u003ctemplate\u003e  \u003cdiv\u003e    \u003cGVBTable        :columns=\"data.columns\"        base-url=\"/api/chat_groups_records\"        like-title=\"搜索消息名称\"        ref=\"gvbTable\"        :is-add=\"false\"        :is-edit=\"false\"        :is-delete=\"false\"        default-delete    \u003e      \u003ctemplate #cell=\"{column, record}\"\u003e        \u003ctemplate v-if=\"column.key === 'avatar'\"\u003e          \u003cimg :src=\"'/' + record.avatar\" alt=\"\" v-if=\"record.avatar !== ''\"               style=\"width: 30px;height: 30px;border-radius: 50%\"\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'is_group'\"\u003e          \u003ca-tag v-if=\"record.is_group\" color=\"blue\"\u003e群消息\u003c/a-tag\u003e          \u003ca-tag v-else color=\"red\"\u003e系统消息\u003c/a-tag\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'msg_type'\"\u003e          \u003cspan color=\"blue\"\u003e{{  chatTypeDict[record.msg_type] }}\u003c/span\u003e        \u003c/template\u003e      \u003c/template\u003e      \u003ctemplate #filters\u003e      \u003c/template\u003e    \u003c/GVBTable\u003e  \u003c/div\u003e\u003c/template\u003e\u003cscript setup\u003eimport GVBTable from \"@/components/admin/gvb_table.vue\"import {reactive, ref} from \"vue\";const level = ref(undefined)const gvbTable = ref(null)/*  InRoomMsg  ctype.MsgType = 1 // 进入聊天室  TextMsg    ctype.MsgType = 2 // 发文本消息  ImageMsg   ctype.MsgType = 3 // 图片消息  VoiceMsg   ctype.MsgType = 4 // 语音消息  VideoMsg   ctype.MsgType = 5 // 视频消息  SystemMsg  ctype.MsgType = 6 // 系统消息  OutRoomMsg ctype.MsgType = 7 // 退出聊天室 */const chatTypeDict = {  1: \"进入聊天室\",  2: \"文本消息\",  3: \"图片消息\",  4: \"语音消息\",  5: \"视频消息\",  6: \"系统消息\",  7: \"退出聊天室\",}function onFilter() {  gvbTable.value.ExportList({level: level.value})}/*  {        \"avatar\": \"uploads/chat_avatar/大.png\",        \"content\": \"大意的巴蒂斯图塔 进入聊天室\",        \"created_at\": \"2023-02-26T10:47:16.948+08:00\",        \"id\": 14,        \"is_group\": true,        \"msg_type\": 1,        \"nick_name\": \"大意的巴蒂斯图塔\"      }, */const data = reactive({  columns: [    {title: 'id', dataIndex: 'id', key: 'id'},    {title: '昵称', dataIndex: 'nick_name', key: 'nick_name'},    {title: '头像', dataIndex: 'avatar', key: 'avatar'},    {title: '内容', dataIndex: 'content', key: 'content'},    {title: '是否是群聊', dataIndex: 'is_group', key: 'is_group'},    {title: '消息类型', dataIndex: 'msg_type', key: 'msg_type'},    {title: '日志时间', dataIndex: 'created_at', key: 'created_at'},  ],})\u003c/script\u003e\n","slug":"DdcMwYYBMeB77WN1sEY8#12.群聊消息","title":"12.群聊消息"},"id":"DtcMwYYBMeB77WN1sEZR"},{"row":{"key":"D9cVwYYBMeB77WN1XkY7","body":"Vue\u003ctemplate\u003e  \u003cdiv\u003e    \u003cGVBTable        :columns=\"data.columns\"        base-url=\"/api/logs\"        like-title=\"搜索日志名称\"        ref=\"gvbTable\"        :is-add=\"false\"        :is-edit=\"false\"        default-delete    \u003e      \u003ctemplate #cell=\"{column, record}\"\u003e        \u003ctemplate v-if=\"column.key === 'level'\"\u003e          \u003ca-tag :color=\"levelColor[record.level]\"\u003e{{ record.level }}\u003c/a-tag\u003e        \u003c/template\u003e      \u003c/template\u003e       \u003ctemplate #filters\u003e        \u003ca-select          class=\"gvb_select\"          v-model:value=\"level\"          style=\"width: 200px\"          allowClear          @change=\"onFilter\"          :options=\"levelOptions\"          placeholder=\"筛选日志等级\"      \u003e\u003c/a-select\u003e      \u003c/template\u003e    \u003c/GVBTable\u003e  \u003c/div\u003e\u003c/template\u003e\u003cscript setup\u003eimport GVBTable from \"@/components/admin/gvb_table.vue\"import {reactive, ref} from \"vue\";const levelColor = {  \"debug\": \"green\",  \"info\": \"blue\",  \"warn\": \"orange\",  \"error\": \"red\",}const levelOptions = [  {label: \"debug\", value: 1,},  {label: \"info\", value: 2,},  {label: \"warn\", value: 3,},  {label: \"error\", value: 4,}]const level = ref(undefined)const gvbTable = ref(null)function onFilter(){  gvbTable.value.ExportList({level: level.value})}const data = reactive({  columns: [    {title: 'id', dataIndex: 'id', key: 'id'},    {title: 'ip', dataIndex: 'ip', key: 'ip'},    {title: '地址', dataIndex: 'addr', key: 'addr'},    {title: '等级', dataIndex: 'level', key: 'level'},    {title: '内容', dataIndex: 'content', key: 'content'},    {title: '日志时间', dataIndex: 'created_at', key: 'created_at'},    {title: '操作', dataIndex: 'action', key: 'action'},  ],})\u003c/script\u003e后端的一些bug1. swag，自定义类型不能识别Gotype LogRequest struct {  models.PageInfo  Level log_stash.Level `form:\"level\"`}// LogListView 日志列表// @Tags 日志管理// @Summary 日志列表// @Description 日志列表// @Param data query LogRequest    false  \"查询参数\"// @Param level query int false \"日志等级\"// @Router /api/logs [get]// @Produce json// @Success 200 {object} res.Response{data=res.ListResponse[log_stash.LogStashModel]}func (LogApi) LogListView(c *gin.Context) {}2. 分页查询，总条数问题\n","slug":"D9cVwYYBMeB77WN1XkY7#日志管理","title":"日志管理"},"id":"ENcVwYYBMeB77WN1XkZQ"},{"row":{"key":"EdcWwYYBMeB77WN1jEYG","body":"\n","slug":"EdcWwYYBMeB77WN1jEYG#菜单管理","title":"菜单管理"},"id":"EtcWwYYBMeB77WN1jEYh"},{"row":{"key":"EdcWwYYBMeB77WN1jEYG","body":"Vue\u003ca-select    ref=\"select\"    v-model:value=\"bannerIDList\"    placeholder=\"选择banner\"    mode=\"multiple\"    @change=\"bannerChange\"\u003e  \u003ca-select-option :value=\"item.id\" v-for=\"item in data.imageNameList\" :key=\"item.id\"\u003e    \u003cimg :src=\"item.path\" alt=\"\" height=\"30\" style=\"border-radius: 5px; margin-right: 10px\"\u003e    \u003cspan\u003e{{ item.name }}\u003c/span\u003e  \u003c/a-select-option\u003e  \u003ctemplate #tagRender=\"{ value: val, label, closable, onClose, option }\"\u003e    \u003cimg :src=\"getLabel(label)\" height=\"30\" style=\"border-radius: 5px; margin-right: 5px\"/\u003e  \u003c/template\u003e\u003c/a-select\u003e       \u003cscript setup\u003eimport GVBTable from \"@/components/admin/gvb_table.vue\"import {reactive, ref} from \"vue\";import {imageNameListApi} from \"@/api/image_api\";import {createMenuApi, updateMenuApi} from \"@/api/menu_api\";import {message} from \"ant-design-vue\";const bannerIDList = ref([])const state = reactive({  image_sort_list: []})// 获取图片数据async function getData() {  let res = await imageNameListApi()  data.imageNameList = res.data}// 选中之后的回显function getLabel(label) {  return label[0].props.src}// 选择菜单图片function bannerChange(idList) {  state.image_sort_list = []  for (let i = 0; i \u003c idList.length; i++) {    state.image_sort_list.push({      image_id: idList[i],      sort: i    })  }}getData()const data = reactive({  imageNameList: []})\u003c/script\u003ebanner的先后顺序，就是点击的顺序\n","slug":"EdcWwYYBMeB77WN1jEYG#select显示图片","title":"select显示图片"},"id":"E9cWwYYBMeB77WN1jEYh"},{"row":{"key":"EdcWwYYBMeB77WN1jEYG","body":"abstract是一个字符串，添加之前，要变成列表添加完成之后，两个都要清空image_sort_list是用户改变banner的时候进行修改的Vue\u003ca-modal :title=\"editID ? '编辑菜单' : '添加菜单'\" v-model:visible=\"data.visible\" @ok=\"handleOK\"\u003e  \u003ca-form      :model=\"state\"      name=\"basic\"      ref=\"formRef\"      :label-col=\"{ span: 4 }\"      :wrapper-col=\"{ span: 20 }\"      autocomplete=\"off\"  \u003e    \u003ca-form-item label=\"菜单名称\" name=\"title\" has-feedback                 :rules=\"[{ required: true, message: '请输入菜单名称' ,trigger: 'blur'}]\"\u003e      \u003ca-input v-model:value=\"state.title\" placeholder=\"菜单名称\"/\u003e    \u003c/a-form-item\u003e    \u003ca-form-item label=\"菜单路径\" name=\"path\" has-feedback                 :rules=\"[{ required: true, message: '请输入菜单路径' ,trigger: 'blur'}]\"\u003e      \u003ca-input v-model:value=\"state.path\" placeholder=\"菜单路径\"/\u003e    \u003c/a-form-item\u003e    \u003ca-form-item label=\"slogan\" name=\"slogan\" has-feedback\u003e      \u003ca-input v-model:value=\"state.slogan\" placeholder=\"slogan\"/\u003e    \u003c/a-form-item\u003e    \u003ca-form-item label=\"菜单简介\" name=\"abstract\" has-feedback\u003e      \u003ca-textarea          v-model:value=\"state_abstract\"          placeholder=\"菜单简介,多个简介用换行分隔\"          :auto-size=\"{ minRows: 2, maxRows: 5 }\"      /\u003e    \u003c/a-form-item\u003e    \u003ca-form-item label=\"banner时间\" name=\"banner_time\" has-feedback\u003e      \u003ca-input-number v-model:value=\"state.banner_time\" placeholder=\"banner时间\"/\u003e    \u003c/a-form-item\u003e    \u003ca-form-item label=\"简介时间\" name=\"abstract_time\" has-feedback\u003e      \u003ca-input-number v-model:value=\"state.abstract_time\" placeholder=\"简介时间\"/\u003e    \u003c/a-form-item\u003e    \u003ca-form-item label=\"序号\" name=\"sort\" has-feedback\u003e      \u003ca-input-number v-model:value=\"state.sort\" placeholder=\"序号\"/\u003e    \u003c/a-form-item\u003e    \u003ca-form-item label=\"banner选择\"\u003e      \u003ca-select          ref=\"select\"          v-model:value=\"bannerIDList\"          placeholder=\"选择banner\"          mode=\"multiple\"          @change=\"bannerChange\"      \u003e        \u003ca-select-option :value=\"item.id\" v-for=\"item in data.imageNameList\" :key=\"item.id\"\u003e          \u003cimg :src=\"item.path\" alt=\"\" height=\"30\" style=\"border-radius: 5px; margin-right: 10px\"\u003e          \u003cspan\u003e{{ item.name }}\u003c/span\u003e        \u003c/a-select-option\u003e        \u003ctemplate #tagRender=\"{ value: val, label, closable, onClose, option }\"\u003e          \u003cimg :src=\"getLabel(label)\" height=\"30\" style=\"border-radius: 5px; margin-right: 5px\"/\u003e        \u003c/template\u003e      \u003c/a-select\u003e    \u003c/a-form-item\u003e  \u003c/a-form\u003e\u003c/a-modal\u003e   \u003cscript setup\u003eimport GVBTable from \"@/components/admin/gvb_table.vue\"import {reactive, ref} from \"vue\";import {imageNameListApi} from \"@/api/image_api\";import {createMenuApi, updateMenuApi} from \"@/api/menu_api\";import {message} from \"ant-design-vue\";const state_abstract = ref(\"\")const bannerIDList = ref([])const _state = {  abstract_time: 7,  banner_time: 7,  path: \"\",  slogan: \"\",  sort: 0,  title: \"\",  abstract: [],  image_sort_list: []}const state = reactive({  abstract_time: 7,  banner_time: 7,  path: \"\",  slogan: \"\",  sort: 0,  title: \"\",  abstract: [],  image_sort_list: []})const formRef = ref(null)// 获取图片数据async function getData() {  let res = await imageNameListApi()  data.imageNameList = res.data}// 选中之后的回显function getLabel(label) {  return label[0].props.src}// 添加菜单，更新菜单async function handleOK() {  try {    formRef.value.validate()  } catch (e) {    return  }  state.abstract = state_abstract.value.split(\"\\n\")  let res  if (editID.value) {    res = await updateMenuApi(editID.value, state)  } else {    res = await createMenuApi(state)  }  if (res.code) {    message.error(res.msg)    return  }  state_abstract.value = \"\"  bannerIDList.value = []  data.visible = false  message.success(res.msg)  gvbTable.value.ExportList()  return}// 选择菜单图片function bannerChange(idList) {  state.image_sort_list = []  for (let i = 0; i \u003c idList.length; i++) {    state.image_sort_list.push({      image_id: idList[i],      sort: i    })  }}getData()const gvbTable = ref(null)const editID = ref(0)const data = reactive({  visible: false,  imageNameList: []})function addMenu() {  editID.value = 0  data.visible = true  Object.assign(state, _state)}function updateModal(record) {  editID.value = record.id  state.abstract_time = record.abstract_time  state.banner_time = record.banner_time  state.path = record.path  state.slogan = record.slogan  state.sort = record.sort  state.title = record.title  state.abstract = record.abstract  state_abstract.value = record.abstract.join(\"\\n\")  bannerIDList.value = []  state.image_sort_list = []  for (let i = 0; i \u003c record.banners.length; i++) {    bannerIDList.value.push(record.banners[i].id)    state.image_sort_list.push({      image_id: record.banners[i].id,      sort: i    })  }  data.visible = true}\u003c/script\u003e\n","slug":"EdcWwYYBMeB77WN1jEYG#添加菜单，更新菜单","title":"添加菜单，更新菜单"},"id":"FNcWwYYBMeB77WN1jEYh"},{"row":{"key":"EdcWwYYBMeB77WN1jEYG","body":"Vuedisplay: grid; grid-template-columns: repeat(3, 1fr);grid-column-gap: 5px; grid-row-gap: 5px;完整代码Vue\u003ctemplate\u003e  \u003cdiv\u003e    \u003ca-modal :title=\"editID ? '编辑菜单' : '添加菜单'\" v-model:visible=\"data.visible\" @ok=\"handleOK\"    \u003e      \u003ca-form          :model=\"state\"          name=\"basic\"          ref=\"formRef\"          :label-col=\"{ span: 4 }\"          :wrapper-col=\"{ span: 20 }\"          autocomplete=\"off\"      \u003e        \u003ca-form-item label=\"菜单名称\" name=\"title\" has-feedback                     :rules=\"[{ required: true, message: '请输入菜单名称' ,trigger: 'blur'}]\"\u003e          \u003ca-input v-model:value=\"state.title\" placeholder=\"菜单名称\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"菜单路径\" name=\"path\" has-feedback                     :rules=\"[{ required: true, message: '请输入菜单路径' ,trigger: 'blur'}]\"\u003e          \u003ca-input v-model:value=\"state.path\" placeholder=\"菜单路径\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"slogan\" name=\"slogan\" has-feedback\u003e          \u003ca-input v-model:value=\"state.slogan\" placeholder=\"slogan\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"菜单简介\" name=\"abstract\" has-feedback\u003e          \u003ca-textarea              v-model:value=\"state_abstract\"              placeholder=\"菜单简介,多个简介用换行分隔\"              :auto-size=\"{ minRows: 2, maxRows: 5 }\"          /\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"banner时间\" name=\"banner_time\" has-feedback\u003e          \u003ca-input-number v-model:value=\"state.banner_time\" placeholder=\"banner时间\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"简介时间\" name=\"abstract_time\" has-feedback\u003e          \u003ca-input-number v-model:value=\"state.abstract_time\" placeholder=\"简介时间\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"序号\" name=\"sort\" has-feedback\u003e          \u003ca-input-number v-model:value=\"state.sort\" placeholder=\"序号\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"banner选择\"\u003e          \u003ca-select              ref=\"select\"              v-model:value=\"bannerIDList\"              placeholder=\"选择banner\"              mode=\"multiple\"              @change=\"bannerChange\"          \u003e            \u003ca-select-option :value=\"item.id\" v-for=\"item in data.imageNameList\" :key=\"item.id\"\u003e              \u003cimg :src=\"item.path\" alt=\"\" height=\"30\" style=\"border-radius: 5px; margin-right: 10px\"\u003e              \u003cspan\u003e{{ item.name }}\u003c/span\u003e            \u003c/a-select-option\u003e            \u003ctemplate #tagRender=\"{ value: val, label, closable, onClose, option }\"\u003e              \u003cimg :src=\"getLabel(label)\" height=\"30\" style=\"border-radius: 5px; margin-right: 5px\"/\u003e            \u003c/template\u003e          \u003c/a-select\u003e        \u003c/a-form-item\u003e      \u003c/a-form\u003e    \u003c/a-modal\u003e    \u003cGVBTable        :columns=\"data.columns\"        base-url=\"/api/menus\"        like-title=\"搜索菜单名称\"        ref=\"gvbTable\"        default-delete    \u003e      \u003ctemplate #add\u003e        \u003ca-button type=\"primary\" @click=\"addMenu\"\u003e添加\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #edit=\"{record}\"\u003e        \u003ca-button type=\"primary\" @click=\"updateModal(record)\"\u003e编辑\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #cell=\"{column, record}\"\u003e        \u003ctemplate v-if=\"column.key === 'abstract'\"\u003e          \u003cdiv v-for=\"(item, index) in record.abstract\" :key=\"index\"\u003e{{ item }}\u003c/div\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'banners'\"\u003e          \u003cdiv style=\"display: grid; grid-template-columns: repeat(3, 1fr); grid-column-gap: 5px; grid-row-gap: 5px\"\u003e            \u003cimg v-for=\"item in record.banners\" :key=\"item.id\" :src=\"item.path\" height=\"40\"                 style=\"border-radius: 5px;\"\u003e          \u003c/div\u003e        \u003c/template\u003e      \u003c/template\u003e    \u003c/GVBTable\u003e  \u003c/div\u003e\u003c/template\u003e\u003cscript setup\u003eimport GVBTable from \"@/components/admin/gvb_table.vue\"import {reactive, ref} from \"vue\";import {imageNameListApi} from \"@/api/image_api\";import {createMenuApi, updateMenuApi} from \"@/api/menu_api\";import {message} from \"ant-design-vue\";const state_abstract = ref(\"\")const bannerIDList = ref([])const _state = {  abstract_time: 7,  banner_time: 7,  path: \"\",  slogan: \"\",  sort: 0,  title: \"\",  abstract: [],  image_sort_list: []}const state = reactive({  abstract_time: 7,  banner_time: 7,  path: \"\",  slogan: \"\",  sort: 0,  title: \"\",  abstract: [],  image_sort_list: []})const formRef = ref(null)// 获取图片数据async function getData() {  let res = await imageNameListApi()  data.imageNameList = res.data}// 选中之后的回显function getLabel(label) {  return label[0].props.src}// 添加菜单，更新菜单async function handleOK() {  try {    formRef.value.validate()  } catch (e) {    return  }  state.abstract = state_abstract.value.split(\"\\n\")  let res  if (editID.value) {    res = await updateMenuApi(editID.value, state)  } else {    res = await createMenuApi(state)  }  if (res.code) {    message.error(res.msg)    return  }  state_abstract.value = \"\"  bannerIDList.value = []  data.visible = false  message.success(res.msg)  gvbTable.value.ExportList()  return}// 选择菜单图片function bannerChange(idList) {  state.image_sort_list = []  for (let i = 0; i \u003c idList.length; i++) {    state.image_sort_list.push({      image_id: idList[i],      sort: i    })  }}getData()const gvbTable = ref(null)const editID = ref(0)const data = reactive({  columns: [    {title: 'id', dataIndex: 'id', key: 'id'},    {title: '菜单标题', dataIndex: 'title', key: 'title'},    {title: '路径', dataIndex: 'path', key: 'path'},    {title: 'slogan', dataIndex: 'slogan', key: 'slogan'},    {title: '介绍', dataIndex: 'abstract', key: 'abstract'},    {title: '介绍切换时间', dataIndex: 'abstract_time', key: 'abstract_time'},    {title: 'banner切换时间', dataIndex: 'banner_time', key: 'banner_time'},    {title: '排序', dataIndex: 'sort', key: 'sort'},    {title: 'banner', dataIndex: 'banners', key: 'banners'},    {title: '发布时间', dataIndex: 'created_at', key: 'created_at'},    {title: '操作', dataIndex: 'action', key: 'action'},  ],  visible: false,  imageNameList: []})function addMenu() {  editID.value = 0  data.visible = true  Object.assign(state, _state)}function updateModal(record) {  editID.value = record.id  state.abstract_time = record.abstract_time  state.banner_time = record.banner_time  state.path = record.path  state.slogan = record.slogan  state.sort = record.sort  state.title = record.title  state.abstract = record.abstract  state_abstract.value = record.abstract.join(\"\\n\")  bannerIDList.value = []  state.image_sort_list = []  for (let i = 0; i \u003c record.banners.length; i++) {    bannerIDList.value.push(record.banners[i].id)    state.image_sort_list.push({      image_id: record.banners[i].id,      sort: i    })  }  data.visible = true}\u003c/script\u003e\n","slug":"EdcWwYYBMeB77WN1jEYG#图片按照一行三列排","title":"图片按照一行三列排"},"id":"FdcWwYYBMeB77WN1jEYh"},{"row":{"key":"Ftc6wYYBMeB77WN1QkbM","body":"在base_api.js中，统一给get列表页请求加一个headersVueexport function baseListApi(url, params) {return Service.get(url, {params, headers:{  Gvb_referer: \"admin\"  }})}原因是因为referer没法在前端配置\n","slug":"Ftc6wYYBMeB77WN1QkbM#广告管理","title":"广告管理"},"id":"F9c6wYYBMeB77WN1Qkbi"},{"row":{"key":"Ftc6wYYBMeB77WN1QkbM","body":"Vue\u003ctemplate\u003e  \u003cdiv\u003e    \u003cGVBTable        :columns=\"data.columns\"        base-url=\"/api/adverts\"        like-title=\"搜索广告名称\"        ref=\"gvbTable\"        default-delete    \u003e      \u003ctemplate #add\u003e        \u003ca-button type=\"primary\" \u003e添加\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #edit=\"{record}\"\u003e        \u003ca-button type=\"primary\"\u003e编辑\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #cell=\"{column, record}\"\u003e        \u003ctemplate v-if=\"column.key === 'images'\"\u003e          \u003cimg :src=\"record.images\" alt=\"\" height=\"60\" style=\"border-radius: 5px\"\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'is_show'\"\u003e          \u003ca-tag v-if=\"record.is_show\" color=\"green\"\u003e显示\u003c/a-tag\u003e          \u003ca-tag v-else color=\"red\"\u003e不显示\u003c/a-tag\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'href'\"\u003e          \u003cspan\u003e{{ record.href }}\u003c/span\u003e          \u003ca-button type=\"link\" target=\"_blank\" :href=\"record.href\"\u003e访问\u003c/a-button\u003e        \u003c/template\u003e      \u003c/template\u003e    \u003c/GVBTable\u003e  \u003c/div\u003e\u003c/template\u003e\u003cscript setup\u003eimport {reactive} from \"vue\";const data = reactive({  columns: [    {title: 'id', dataIndex: 'id', key: 'id'},    {title: '广告标题', dataIndex: 'title', key: 'title'},    {title: '图片路径', dataIndex: 'images', key: 'images'},    {title: '跳转地址', dataIndex: 'href', key: 'href'},    {title: '是否显示', dataIndex: 'is_show', key: 'is_show'},    {title: '添加时间', dataIndex: 'created_at', key: 'created_at'},    {title: '操作', dataIndex: 'action', key: 'action'},  ],})\u003c/script\u003e\n","slug":"Ftc6wYYBMeB77WN1QkbM#广告列表","title":"广告列表"},"id":"GNc6wYYBMeB77WN1Qkbi"},{"row":{"key":"Ftc6wYYBMeB77WN1QkbM","body":"Vue\u003ctemplate\u003e  \u003cdiv\u003e    \u003ca-modal :title=\"editID ? '编辑广告' : '添加广告'\" v-model:visible=\"data.visible\" @ok=\"handleOK\"\u003e      \u003ca-form          :model=\"state\"          name=\"basic\"          ref=\"formRef\"          :label-col=\"{ span: 4 }\"          :wrapper-col=\"{ span: 20 }\"          autocomplete=\"off\"      \u003e        \u003ca-form-item label=\"广告名称\" name=\"title\" has-feedback                     :rules=\"[{ required: true, message: '请输入广告名称' ,trigger: 'blur'}]\"\u003e          \u003ca-input v-model:value=\"state.title\" placeholder=\"广告名称\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"广告链接\" name=\"href\" has-feedback                     :rules=\"[{ required: true, message: '请输入广告链接' ,trigger: 'blur'}, {validator: checkUrl, message: 'url不合法', trigger: 'blur'}]\"\u003e          \u003ca-input v-model:value=\"state.href\" placeholder=\"广告链接\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"图片地址\" name=\"images\" has-feedback                     :rules=\"[{ required: true, message: '请输入图片地址' ,trigger: 'blur'}]\"\u003e          \u003ca-input v-model:value=\"state.images\" placeholder=\"图片地址\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"是否显示\" name=\"is_show\"\u003e          \u003ca-switch v-model:checked=\"state.is_show\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"图片预览\"\u003e          \u003cimg :src=\"state.images\" height=\"60\" style=\"border-radius: 5px\" alt=\"\"\u003e        \u003c/a-form-item\u003e      \u003c/a-form\u003e    \u003c/a-modal\u003e    \u003cGVBTable        :columns=\"data.columns\"        base-url=\"/api/adverts\"        like-title=\"搜索广告名称\"        ref=\"gvbTable\"        default-delete    \u003e      \u003ctemplate #add\u003e        \u003ca-button type=\"primary\" @click=\"addModal\"\u003e添加\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #edit=\"{record}\"\u003e        \u003ca-button type=\"primary\" @click=\"updateModal(record)\"\u003e编辑\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #cell=\"{column, record}\"\u003e        \u003ctemplate v-if=\"column.key === 'images'\"\u003e          \u003cimg :src=\"record.images\" alt=\"\" height=\"60\" style=\"border-radius: 5px\"\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'is_show'\"\u003e          \u003ca-tag v-if=\"record.is_show\" color=\"green\"\u003e显示\u003c/a-tag\u003e          \u003ca-tag v-else color=\"red\"\u003e不显示\u003c/a-tag\u003e        \u003c/template\u003e        \u003ctemplate v-if=\"column.key === 'href'\"\u003e          \u003cspan\u003e{{ record.href }}\u003c/span\u003e          \u003ca-button type=\"link\" target=\"_blank\" :href=\"record.href\"\u003e访问\u003c/a-button\u003e        \u003c/template\u003e      \u003c/template\u003e    \u003c/GVBTable\u003e  \u003c/div\u003e\u003c/template\u003e\u003cscript setup\u003eimport GVBTable from \"@/components/admin/gvb_table.vue\"import {reactive, ref} from \"vue\";import {message} from \"ant-design-vue\";import {createAdvertApi, updateAdvertApi} from \"@/api/advert_api\";const gvbTable = ref(null)const formRef = ref(null)const editID = ref(0)const _state = {  href: \"\",  images: \"\",  is_show: true,  title: \"\"}const state = reactive({  href: \"\",  images: \"\",  is_show: true,  title: \"\"})let checkUrl = async (_rule, value) =\u003e {  try {    new URL(value)    return Promise.resolve()  } catch (err) {    return Promise.reject('不合法的url');  }};const data = reactive({  columns: [    {title: 'id', dataIndex: 'id', key: 'id'},    {title: '广告标题', dataIndex: 'title', key: 'title'},    {title: '图片路径', dataIndex: 'images', key: 'images'},    {title: '跳转地址', dataIndex: 'href', key: 'href'},    {title: '是否显示', dataIndex: 'is_show', key: 'is_show'},    {title: '添加时间', dataIndex: 'created_at', key: 'created_at'},    {title: '操作', dataIndex: 'action', key: 'action'},  ],  visible: false,  modalVisible: false,  fileList: []})async function handleOK() {  let res  if (editID){    res = await updateAdvertApi(editID.value, state)  }else {    res = await createAdvertApi(state)  }  if (res.code) {    message.error(res.msg)    return  }  message.success(res.msg)  data.visible = false  Object.assign(state, _state)  gvbTable.value.ExportList()  return}function updateModal(record) {  editID.value = record.id  state.title = record.title  state.href = record.href  state.images = record.images  state.is_show = record.is_show  data.visible = true}function addModal() {  data.visible = true  editID.value = 0  Object.assign(state, _state)}\u003c/script\u003e接口Vueimport {Service} from \"@/services/service\";// 发布广告export function createAdvertApi(data){    return Service.post(\"/api/adverts\", data)}// 更新广告export function updateAdvertApi(id, data){    return Service.put(\"/api/adverts/\" + id, data)}\n","slug":"Ftc6wYYBMeB77WN1QkbM#添加广告，编辑广告","title":"添加广告，编辑广告"},"id":"Gdc6wYYBMeB77WN1Qkbi"},{"row":{"key":"Gtc7wYYBMeB77WN13UZE","body":"store.jsVueimport {defineStore} from 'pinia'import {message} from 'ant-design-vue';export const useStore = defineStore('gvb', {    state: () =\u003e {        return {            tabList: []        }    },    actions: {        // 添加tab        addTab(tab) {            // 已经存在，就不要再添加了            // 不存在的时候，进行添加            if (this.tabList.findIndex((item) =\u003e item.name === tab.name) === -1) {                this.tabList.push({name: tab.name, title: tab.title})            }        },        // tabs的持久化存储        saveTabs() {            localStorage.setItem(\"tabs\", JSON.stringify(this.tabList))        },        // 加载组件        loadTabs() {            let tabs = localStorage.getItem(\"tabs\")            if (tabs === null) {                this.tabList = [{title: \"首页\", name: \"home\"}]                return            }            this.tabList = JSON.parse(tabs)        },        // 移除tab        removeTab(tab) {            let index = this.tabList.findIndex((item) =\u003e item.name === tab.name)            this.tabList.splice(index, 1)            return index        },        // 移除全部tab        removeTabAll() {            this.tabList = [{title: \"首页\", name: \"home\"}]        }    }})gvb_tabs.vueVue\u003ctemplate\u003e  \u003cdiv class=\"gvb_tabs\"\u003e    \u003cdiv :class=\"isActive(item)\"         v-for=\"(item, index) in store.tabList\"         :key=\"index\"         @click=\"checkTab(item)\"    \u003e      {{ item.title }}      \u003cspan @click.stop=\"removeTab(item)\" v-if=\"item.name !== 'home'\" class=\"gvb_tab_remove_icon\"\u003e×\u003c/span\u003e    \u003c/div\u003e    \u003cdiv class=\"gvb_tab_item remove_all\" @click=\"removeTabAll\"\u003e      全部关闭    \u003c/div\u003e  \u003c/div\u003e\u003c/template\u003eVue\u003cscript setup\u003eimport {useStore} from \"@/stores/store\";import {useRoute, useRouter} from \"vue-router\";const store = useStore()const route = useRoute()const router = useRouter()// 是否选中function isActive(item) {  // 判断当前路由是否和item上的路由匹配  // 还要判断是不是home  if (route.name === item.name) {    return \"gvb_tab_item active\"  }  return \"gvb_tab_item\"}// 切换路由function checkTab(item) {  router.push({    name: item.name  })}// 移除tabfunction removeTab(item) {  let index = store.removeTab(item)  // 如果删除的是当前所在的tab  // 那就应该向前走一步  if (item.name === route.name) {    // 当前tab    // 前一个路由的路由索引    let beforeIndex = index - 1    // 前一个的路由    let beforeName = store.tabList[beforeIndex].name    router.push({      name: beforeName    })  }}// 关闭全部function removeTabAll() {  store.removeTabAll()  router.push({    name: \"home\"  })}// 加载路由store.loadTabs()// 监听刷新window.onbeforeunload = function () {  // 保存  store.saveTabs()  return undefined}\u003c/script\u003eVue\u003cstyle lang=\"scss\"\u003e.gvb_tabs {  height: 30px;  border-color: var(--order);  border-style: solid;  border-width: 1px 0 1px 0;  background-color: var(--card_bg);  display: flex;  justify-content: left;  align-items: center;  position: relative;  .gvb_tab_item {    background-color: var(--card_bg);    border: 1px solid var(--card_boder);    padding: 0 10px;    margin-right: 10px;    cursor: pointer;    color: var(--text);    display: flex;    align-items: center;    .gvb_tab_remove_icon {      cursor: pointer;      width: 12px;      height: 12px;      display: flex;      justify-content: center;      align-items: center;      margin-left: 5px;      border-radius: 50%;      \u0026:hover {        background-color: #f0eeee;      }    }    \u0026:first-child {      margin-left: 20px;    }    \u0026.active {      background-color: var(--active);      border-color: var(--active);      color: white;      \u0026::before {        display: inline-block;        content: \"\";        width: 12px;        height: 12px;        background-color: white;        border-radius: 50%;        margin-right: 5px;      }      .gvb_tab_remove_icon:hover {        background-color: #8fbef3;      }    }    \u0026.remove_all {      position: absolute;      right: 10px;    }  }}\u003c/style\u003e\n","slug":"Gtc7wYYBMeB77WN13UZE#tabs组件","title":"tabs组件"},"id":"G9c7wYYBMeB77WN13UZb"},{"row":{"key":"Gtc7wYYBMeB77WN13UZE","body":"Vuestore.addTab({  name: key.name,  title: key.title,})这样做的好处就是，可以将icon放入tab，更加灵活router.js更加的简洁\n","slug":"Gtc7wYYBMeB77WN13UZE#添加tab","title":"添加tab"},"id":"HNc7wYYBMeB77WN13UZb"},{"row":{"key":"Gtc7wYYBMeB77WN13UZE","body":"主要难点就是，如果删除的是当前所在的tab，那就需要向移动一位\n","slug":"Gtc7wYYBMeB77WN13UZE#删除tab","title":"删除tab"},"id":"Hdc7wYYBMeB77WN13UZb"},{"row":{"key":"INc-wYYBMeB77WN14UZN","body":"Vue\u003ctemplate\u003e  \u003cdiv\u003e    \u003ca-modal title=\"上传图片\" v-model:visible=\"data.visible\" @ok=\"uploadComplete\"\u003e      \u003ca-upload          v-model:file-list=\"data.fileList\"          action=\"/api/images\"          list-type=\"picture-card\"          name=\"images\"          multiple          :headers=\"{token: store.userInfo.token}\"      \u003e        \u003ci class=\"fa fa-cloud-upload\"\u003e\u003c/i\u003e        \u003cdiv style=\"margin-left: 5px\"\u003e上传图片\u003c/div\u003e      \u003c/a-upload\u003e    \u003c/a-modal\u003e    \u003ca-modal title=\"编辑图片\" v-model:visible=\"data.modalVisible\" @ok=\"update\"\u003e      \u003ca-form          :model=\"updateState\"          name=\"basic\"          ref=\"formRef\"          :label-col=\"{ span: 4 }\"          :wrapper-col=\"{ span: 20 }\"          autocomplete=\"off\"      \u003e        \u003ca-form-item label=\"文件名称\" name=\"name\" has-feedback                     :rules=\"[{ required: true, message: '请输入文件名' ,trigger: 'blur'}]\"\u003e          \u003ca-input v-model:value=\"updateState.name\" placeholder=\"用户名\"/\u003e        \u003c/a-form-item\u003e        \u003ca-form-item label=\"图片预览\"\u003e          \u003cimg :src=\"updateState.path\" height=\"80\" style=\"border-radius: 5px\" alt=\"\"\u003e        \u003c/a-form-item\u003e      \u003c/a-form\u003e    \u003c/a-modal\u003e    \u003cGVBTable        :columns=\"data.columns\"        base-url=\"/api/images\"        like-title=\"搜索图片名称\"        ref=\"gvbTable\"        default-delete    \u003e      \u003ctemplate #add\u003e        \u003ca-button type=\"primary\" @click=\"data.visible = true\"\u003e添加\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #edit=\"{record}\"\u003e        \u003ca-button type=\"primary\" @click=\"updateModal(record)\"\u003e编辑\u003c/a-button\u003e      \u003c/template\u003e      \u003ctemplate #cell=\"{column, record}\"\u003e        \u003ctemplate v-if=\"column.key === 'path'\"\u003e          \u003cimg :src=\"record.path\" alt=\"\" height=\"60\" style=\"border-radius: 5px\"\u003e        \u003c/template\u003e      \u003c/template\u003e    \u003c/GVBTable\u003e      \u003c/div\u003e\u003c/template\u003e\u003cscript setup\u003eimport GVBTable from \"@/components/admin/gvb_table.vue\"import {reactive, ref} from \"vue\";import {imageRenameApi} from \"@/api/image_api\";import {message} from \"ant-design-vue\";import {useStore} from \"@/stores/store\";const store = useStore()const gvbTable = ref(null)const formRef = ref(null)const data = reactive({  columns: [    {title: 'id', dataIndex: 'id', key: 'id'},    {title: '图片名称', dataIndex: 'name', key: 'name'},    {title: '路径', dataIndex: 'path', key: 'path'},    {title: '类型', dataIndex: 'image_type', key: 'image_type'},    {title: '上传时间', dataIndex: 'created_at', key: 'created_at'},    {title: '操作', dataIndex: 'action', key: 'action'},  ],  visible: false,  modalVisible: false,  fileList: []})const updateState = reactive({  id: 0,  name: \"\",  path: \"\"})// 打开模态框的操作function updateModal(record) {  data.modalVisible = true  updateState.id = record.id  updateState.name = record.name  updateState.path = record.path}// 修改图片的名称async function update() {  try {    await formRef.value.validate()    let res = await imageRenameApi(updateState)    if (res.code) {      message.error(res.msg)      return    }    message.success(res.msg)    data.modalVisible = false    gvbTable.value.ExportList()  } catch (e) {  }}function uploadComplete(){  data.visible = false  gvbTable.value.ExportList()}\u003c/script\u003e\n","slug":"INc-wYYBMeB77WN14UZN#图片管理","title":"图片管理"},"id":"Idc-wYYBMeB77WN14kYW"},{"row":{"key":"IteWwYYBMeB77WN1rUbQ","body":"1234sdjgsgkskdglgl\n","slug":"IteWwYYBMeB77WN1rUbQ#表格组件拆分","title":"表格组件拆分"},"id":"J9cRwoYBMeB77WN1EkbJ"},{"row":{"key":"2iBpzIYBenTVo4BRkquV","body":"","slug":"2iBpzIYBenTVo4BRkquV#个人中心","title":"个人中心"},"id":"2yBpzIYBenTVo4BRk6uH"},{"row":{"key":"2iBpzIYBenTVo4BRkquV","body":"Vue\u003ctemplate\u003e  \u003cdiv class=\"gvb_user_info_bg\"\u003e    \u003cdiv class=\"gvb_user_info_view\"\u003e      \u003cdiv class=\"user_head\"\u003e        个人信息      \u003c/div\u003e      \u003cdiv class=\"body user_info_view\"\u003e        \u003ca-form :label-col=\"{ span: 2 }\"                :wrapper-col=\"{ span: 22 }\"\u003e          \u003ca-form-item label=\"昵称\"\u003e            \u003ca-input placeholder=\"昵称\" class=\"user_ipt\"\u003e\u003c/a-input\u003e          \u003c/a-form-item\u003e          \u003ca-form-item label=\"我的签名\"\u003e            \u003ca-textarea placeholder=\"我的签名\" class=\"user_ipt\" :auto-size=\"{ minRows: 2, maxRows: 5 }\"\u003e\u003c/a-textarea\u003e          \u003c/a-form-item\u003e          \u003ca-form-item label=\"我的博客\"\u003e            \u003ca-input placeholder=\"我的博客\" class=\"user_ipt\"\u003e\u003c/a-input\u003e          \u003c/a-form-item\u003e          \u003ca-form-item label=\"邮箱\"\u003e            \u003cspan\u003e556454545@qq.com\u003c/span\u003e          \u003c/a-form-item\u003e          \u003ca-form-item label=\"现地址\"\u003e            \u003cspan\u003e四川成都\u003c/span\u003e          \u003c/a-form-item\u003e          \u003ca-form-item label=\"当前角色\"\u003e            \u003cspan\u003e管理员\u003c/span\u003e          \u003c/a-form-item\u003e          \u003ca-form-item label=\"注册来源\"\u003e            \u003cspan\u003eQQ\u003c/span\u003e          \u003c/a-form-item\u003e          \u003ca-form-item label=\"我的积分\"\u003e            \u003cspan\u003e658\u003c/span\u003e          \u003c/a-form-item\u003e        \u003c/a-form\u003e      \u003c/div\u003e      \u003cdiv class=\"user_head\"\u003e        每日奖励      \u003c/div\u003e      \u003cdiv class=\"body daily_reward\"\u003e        \u003cdiv\u003e          \u003cimg src=\"../../../assets/icon/ok.svg\" alt=\"\"\u003e          每日登陆 +2        \u003c/div\u003e        \u003cdiv\u003e          \u003cimg src=\"../../../assets/icon/ok.svg\" alt=\"\"\u003e          发文 +3        \u003c/div\u003e        \u003cdiv\u003e          \u003cimg src=\"../../../assets/icon/ok.svg\" alt=\"\"\u003e          发评论 +1        \u003c/div\u003e        \u003cdiv\u003e          \u003cimg src=\"../../../assets/icon/error.svg\" alt=\"\"\u003e          群聊 +0.5        \u003c/div\u003e      \u003c/div\u003e      \u003cdiv class=\"user_head\"\u003e        成就勋章      \u003c/div\u003e      \u003cul class=\"body medal\"\u003e        \u003cli\u003e          \u003cimg src=\"https://i0.hdslb.com/bfs/face/21fdd1bcd9ad1b52d5725026d71c185a68681644.png\" alt=\"\"\u003e          \u003cdiv class=\"name\"\u003e初来乍到\u003c/div\u003e        \u003c/li\u003e        \u003cli\u003e          \u003cimg src=\"https://i0.hdslb.com/bfs/face/51ca16136e570938450bca360f28761ceb609f33.png\" alt=\"\"\u003e          \u003cdiv class=\"name\"\u003e有爱萌新\u003c/div\u003e        \u003c/li\u003e        \u003cli\u003e          \u003cimg src=\"https://i0.hdslb.com/bfs/face/89491e6cee3b1c88292b618a58703ab614665f66.png\" alt=\"\"\u003e          \u003cdiv class=\"name\"\u003e老司机\u003c/div\u003e        \u003c/li\u003e      \u003c/ul\u003e      \u003cdiv class=\"user_head\"\u003e        操作      \u003c/div\u003e      \u003cdiv class=\"body actions\"\u003e        \u003ca-button type=\"primary\"\u003e绑定邮箱\u003c/a-button\u003e        \u003ca-button type=\"primary\"\u003e修改密码\u003c/a-button\u003e        \u003ca-button type=\"danger\"\u003e注销退出\u003c/a-button\u003e      \u003c/div\u003e    \u003c/div\u003e  \u003c/div\u003e\u003c/template\u003eVue\u003cstyle lang=\"scss\"\u003e.gvb_user_info_bg {  background-color: var(--card_bg);  display: flex;  justify-content: center;  padding: 20px;  .gvb_user_info_view {    width: 1000px;  }  .user_head {    font-size: 18px;    display: flex;    align-items: center;    font-weight: 600;    margin-bottom: 10px;    \u0026::before {      width: 3px;      height: 1.5rem;      display: inline-block;      content: \"\";      margin-right: 5px;      background-color: var(--active);    }  }  .body {    margin-bottom: 20px;  }  .user_info_view {    .ant-form-item {      margin: 0 0 5px;    }    .user_ipt {      width: 400px;    }  }  .actions {    .ant-btn {      margin-right: 10px;    }  }  .medal {    display: flex;    flex-wrap: wrap;    li {      margin-right: 20px;      .name {        text-align: center;      }      \u0026:last-child {        margin-right: 0;      }      img {        width: 60px;        height: 60px;      }    }  }  .daily_reward {    display: flex;    \u003e div {      display: flex;      flex-direction: column;      align-items: center;      margin-right: 50px;    }    img {      width: 60px;      height: 60px;    }  }}\u003c/style\u003e\n","slug":"2iBpzIYBenTVo4BRkquV#我的信息","title":"我的信息"},"id":"3CBpzIYBenTVo4BRk6uH"},{"row":{"key":"R05z9IYBUbEPfcjaDSjI","body":"你好啊\n","slug":"R05z9IYBUbEPfcjaDSjI#普通用户的文章","title":"普通用户的文章"},"id":"SE5z9IYBUbEPfcjaDijT"},{"row":{"key":"SU52DocBUbEPfcjaAig6","body":"","slug":"SU52DocBUbEPfcjaAig6#首页的一些组件","title":"首页的一些组件"},"id":"Sk52DocBUbEPfcjaAyg9"},{"row":{"key":"SU52DocBUbEPfcjaAig6","body":"Vue\u003ctemplate\u003e  \u003cdiv class=\"gvb_card_view\"\u003e    \u003cdiv class=\"title\"\u003e      \u003ch2\u003e{{ props.title }}\u003c/h2\u003e      \u003ca v-if=\"props.link_name!==''\" :href=\"props.link\"\u003e{{ props.link_name }}\u003c/a\u003e    \u003c/div\u003e    \u003cdiv :class=\"{body: true, top20: top20}\"\u003e      \u003cslot\u003e\u003c/slot\u003e    \u003c/div\u003e  \u003c/div\u003e\u003c/template\u003e\u003cscript setup\u003econst props = defineProps({  title: {    type: String,  },  link: {    type: String,  },  link_name: {    type: String,  },  top20: {    type: Boolean  }})\u003c/script\u003e\u003cstyle lang=\"scss\"\u003e.gvb_card_view {  .title {    padding: 20px 20px 10px 20px;    display: flex;    justify-content: space-between;    align-items: center;    border-radius: 5px 5px 0 0;    background-color: var(--card_bg);    h2 {      font-size: 20px;      font-weight: 600;      color: var(--h2);    }    a {      color: var(--text);    }  }  .body {    border-radius: 0 0 5px 5px;    background-color: var(--card_bg);    margin-top: 1px;    padding: 10px 20px 20px 20px;  }  .body.top20 {    padding: 20px;  }}\u003c/style\u003e\n","slug":"SU52DocBUbEPfcjaAig6#gvb_card","title":"gvb_card"},"id":"S052DocBUbEPfcjaAyg9"},{"row":{"key":"SU52DocBUbEPfcjaAig6","body":"Vue\u003ctemplate\u003e  \u003cGVBCCard title=\"今日热搜\" class=\"news_card\" link_name=\"查看更多\" link=\"/news\"\u003e    \u003cspan class=\"index\"\u003e1\u003c/span\u003e    \u003ca href=\"https://s.weibo.com/weibo?q=枫枫知道\"       target=\"_blank\"\u003e枫枫知道\u003c/a\u003e    \u003cspan class=\"num\"\u003e68.7万\u003c/span\u003e  \u003c/GVBCCard\u003e\u003c/template\u003e\u003cscript setup\u003eimport GVBCCard from \"@/components/gvb_card.vue\"\u003c/script\u003e\u003cstyle lang=\"scss\"\u003e.news_card {  .body {    display: flex;    justify-content: space-between;    align-items: center;    .index {      width: 5%;    }    a {      width: 85%;    }    .num {      width: 10%;      text-align: right;    }  }}\u003c/style\u003e还没有讲到itab的新闻数据获取\n","slug":"SU52DocBUbEPfcjaAig6#今日热搜","title":"今日热搜"},"id":"TE52DocBUbEPfcjaAyg9"},{"row":{"key":"SU52DocBUbEPfcjaAig6","body":"Vue\u003ctemplate\u003e  \u003cGVBCCard title=\"文章日历\" class=\"article_calendar_card\"\u003e    \u003cGvbArticleCalendar :is-title=\"false\"\u003e\u003c/GvbArticleCalendar\u003e  \u003c/GVBCCard\u003e\u003c/template\u003e\u003cscript setup\u003eimport GVBCCard from \"@/components/gvb_card.vue\"import GvbArticleCalendar from \"@/components/charts/article_calendar.vue\"\u003c/script\u003e\n","slug":"SU52DocBUbEPfcjaAig6#文章日历","title":"文章日历"},"id":"TU52DocBUbEPfcjaAyg9"},{"row":{"key":"SU52DocBUbEPfcjaAig6","body":"Vue\u003ctemplate\u003e  \u003cGVBCCard title=\"独家广告\" class=\"advert_card\"\u003e    \u003ca-carousel arrows autoplay :autoplaySpeed=\"3000\" class=\"advert_carousel\"\u003e      \u003cdiv class=\"advert_image\" v-for=\"item in data.advert_list\" :key=\"item.id\"\u003e        \u003ca :href=\"item.href\" target=\"_blank\"\u003e\u003cimg :src=\"item.images\" alt=\"\"\u003e\u003c/a\u003e      \u003c/div\u003e      \u003ctemplate #prevArrow\u003e        \u003cdiv class=\"default_slick-arrow\" style=\"left: 10px\"\u003e          \u003ci class=\"fa fa-chevron-circle-left carousel_icon\"\u003e\u003c/i\u003e        \u003c/div\u003e      \u003c/template\u003e      \u003ctemplate #nextArrow\u003e        \u003cdiv class=\"default_slick-arrow\" style=\"right: 10px;\"\u003e          \u003ci class=\"fa fa-chevron-circle-right carousel_icon\"\u003e\u003c/i\u003e        \u003c/div\u003e      \u003c/template\u003e    \u003c/a-carousel\u003e  \u003c/GVBCCard\u003e\u003c/template\u003e\u003cscript setup\u003eimport GVBCCard from \"@/components/gvb_card.vue\"import {reactive} from \"vue\";const data = reactive({  advert_list: [    {      id: 1,      href: \"https://www.bilibili.com/video/BV1xg411t7RZ/\",      images: \"http://python.fengfengzhidao.com/pic/20221112205133.png\",    },    {      id: 2,      href: \"https://www.bilibili.com/video/BV1xg411t7RZ/\",      images: \"http://python.fengfengzhidao.com/pic/20220709141219.png\",    }  ]})\u003c/script\u003e\u003cstyle lang=\"scss\"\u003e.advert_carousel {  height: 200px;  .default_slick-arrow {    z-index: 10;  }  .default_slick-arrow:before {    display: none;  }  .carousel_icon {    color: white;    font-size: 20px;  }  .advert_image {    height: 200px;    img {      height: 100%;      object-fit: cover;      display: block;      width: 100%;    }  }}\u003c/style\u003e\n","slug":"SU52DocBUbEPfcjaAig6#独家广告","title":"独家广告"},"id":"Tk52DocBUbEPfcjaAyg9"},{"row":{"key":"SU52DocBUbEPfcjaAig6","body":"Vue\u003ctemplate\u003e  \u003cGVBCCard title=\"标签云\" top20 class=\"tags_cloud_card\"\u003e    \u003cul class=\"tags_cloud_ul\"\u003e      \u003cli v-for=\"(item, index) in data.tag_list\" :key=\"index\"\u003e        \u003cspan\u003e{{ item.tag }}\u003c/span\u003e        \u003ci\u003e{{ item.count }}\u003c/i\u003e      \u003c/li\u003e    \u003c/ul\u003e  \u003c/GVBCCard\u003e\u003c/template\u003e\u003cscript setup\u003eimport GVBCCard from \"@/components/gvb_card.vue\"import {reactive} from \"vue\";const data = reactive({  tag_list: [    {\"tag\": \"后台\", \"count\": 8},    {\"tag\": \"前端\", \"count\": 2},    {\"tag\": \"后台\", \"count\": 15},    {\"tag\": \"后台\", \"count\": 28},    {\"tag\": \"python\", \"count\": 63},    {\"tag\": \"后台\", \"count\": 8},    {\"tag\": \"后台\", \"count\": 8},    {\"tag\": \"后台\", \"count\": 8},    {\"tag\": \"后台\", \"count\": 8},    {\"tag\": \"后台\", \"count\": 8},    {\"tag\": \"后台\", \"count\": 8},    {\"tag\": \"后台\", \"count\": 8},  ]})\u003c/script\u003e\u003cstyle lang=\"scss\"\u003e@keyframes move_box {  0% {    left: 0;    top: 0;  }  25% {    left: calc(100% - 20px);    top: 0;  }  50% {    top: calc(100% - 20px);    left: calc(100% - 20px)  }  75% {    left: 0;    top: calc(100% - 20px);  }  to {    left: 0;    top: 0  }}.tags_cloud_card .body {  position: relative;  \u0026::before {    display: block;    position: absolute;    content: \"\";    width: 20px;    height: 20px;    background-color: var(--active);    -webkit-animation-name: move_box;    animation-name: move_box;    -webkit-animation-duration: 5s;    animation-duration: 5s;    -webkit-animation-iteration-count: infinite;    animation-iteration-count: infinite;  }}.tags_cloud_ul {  display: flex;  flex-wrap: wrap;  li {    width: 33.33%;    height: 40px;    display: flex;    align-items: center;    justify-content: center;    color: var(--h2);  }  li:nth-child(6n+1), li:nth-child(6n+2), li:nth-child(6n+3) {    background-color: var(--bg)  }  li:nth-child(3n+1), li:nth-child(3n+2) {    border-right: 1px solid var(--bg_darken)  }}\u003c/style\u003e\n","slug":"SU52DocBUbEPfcjaAig6#标签云","title":"标签云"},"id":"T052DocBUbEPfcjaAyg9"},{"row":{"key":"SU52DocBUbEPfcjaAig6","body":"1. 时间转中文年月日2. 动态时间3. 文章访问量Vue\u003ctemplate\u003e  \u003cGVBCCard title=\"站点信息\" class=\"site_card\"\u003e    \u003cdiv\u003e\u003cb\u003e建站时间\u003c/b\u003e\u003cspan\u003e2022年12月06日\u003c/span\u003e\u003c/div\u003e    \u003cdiv\u003e\u003cb\u003e网站程序\u003c/b\u003e\u003cspan\u003eVue3+Gin\u003c/span\u003e\u003c/div\u003e    \u003cdiv\u003e\u003cb\u003e运行时间\u003c/b\u003e\u003cspan\u003e106天15时1分24秒\u003c/span\u003e\u003c/div\u003e    \u003cdiv\u003e\u003cb\u003e总访问量\u003c/b\u003e\u003cspan\u003e856235\u003c/span\u003e\u003c/div\u003e    \u003cdiv\u003e\u003cb\u003e博客文章\u003c/b\u003e\u003cspan\u003e17\u003c/span\u003e\u003c/div\u003e    \u003cdiv\u003e      \u003cb\u003e联系我\u003c/b\u003e      \u003cdiv class=\"my_image\"\u003e        \u003cdiv class=\"qq_image\"\u003e          \u003cimg src=\"http://www.fengfengzhidao.com/static/my/img/footer/qq.png\" alt=\"\"\u003e          \u003cspan\u003e我的QQ\u003c/span\u003e        \u003c/div\u003e        \u003cdiv class=\"wechat_image\"\u003e          \u003cimg src=\"http://www.fengfengzhidao.com/static/my/img/footer/wechat.png\" alt=\"\"\u003e          \u003cspan\u003e我的微信\u003c/span\u003e        \u003c/div\u003e      \u003c/div\u003e    \u003c/div\u003e  \u003c/GVBCCard\u003e\u003c/template\u003e\u003cscript setup\u003eimport GVBCCard from \"@/components/gvb_card.vue\"import {reactive} from \"vue\";const data = reactive({  date: \"\",  look_count: 2003412,  article_count: 45,  qq_url: \"\",  wechat_url: \"\"})\u003c/script\u003e\u003cstyle lang=\"scss\"\u003e.site_card {  .body {    \u003e div {      font-size: 16px;      margin-bottom: 8px;      b {        margin-right: 5px;        \u0026::after {          content: \":\";        }      }    }    .my_image {      display: flex;      margin-top: 10px;      justify-content: space-around;      \u003e div {        width: 50%;        display: flex;        flex-direction: column;        align-items: center;        img {          width: 100px;          height: 100px;        }      }    }  }}\u003c/style\u003e\n","slug":"SU52DocBUbEPfcjaAig6#站点信息","title":"站点信息"},"id":"UE52DocBUbEPfcjaAyg9"},{"row":{"key":"SU52DocBUbEPfcjaAig6","body":"Vue\u003ctemplate\u003e  \u003cGVBCCard title=\"意见反馈\" class=\"fade_back_card\"\u003e    \u003ca-input placeholder=\"请输入邮箱\" v-model:value=\"data.email\"\u003e\u003c/a-input\u003e    \u003ca-textarea placeholder=\"请输入反馈内容\" v-model:value=\"data.content\" :auto-size=\"{ minRows: 3, maxRows: 5 }\"                style=\"margin-top: 10px\"\u003e\u003c/a-textarea\u003e    \u003ca-button type=\"primary\" style=\"width: 100%; margin-top: 10px\" @click=\"okHandler\"\u003e提交\u003c/a-button\u003e  \u003c/GVBCCard\u003e\u003c/template\u003e\u003cscript setup\u003eimport GVBCCard from \"@/components/gvb_card.vue\"import {reactive} from \"vue\";import {message} from \"ant-design-vue\";const data = reactive({  email: \"\",  content: \"\"})function okHandler() {  data.content = \"\"  message.success(\"反馈成功\")}\u003c/script\u003e\u003cstyle scoped\u003e\u003c/style\u003e\n","slug":"SU52DocBUbEPfcjaAig6#意见反馈","title":"意见反馈"},"id":"UU52DocBUbEPfcjaAyg9"},{"row":{"key":"SU52DocBUbEPfcjaAig6","body":"1. 24节气的判断2. 24节气图片的显示Vue\u003ctemplate\u003e  \u003cdiv class=\"my_card\"\u003e    \u003cdiv class=\"title\"\u003e      \u003ch3\u003e个人名片\u003c/h3\u003e      \u003ch4\u003eMY\u003c/h4\u003e      \u003ch4\u003ePROFILE\u003c/h4\u003e      \u003cimg src=\"http://www.fengfengzhidao.com/static/my/img/footer/wechat.png\" alt=\"我的微信\"\u003e    \u003c/div\u003e    \u003cdiv class=\"jieqi\"\u003e      \u003cimg :title=\"data.title\" :src=\"data.src\" :style=\"{transform: data.transform}\" alt=\"24节气\"\u003e    \u003c/div\u003e    \u003cdiv class=\"footer\"\u003e      \u003cp\u003eNAME \u003cspan\u003e枫枫知道\u003c/span\u003e\u003c/p\u003e      \u003cp\u003eJOB \u003cspan\u003e全栈开发\u003c/span\u003e\u003c/p\u003e      \u003cp\u003eADDR \u003cspan\u003e湖南长沙\u003c/span\u003e\u003c/p\u003e      \u003cp\u003eWEB \u003ca target=\"_blank\" href=\"http://www.fengfengzhidao.com\"\u003ewww.fengfengzhidao.com\u003c/a\u003e\u003c/p\u003e    \u003c/div\u003e  \u003c/div\u003e\u003c/template\u003e\u003cscript setup\u003eimport {reactive} from \"vue\";const data = reactive({  title: \"立春\",  transform: \"translate(0px, -223px)\",  src: \"/static/24_hourse/0.png\"})function getjq(yyyy, mm, dd) {  mm = mm - 1;  let sTermInfo = new Array(0, 21208, 42467, 63836, 85337, 107014, 128867, 150921, 173149, 195551, 218072, 240693, 263343, 285989, 308563, 331033, 353350, 375494, 397447, 419210, 440795, 462224, 483532, 504758);  let solarTerm = new Array(\"小寒\", \"大寒\", \"立春\", \"雨水\", \"惊蛰\", \"春分\", \"清明\", \"谷雨\", \"立夏\", \"小满\", \"芒种\", \"夏至\", \"小暑\", \"大暑\", \"立秋\", \"处暑\", \"白露\", \"秋分\", \"寒露\", \"霜降\", \"立冬\", \"小雪\", \"大雪\", \"冬至\");  let solarTerms = \"\";  while (solarTerms === \"\") {    let tmp1 = new Date((31556925974.7 * (yyyy - 1900) + sTermInfo[mm * 2 + 1] * 60000) + Date.UTC(1900, 0, 6, 2, 5));    let tmp2 = tmp1.getUTCDate();    if (tmp2 === dd) solarTerms = solarTerm[mm * 2 + 1];    tmp1 = new Date((31556925974.7 * (yyyy - 1900) + sTermInfo[mm * 2] * 60000) + Date.UTC(1900, 0, 6, 2, 5));    tmp2 = tmp1.getUTCDate();    if (tmp2 === dd) solarTerms = solarTerm[mm * 2];    if (dd \u003e 1) {      dd = dd - 1;    } else {      mm = mm - 1;      if (mm \u003c 0) {        yyyy = yyyy - 1;        mm = 11;      }      dd = 31;    }  }  return solarTerms;}function set_jieqi_main() {  let today = new Date();  let year = today.getFullYear()  let month = today.getMonth() + 1; //获取当前月份(0-11,0代表1月)  let day = today.getDate(); //获取当前日(1-31)  let hourse_img = {    '立春': ['0.png', '立春', 'translate(0px, -223px)'],    '雨水': ['1.png', '雨水', 'translate(0px, -207px)'],    '惊蛰': ['2.png', '惊蛰', 'translate(0px, -223px)'],    '春分': ['3.png', '春分', 'translate(0px, -190px)'],    '清明': ['4.png', '清明', 'translate(0px, -279px)'],    '谷雨': ['5.png', '谷雨', 'translate(0px, -239px)'],    '立夏': ['6.png', '立夏', 'translate(0px, -210px)'],    '小满': ['7.png', '小满', 'translate(0px, -226px)'],    '芒种': ['8.png', '芒种', 'translate(0px, -199px)'],    '夏至': ['9.png', '夏至', 'translate(0px, -120px)'],    '小暑': ['10.png', '小暑', 'translate(0px, -232px)'],    '大暑': ['11.png', '大暑', 'translate(0px, -117px)'],    '立秋': ['12.png', '立秋', 'translate(0px, -151px)'],    '处暑': ['13.png', '处暑', 'translate(0px, -161px)'],    '白露': ['14.png', '白露', 'translate(0px, -57px)'],    '秋分': ['15.png', '秋分', 'translate(0px, -129px)'],    '寒露': ['16.png', '寒露', 'translate(0px, -185px)'],    '霜降': ['17.png', '霜降', 'translate(0px, -181px)'],    '立冬': ['18.png', '立冬', 'translate(0px, -181px)'],    '小雪': ['19.png', '小雪', 'translate(0px, -181px)'],    '大雪': ['20.png', '大雪', 'translate(0px, -82px)'],    '冬至': ['21.png', '冬至', 'translate(0px, -242px)'],    '小寒': ['22.png', '小寒', 'translate(0px, -48px)'],    '大寒': ['23.png', '大寒', 'translate(0px, -114px)'],  }  let now = getjq(year, month, day)  let load = hourse_img[now]  if (load) {    data.title = load[1]    data.src = `/static/24_hourse/${load[0]}`    data.transform = load[2]    // $('#jieqiset').attr('src', `/static/24_hourse/${load[0]}`).css('transform', `${load[2]}`).attr('title', load[1])  }}set_jieqi_main()\u003c/script\u003e\u003cstyle lang=\"scss\"\u003e.my_card {  padding: 20px;  width: 100%;  background-color: var(--card_bg);  border-radius: 5px;  margin-bottom: 20px;  .title {    position: relative;    display: flex;    justify-content: space-between;    flex-direction: column;    h3 {      color: #c93535;      font-size: 20px;      font-weight: 700;      letter-spacing: .3em;      margin-bottom: 10px;    }    h4 {      color: var(--md_tag, #e0bb53);      text-transform: uppercase;      font-style: italic;      font-weight: 700;      font-size: 22px;      letter-spacing: .2em;    }    img {      position: absolute;      right: 0;      top: 0;      height: 90px;      width: 90px;    }  }  .jieqi {    width: 100%;    height: 215px;    border-radius: 5px;    margin: 10px 0;    overflow: hidden;    transition: all 0.3s;    cursor: pointer;    img {      width: 100%;    }    \u0026:hover {      transform: scale(1.03);    }  }  .footer {    p {      margin-bottom: 5px;      color: var(--font_del);      span {        color: var(--text);      }      a {        color: var(--active);      }    }  }}\u003c/style\u003e\n","slug":"SU52DocBUbEPfcjaAig6#个人名片","title":"个人名片"},"id":"Uk52DocBUbEPfcjaAyg9"},{"row":{"key":"SU52DocBUbEPfcjaAig6","body":"Vue\u003ctemplate\u003e  \u003cfooter class=\"gvb_footer\"\u003e    \u003cdiv class=\"left\"\u003e      \u003cp class=\"thank\"\u003eThank For\u003c/p\u003e      \u003cp class=\"info\"\u003e        \u003cimg src=\"/static/footer/tencent.png\" alt=\"\"\u003e        \u003cspan\u003e腾讯云服务器\u003c/span\u003e        \u003cimg src=\"/static/footer/tencent.png\" alt=\"\"\u003e        \u003cspan\u003e腾讯云SSL证书\u003c/span\u003e        \u003cimg src=\"/static/footer/qiniu.png\" alt=\"\"\u003e        \u003cspan\u003e七牛云存储\u003c/span\u003e      \u003c/p\u003e      \u003cp class=\"version\"\u003e        \u003cspan\u003eversion\u003c/span\u003e        \u003cspan\u003e7.0.1\u003c/span\u003e      \u003c/p\u003e      \u003cp\u003e建站日期：2022-03-13\u003c/p\u003e      \u003cp class=\"beian\"\u003e        \u003cimg src=\"/static/footer/badges.png\" alt=\"\"\u003e        \u003ca href=\"https://beian.miit.gov.cn/\"\u003e湘ICP备2021010654号-3\u003c/a\u003e      \u003c/p\u003e    \u003c/div\u003e    \u003cdiv class=\"right\"\u003e      \u003cdiv class=\"my_info\"\u003e        \u003cdiv class=\"qq\" title=\"我的QQ\"\u003e          \u003ca href=\"tencent://message/?uin=2974771769\u0026Site=\u0026Menu=yes\" title=\"向我咨询\"\u003e            \u003cimg class=\"show_img\" src=\"/static/footer/qq.png\" alt=\"\"\u003e            \u003cimg class=\"img\" src=\"/static/footer/qq_icon.svg\" alt=\"\"\u003e          \u003c/a\u003e        \u003c/div\u003e        \u003cdiv class=\"wechat\" title=\"我的微信\"\u003e          \u003cimg class=\"show_img\" src=\"/static/footer/wechat.png\" alt=\"\"\u003e          \u003cimg class=\"img\" src=\"/static/footer/wexin_icon.svg\" alt=\"\"\u003e        \u003c/div\u003e        \u003cdiv title=\"我的哔哩哔哩\"\u003e          \u003ca href=\"https://space.bilibili.com/359151217\" target=\"_blank\"\u003e            \u003cimg class=\"img\" src=\"/static/footer/bilibili_icon.svg\" alt=\"\"\u003e          \u003c/a\u003e        \u003c/div\u003e        \u003cdiv title=\"gitee\"\u003e          \u003ca href=\"https://gitee.com/fengfengzhidao\" target=\"_blank\"\u003e            \u003cimg class=\"img\" src=\"/static/footer/gitee_icon.svg\" alt=\"\"\u003e          \u003c/a\u003e        \u003c/div\u003e        \u003cdiv title=\"GitHub\"\u003e          \u003ca href=\"https://github.com/fengfengzhidao/\" target=\"_blank\"\u003e            \u003cimg class=\"img\" src=\"/static/footer/github_icon.svg\" alt=\"\"\u003e          \u003c/a\u003e        \u003c/div\u003e      \u003c/div\u003e      \u003cp\u003e        \u003cspan\u003e联系邮箱：2974771769@qq.com\u003c/span\u003e      \u003c/p\u003e    \u003c/div\u003e  \u003c/footer\u003e\u003c/template\u003e\u003cscript setup\u003e\u003c/script\u003e\u003cstyle lang=\"scss\"\u003e// 底部信息栏.gvb_footer {  display: flex;  padding: 25px 0;  width: 100%;  background-color: var(--card_bg);  .left, .right {    display: flex;    flex-direction: column;    align-items: center;    justify-content: center;    width: 50%;  }  p {    margin-bottom: 10px;    font-size: 14px;    \u0026:last-child {      margin-bottom: 0;    }    a{      color: var(--text);    }  }  .thank {    color: #26c6da;    font-size: 20px;  }  .info {    display: flex;    span {      margin-right: 10px;      \u0026:last-child {        margin-right: 0;      }    }    img {      width: 20px;      margin-right: 5px;    }  }  .version {    color: white;    display: flex;    span {      padding: 5px 10px;    }    span:first-child {      background-color: #ff9800;      border-bottom-left-radius: 5px;      border-top-left-radius: 5px;    }    span:last-child {      background-color: #26c6da;      border-bottom-right-radius: 5px;      border-top-right-radius: 5px;    }  }  .beian {    display: flex;    img {      width: 20px;      margin-right: 5px;    }  }  .my_info {    display: flex;    margin-bottom: 10px;    \u003e div {      margin-right: 20px;      cursor: pointer;      \u0026:last-child {        margin-right: 0;      }    }    .img {      width: 30px;    }    .qq, .wechat {      position: relative;      .show_img {        opacity: 0;        position: absolute;        border: 1px #f0eeee solid;        width: 63px;        left: -14px;        top: -10px;        transition: all 0.6s;      }      \u0026:hover {        .show_img {          opacity: 1;          top: -69px;        }      }    }  }}\u003c/style\u003e\n","slug":"SU52DocBUbEPfcjaAig6#gvb_footer","title":"gvb_footer"},"id":"U052DocBUbEPfcjaAyg9"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"","slug":"8UgNHYcBHDYvTeDligHz#vue全基础","title":"vue全基础"},"id":"8kgNHYcBHDYvTeDljAEh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。Vue.js是一套构建用户界面的渐进式框架，采用自底向上增量开发的设计。Vue的核心库关注于视图（html），不仅易上手，还便于与第三方库或项目整合。渐进式：一步一步，不是将所有的东西都学完才能使用。自底向上设计：一种设计程序的过程和方法，就是先编写出基础程序段，然后在逐步扩大规范、补充和升级某些 功能，实际上是一种自底向上构造程序的过程。Vue.js的核心是允许采用简洁式模板语法来声明的将数据渲染进DOM的系统在使用数据之前需要先进性声明才可以使用\n","slug":"8UgNHYcBHDYvTeDligHz#vue基本概述","title":"vue基本概述"},"id":"80gNHYcBHDYvTeDljAEh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"简单，前端三大框架（Vue，React，angler）中是对小白最友好的框架另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。\n","slug":"8UgNHYcBHDYvTeDligHz#为什么要学习Vue？","title":"为什么要学习Vue？"},"id":"9EgNHYcBHDYvTeDljAEh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"数据驱动试图1. jquery到vue转变是一个思想的转变，是将jquery直接操作dom的思想转变到操作数据上去。2. jQuery是使用选择器选取DOM对象，对其进行赋值、取值、事件绑定等操作，其实和原生的HTML的区别只在于可以更方便的选取和操作DOM对象3. Vue则是通过Vue对象将数据和View完全分离开来了。对数据进行操作不再需要引用相应的DOM对象，可以说数据和View是分离的，他们通过Vue对象这个vm实现相互的绑定。这就是传说中的MVVM\n","slug":"8UgNHYcBHDYvTeDligHz#Vue和Jquery有什么区别？","title":"Vue和Jquery有什么区别？"},"id":"9UgNHYcBHDYvTeDljAEh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"先把前端三件套熟悉（HTML，CSS，JavaScript）\n","slug":"8UgNHYcBHDYvTeDligHz#什么时候学习Vue？","title":"什么时候学习Vue？"},"id":"9kgNHYcBHDYvTeDljAEh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"官方文档\n","slug":"8UgNHYcBHDYvTeDligHz#Vue基本语法","title":"Vue基本语法"},"id":"90gNHYcBHDYvTeDljAEh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"使用{{ }}进行渲染data:{}里面的变量也可以是函数，不过在data里面的方法，在插值表达式中需要补充大括号例如HTML\u003cdiv id=\"app\"\u003e    \u003cdiv\u003e{{ msg }}\u003c/div\u003e    \u003cdiv\u003e{{ getInfo() }}\u003c/div\u003e\u003c/div\u003e\u003cscript src=\"../vue.js\"\u003e\u003c/script\u003e\u003cscript\u003e    new Vue({        el: '#app',        data: {            msg: '枫枫知道',            getInfo() {                // 函数的返回值就是插值表达式中的结果                return \"床前明月光\"            }        }    })\u003c/script\u003e在插值表达式中，支持运算符，以及一些方法vue指令：\n","slug":"8UgNHYcBHDYvTeDligHz#插值表达式","title":"插值表达式"},"id":"-EgNHYcBHDYvTeDljAEh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"渲染文本，和插值表达式类似HTML\u003cdiv v-text=\"msg\"\u003e\u003c/div\u003e\u003cdiv\u003e{{ msg }}\u003c/div\u003e也是支持运算符的HTML\u003cdiv v-text=\"2 \u003e 4 ? '成立': '不成立'\"\u003e\u003c/div\u003e\n","slug":"8UgNHYcBHDYvTeDligHz#v-text","title":"v-text"},"id":"-UgNHYcBHDYvTeDljAEh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"渲染标签，如果字符串是含标签的特殊字符，那么vue会将它渲染成标签如果是v-text或者是使用插值表达式，则会原样输出注意：v-html一般是用来渲染信任的文本，例如文章的详情内容等，最好不要用在用户提交的地方容易造成XSS攻击\n","slug":"8UgNHYcBHDYvTeDligHz#v-html","title":"v-html"},"id":"-kgNHYcBHDYvTeDljAEh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"可以给标签动态添加内容，也可以给动态的修改标签属性不过在属性上的操作稍微和操作内容不太一样，我们使用v-bind指令例如我想动态修改img标签的src属性，希望它去读取data里面的值但是我们不能在属性中使用插值表达式这样写src直接将我的内容原样输出了，所以我们需要使用v-bind，全称为动态属性那么我可以这么做HTML\u003cimg v-bind:src=\"src\" alt=\"\"\u003e当然，v-bind:  可以简写为  :HTML\u003cimg :src=\"src\" alt=\"\"\u003ev-bind不仅可以用于HTML存在的属性，还可以应用在自定义属性上例如HTML\u003cp :id=\"'p' + '_01'\" :data=\"msg\" :还可以是中文=\"msg\"\u003e\u003c/p\u003e实际结果：\u003cp id=\"p_01\" data=\"haha\" 还可以是中文=\"haha\"\u003e\u003c/p\u003e在vue所有的指令中，都是支持表达式的例如：JavaScript\u003cdiv class=\"name\"\u003e    {{ a.length === 0 ? '没有数据' : a }}    -{{ a.split('.')[1] }}\u003c/div\u003e什么是表达式？JavaScript// 这是语句var a = 1;// 这是表达式a.length === 0 ? '没有数据' : a\n","slug":"8UgNHYcBHDYvTeDligHz#v-bind","title":"v-bind"},"id":"-0gNHYcBHDYvTeDljAEh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"","slug":"8UgNHYcBHDYvTeDligHz#条件渲染","title":"条件渲染"},"id":"_EgNHYcBHDYvTeDljAEh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"v-if中的布尔值为true，则渲染这个div如果if不成立，则渲染else中的代码块HTML\u003cdiv id=\"app\"\u003e    \u003cdiv\u003e{{ num }}\u003c/div\u003e    \u003cdiv id=\"if\"\u003e        \u003cdiv v-if=\"num \u003e 0.9\"\u003e大于0.9的概率\u003c/div\u003e        \u003cdiv v-else\u003ev-if不满足显示我\u003c/div\u003e    \u003c/div\u003e\u003c/div\u003e\u003cscript src=\"../vue.js\"\u003e\u003c/script\u003e\u003cscript\u003e    new Vue({        el: '#app',        data: {            num: Math.random(), // 一个0-1之间的随机数字        }    })\u003c/script\u003e\n","slug":"8UgNHYcBHDYvTeDligHz#v-if和v-else的普通使用","title":"v-if和v-else的普通使用"},"id":"_UgNHYcBHDYvTeDljAEh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"HTML\u003cdiv id=\"v-else-if\"\u003e    \u003cdiv v-if=\"num \u003e 0.9\"\u003e大于0.9的概率\u003c/div\u003e    \u003cdiv v-else-if=\"num \u003e 0.6\"\u003e大于0.6的概率\u003c/div\u003e    \u003cdiv v-else-if=\"num \u003e 0.4\"\u003e大于0.4的概率\u003c/div\u003e    \u003cdiv v-else-if=\"num \u003e 0.2\"\u003e大于0.2的概率\u003c/div\u003e    \u003cdiv v-else\u003e所有条件都不成立\u003c/div\u003e\u003c/div\u003ev-if=“flag”，为true的时候显示为false的时候消失JavaScript\u003cdiv id=\"app\"\u003e    \u003cdiv class=\"name\" v-if=\"flag\"\u003e        {{ name }}    \u003c/div\u003e    \u003cdiv v-else\u003e        if没匹配到就显示我    \u003c/div\u003e\u003c/div\u003e\u003cscript\u003e    var vue = new Vue({        el: '#app', // vue挂载的位置，不能是body        data: {            flag: false,            name: '枫枫'        }    })\u003c/script\u003e\n","slug":"8UgNHYcBHDYvTeDligHz#v-else-if多条件语句","title":"v-else-if多条件语句"},"id":"_kgNHYcBHDYvTeDljAEh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"\nv-if如果是false，不会渲染2. v-show如果是false，不会显示 style=\"display: none;\"体会一下v-if和v-showHTML一个是看不见，但是我存在，只是我隐藏了    v-show 一个是看不见，因为我本来就没被渲染       v-if\n\n","slug":"8UgNHYcBHDYvTeDligHz#v-show与v-if的区别","title":"v-show与v-if的区别"},"id":"_0gNHYcBHDYvTeDljAEh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"主要分为遍历列表和遍历对象\n","slug":"8UgNHYcBHDYvTeDligHz#列表渲染","title":"列表渲染"},"id":"AEgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"JavaScriptlis: [    '张三',    '王伟',    '张伟',    '王五',]此时的item就是每个元素HTML\u003cul\u003e    \u003cli v-for=\"item in lis\" :key=\"item\"\u003e        {{ item }}    \u003c/li\u003e\u003c/ul\u003ekey要唯一！！！如果需要遍历出每个元素的索引则在遍历的时候指定indexHTML\u003cul\u003e    \u003cli v-for=\"(item, index) in lis\" :key=\"item\"\u003e        {{ index }} -- {{ item }}    \u003c/li\u003e\u003c/ul\u003e\n","slug":"8UgNHYcBHDYvTeDligHz#遍历列表","title":"遍历列表"},"id":"AUgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"JavaScriptobj:{    name: '张三',    age: 21,    addr: '北京市',}一个参数，就是遍历对象的值二个参数，值和键三个参数，值，键，索引HTML\u003cul\u003e    \u003cli v-for=\"item in obj\" :key=\"item\"\u003e        对象的值：{{ item }}    \u003c/li\u003e\u003c/ul\u003e\u003cul\u003e    \u003cli v-for=\"(item, key) in obj\" :key=\"item\"\u003e        对象的值：{{ item }}        对象的键：{{ key }}    \u003c/li\u003e\u003c/ul\u003e\u003cul\u003e    \u003cli v-for=\"(item, key, index) in obj\" :key=\"item\"\u003e        对象的值：{{ item }}        对象的键：{{ key }}        变量的索引：{{ index }}    \u003c/li\u003e\u003c/ul\u003e\n","slug":"8UgNHYcBHDYvTeDligHz#遍历对象","title":"遍历对象"},"id":"AkgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"v-on:或者@HTML\u003cdiv id=\"app\"\u003e    \u003cdiv\u003e        {{ num }}    \u003c/div\u003e    \u003cdiv\u003e        \u003c!--        执行的方法必须在methods中--\u003e        \u003cbutton v-on:click=\"add\"\u003e点我 +\u003c/button\u003e        \u003cbutton @dblclick=\"num--\"\u003e点我 -1\u003c/button\u003e    \u003c/div\u003e\u003c/div\u003e事件所执行的方法是要被定义在methods里面JavaScriptmethods: {    add() {        this.num ++    }}参数问题可以通过传参进行参数传递HTML\u003cbutton v-on:click=\"add(10)\"\u003e点我 +\u003c/button\u003e...add(number) {    this.num += number}// 此时的add函数就能接收到传递进来的参数值默认参数默认参数就是触发当前事件的事件对象JavaScript\u003cbutton id=\"add\" class=\"add_cls\" v-on:click=\"add\"\u003e点我 +\u003c/button\u003e一定是v-on:click=\"add\"，只写一个函数名，而不是v-on:click=\"add()\"，这样获取不到事件对象JavaScript// 获取触发当前事件的标签add(event) {    // 触发当前事件的事件对象    console.log(event)    // 获取标签    console.log(event.target)    // 获取id，class    console.log(event.target.id)    console.log(event.target.className)}如果有参数，想接收事件对象使用$event进行传递JavaScript\u003cbutton id=\"add\" class=\"add_cls\" v-on:click=\"add(10, $event)\"\u003e点我 +\u003c/button\u003e...add(number, event) {    this.num += number    // 触发当前事件的事件对象    console.log(event)    // 获取标签    console.log(event.target)    // 获取id，class    console.log(event.target.id)    console.log(event.target.className)}\n","slug":"8UgNHYcBHDYvTeDligHz#Vue事件","title":"Vue事件"},"id":"A0gNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"HTML\u003c!DOCTYPE html\u003e\u003chtml lang=\"en\"\u003e\u003chead\u003e    \u003cmeta charset=\"UTF-8\"\u003e    \u003ctitle\u003e图片轮播\u003c/title\u003e    \u003cscript src=\"../vue.js\"\u003e\u003c/script\u003e\u003c/head\u003e\u003cbody\u003e\u003cdiv id=\"app\"\u003e    \u003cdiv\u003e        \u003cimg :src=\"img_list[index]\" alt=\"\"\u003e    \u003c/div\u003e    \u003cdiv\u003e        \u003cbutton @click=\"prevImag(index, img_list.length)\"\u003e上一张\u003c/button\u003e        \u003cbutton @click=\"nextImag\"\u003e下一张\u003c/button\u003e    \u003c/div\u003e\u003c/div\u003e\u003cscript\u003e    var vue = new Vue({        el: '#app', // vue挂载的位置，不能是body        data: {            index: 0,            img_list: [                'http://h2.ioliu.cn/bing/SalzburgKrampus_ZH-CN7355658592_640x480.jpg?imageslim',                'http://h2.ioliu.cn/bing/MistyTor_ZH-CN7520952555_640x480.jpg?imageslim',                'http://h2.ioliu.cn/bing/Koenigsbourg_ZH-CN7675452866_640x480.jpg?imageslim',                'http://h2.ioliu.cn/bing/CuvervilleIsland_ZH-CN9814166047_640x480.jpg?imageslim',                'http://h2.ioliu.cn/bing/ElanValley_ZH-CN9533069637_640x480.jpg?imageslim',                'http://h2.ioliu.cn/bing/WinterWaxwing_ZH-CN9435499385_640x480.jpg?imageslim',            ]        },        methods: {            // 下一张            nextImag() {                // 让索引加1                // 判断是不是最后一张，如果是就回到第一张                if (this.index === this.img_list.length - 1) {                    this.index = 0                    return                }                this.index++            },            // 上一张            prevImag(index, len){                // 我希望把索引和列表长度传递进来                if (index === 0) {                    this.index = len - 1                    return                }                this.index --            }        }    })\u003c/script\u003e\u003c/body\u003e\u003c/html\u003e\n","slug":"8UgNHYcBHDYvTeDligHz#图片轮播案例","title":"图片轮播案例"},"id":"BEgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"在事件处理程序中调用 event.preventDefault() 或 event.stopPropagation() 是非常常见的需求。尽管我们可以在方法中轻松实现这点，但更好的方式是：方法只有纯粹的数据逻辑，而不是去处理 DOM 事件细节。为了解决这个问题，Vue.js 为 v-on 提供了事件修饰符。之前提过，修饰符是由点开头的指令后缀来表示的。HTML\u003c!-- 阻止单击事件继续传播 --\u003e\u003ca v-on:click.stop=\"doThis\"\u003e\u003c/a\u003e\u003c!-- 提交事件不再重载页面 --\u003e\u003cform v-on:submit.prevent=\"onSubmit\"\u003e\u003c/form\u003e\u003c!-- 修饰符可以串联 --\u003e\u003ca v-on:click.stop.prevent=\"doThat\"\u003e\u003c/a\u003e\u003c!-- 只有修饰符 --\u003e\u003cform v-on:submit.prevent\u003e\u003c/form\u003e\u003c!-- 添加事件监听器时使用事件捕获模式 --\u003e\u003c!-- 即内部元素触发的事件先在此处理，然后才交由内部元素进行处理 --\u003e\u003cdiv v-on:click.capture=\"doThis\"\u003e...\u003c/div\u003e\u003c!-- 只当在 event.target 是当前元素自身时触发处理函数 --\u003e\u003c!-- 即事件不是从内部元素触发的 --\u003e\u003cdiv v-on:click.self=\"doThat\"\u003e...\u003c/div\u003e\u003c!--阻止默认事件--\u003e\u003ca href=\"http://www.fengfengzhidao.com\" @click.prevent=\"my_alert\"\u003e枫枫知道\u003c/a\u003e\n","slug":"8UgNHYcBHDYvTeDligHz#事件修饰符","title":"事件修饰符"},"id":"BUgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"HTML\u003cdiv class=\"parent\" @click=\"log('外元素')\"\u003e    \u003cdiv class=\"center\" @click=\"log('中元素')\"\u003e        \u003cdiv class=\"child\" @click=\"log('里元素')\"\u003e        \u003c/div\u003e    \u003c/div\u003e\u003c/div\u003e点击里元素，执行顺序点击中间的元素被父元素包裹的元素，点击事件发送后会逐级将事件向上传递HTML\u003cp\u003e阻止事件冒泡\u003c/p\u003e\u003cdiv class=\"parent\" @click=\"log('外元素')\"\u003e    \u003cdiv class=\"center\" @click=\"log('中元素')\"\u003e        \u003cdiv class=\"child\" @click.stop=\"log('里元素')\"\u003e        \u003c/div\u003e    \u003c/div\u003e\u003c/div\u003e添加stop事件修饰符之后，点击里元素，会阻止事件继续向上传播键盘事件HTML@keydown   键盘按下@keyup     键盘回弹按下回车触发支持组合键HTML\u003cinput type=\"text\" v-model=\"msg\" @keyup.enter.ctrl=\"get_msg('上')\"\u003e\u003cinput type=\"text\" v-model=\"msg\" @keyup.enter=\"get_msg('上')\"\u003e\u003e 使用修饰符时，顺序很重要；相应的代码会以同样的顺序产生。因此，用 v-on:click.prevent.self 会阻止所有的点击，而 v-on:click.self.prevent 只会阻止对元素自身的点击。\n","slug":"8UgNHYcBHDYvTeDligHz#事件冒泡","title":"事件冒泡"},"id":"BkgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"HTML\u003c!-- 点击事件将只会触发一次 --\u003e\u003ca v-on:click.once=\"doThis\"\u003e\u003c/a\u003e\n","slug":"8UgNHYcBHDYvTeDligHz#2.1.4新增","title":"2.1.4新增"},"id":"B0gNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"最常见的可能就是在一个输入框中，判断用户是否按下了回车键HTML\u003c!-- 只有在 `key` 是 `Enter` 时调用 `vm.submit()` --\u003e\u003cinput v-on:keyup.enter=\"submit\"\u003e一些必要的按键名称HTML.enter.tab.delete (捕获“删除”和“退格”键).esc.space.up.down.left.right组合按键HTML\u003c!-- Alt + C --\u003e\u003cinput v-on:keyup.alt.67=\"clear\"\u003e\u003c!-- Ctrl + Click --\u003e\u003cdiv v-on:click.ctrl=\"doSomething\"\u003eDo something\u003c/div\u003e\n","slug":"8UgNHYcBHDYvTeDligHz#按键修饰符","title":"按键修饰符"},"id":"CEgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"\n调用的时候不用加括号（只是一个属性）- 可以监听属性变化，属性变化，计算属性重新执行- 并且有缓存（多个计算属性，只执行一次）和methods的区别属性变化，methods方法全部重新获取HTML\u003c!DOCTYPE html\u003e\u003chtml lang=\"en\"\u003e\u003chead\u003e    \u003cmeta charset=\"UTF-8\"\u003e    \u003ctitle\u003e计算属性\u003c/title\u003e    \u003cscript src=\"../vue.js\"\u003e\u003c/script\u003e\u003c/head\u003e\u003cbody\u003e\u003cdiv id=\"app\"\u003e    \u003cdiv\u003e{{ name }}\u003c/div\u003e    \u003cdiv\u003e{{ name.split('').reverse().join('') }}\u003c/div\u003e    \u003cdiv\u003e{{ name.length === 5 ? '五言绝句' : '七言绝句' }}\u003c/div\u003e    \u003cdiv v-if=\"name.length === 5\"\u003e五言绝句\u003c/div\u003e    \u003cdiv v-else-if=\"name.length === 7\"\u003e七言绝句\u003c/div\u003e    \u003cdiv v-else\u003e错了\u003c/div\u003e    \u003c!--  计算属性  --\u003e    \u003cdiv\u003e{{ getName }}\u003c/div\u003e    \u003cdiv\u003e{{ getName }}\u003c/div\u003e    \u003cdiv\u003e{{ getName }}\u003c/div\u003e    \u003cdiv\u003e{{ getName }}\u003c/div\u003e    \u003cdiv\u003e{{ getName }}\u003c/div\u003e    \u003cdiv\u003e{{ getName }}\u003c/div\u003e    \u003cdiv\u003e{{ getName }}\u003c/div\u003e    \u003cdiv\u003e{{ get_data_name() }}\u003c/div\u003e    \u003cdiv\u003e{{ get_data_name() }}\u003c/div\u003e    \u003cdiv\u003e{{ get_data_name() }}\u003c/div\u003e    \u003cdiv\u003e{{ get_data_name() }}\u003c/div\u003e    \u003cdiv\u003e{{ get_data_name() }}\u003c/div\u003e    \u003cbutton @click=\"getsub\"\u003e        点我    \u003c/button\u003e    \u003cspan\u003e{{ num }}\u003c/span\u003e    \u003cbutton @click=\"set_name\"\u003e计算属性\u003c/button\u003e\u003c/div\u003e\u003cscript\u003e    var vue = new Vue({        el: '#app', // vue挂载的位置，不能是body        data: {            name: '床前明月光',            num: 0        },        methods: {            get_data_name() {                console.log('属性方法')                return this.name.split('').reverse().join('')            },            getsub(e) {                this.num ++            },            set_name(){                this.name += 'a'            }        },        computed: {            getName() {                console.log('计算属性')                return this.name.split('').reverse().join('')            }        }    })\u003c/script\u003e\u003c/body\u003e\u003c/html\u003e\n\n","slug":"8UgNHYcBHDYvTeDligHz#计算属性","title":"计算属性"},"id":"CUgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"methods：可以放入函数，并且没有缓存watch：监听，当数据发送变化时，才会触发可以得到现在的值和过去的值还可以监听路由变化和属性同名\n","slug":"8UgNHYcBHDYvTeDligHz#computed与watch，methods的区别","title":"computed与watch，methods的区别"},"id":"CkgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"创建一个过滤器JavaScript// 自定义过滤器filters:{    // 截取最后一个字符    getLastChar(item){        return item.substr(item.length-1,1)    }}使用过滤器HTML\u003cli v-for=\"item in student_list\" :key=\"item.id\"\u003e    {{item.name|getLastChar }} -- {{ item.addr }}\u003c/li\u003e\n","slug":"8UgNHYcBHDYvTeDligHz#自定义过滤器","title":"自定义过滤器"},"id":"C0gNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"HTML\u003cdiv id=\"app\"\u003e    \u003cdiv\u003e        当前时间：{{ now|get_date }}    \u003c/div\u003e    \u003cul\u003e        \u003cli v-for=\"item in date_list\" :key=\"item.id\"\u003e            id：{{ item.id }} 时间：{{ item.date|get_date }}        \u003c/li\u003e    \u003c/ul\u003e    \u003cdiv\u003e        时间过滤    \u003c/div\u003e    \u003cul\u003e        \u003cli v-for=\"item in date_list\" :key=\"item.id\"\u003e            id：{{ item.id }} 时间：{{ item.date|time_to_filter }}        \u003c/li\u003e    \u003c/ul\u003e\u003c/div\u003e\u003cscript src=\"../vue.js\"\u003e\u003c/script\u003e\u003cscript\u003e    function getDateDiff(datestamp) {        var publishTime = datestamp / 1000,            d_seconds,            d_minutes,            d_hours,            d_days,            timeNow = parseInt(new Date().getTime() / 1000),            d,            date = new Date(publishTime * 1000),            Y = date.getFullYear(),            M = date.getMonth() + 1,            D = date.getDate(),            H = date.getHours(),            m = date.getMinutes(),            s = date.getSeconds();        //小于10的在前面补0        if (M \u003c 10) {            M = '0' + M;        }        if (D \u003c 10) {            D = '0' + D;        }        if (H \u003c 10) {            H = '0' + H;        }        if (m \u003c 10) {            m = '0' + m;        }        if (s \u003c 10) {            s = '0' + s;        }        d = timeNow - publishTime;        d_days = parseInt(d / 86400);        d_hours = parseInt(d / 3600);        d_minutes = parseInt(d / 60);        d_seconds = parseInt(d);        if (d_days \u003e 0 \u0026\u0026 d_days \u003c 30) {            return d_days + '天前';        } else if (d_days \u003c= 0 \u0026\u0026 d_hours \u003e 0) {            return d_hours + '小时前';        } else if (d_hours \u003c= 0 \u0026\u0026 d_minutes \u003e 0) {            return d_minutes + '分钟前';        } else if (d_seconds \u003c 60) {            if (d_seconds \u003c= 0) {                return '刚刚发表';            } else {                return d_seconds + '秒前';            }        } else if (d_days \u003e= 30) {            return Y + '-' + M + '-' + D + ' ' + H + ':' + m;        }    }    var vue = new Vue({        el: '#app',        data: {            now: '2021-12-8 22:01:11',            date_list: [                {id: 1, date: '2021-12-8 22:02:11'},                {id: 2, date: '2021-12-6 22:02:21'},                {id: 3, date: '2021-12-8 21:01:14'},                {id: 4, date: '2021-12-5 20:12:11'},            ]        },        filters: {            // 年-月-日            get_date(date_str) {                // date，传递的参数                // 字符串转时间对象                let date = new Date(date_str)                return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`            },            time_to_filter(date_str) {                // 字符串-\u003e对象-\u003e时间戳                // 和当前时间做差，算出相差的时间（多少秒，多少分）                // 字符串转时间对象-\u003e时间戳                let datestamp = new Date(date_str).getTime()                return getDateDiff(datestamp)            }        }    })\u003c/script\u003e\n","slug":"8UgNHYcBHDYvTeDligHz#时间过滤器","title":"时间过滤器"},"id":"DEgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"自定义过滤器也是可以接受参数，它的书写语法是JavaScript\u003cli v-for=\"item in date_list\" :key=\"item.id\"\u003e    id：{{ item.id }} 时间：{{ item.date|time_to_filter('a', 'b') }}\u003c/li\u003e...filters: {    ...    time_to_filter(date_str, a, b) {        // date_str  -\u003e  '自身的值'        // a  -\u003e 'a'        // b  -\u003e 'b'                return date_str    }}过滤器方法的第一个参数就是调用者本身的值，第二个参数之后就是调用的实参并且支持链式过滤器HTML\u003cdiv\u003e{{now|get_now|get_now1}}\u003c/div\u003e\n","slug":"8UgNHYcBHDYvTeDligHz#参数问题","title":"参数问题"},"id":"DUgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"需要将属性和方法挂载到Vue.prototype上JavaScriptVue.prototype.$com = \"全局变量\"let global_method = ()=\u003e{    return \"全局方法\"}function add(){    return \"全局 add 方法\"}Vue.prototype.$global_method = global_methodVue.prototype.$add = add使用HTML\u003cdiv\u003e    {{ $global_method() }}\u003c/div\u003e\u003cdiv\u003e    {{ $add() }}\u003c/div\u003e\n","slug":"8UgNHYcBHDYvTeDligHz#全局方法","title":"全局方法"},"id":"DkgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"JavaScript// 全局过滤器let global_filter = (item) =\u003e {    return item + '--global'}// 注册全局过滤器   (过滤器名称，方法)Vue.filter('global_filter', global_filter)使用全局过滤器HTML\u003cdiv\u003e    {{ $com|global_filter }}\u003c/div\u003e\n","slug":"8UgNHYcBHDYvTeDligHz#全局过滤器","title":"全局过滤器"},"id":"D0gNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"HTML\u003c!DOCTYPE html\u003e\u003chtml lang=\"en\"\u003e\u003chead\u003e    \u003cmeta charset=\"UTF-8\"\u003e    \u003ctitle\u003e局部组件\u003c/title\u003e\u003c/head\u003e\u003cbody\u003e\u003cdiv id=\"app\"\u003e    \u003cApp\u003e\u003c/App\u003e  \u003c!--使用子组件--\u003e\u003c/div\u003e\u003cscript src=\"../vue.js\"\u003e\u003c/script\u003e\u003cscript\u003e    // app 组件 html css js    const App = {        data() {            // 在组件中使用数据，需要 使用函数，返回值返回对象  data(){ return {} }            return {msg: 'hello'}        },        template: `          \u003cdiv\u003e              \u003ch3\u003e我是app组件\u003c/h3\u003e              \u003cp\u003e{{ msg }}\u003c/p\u003e              \u003cbutton @click=\"handleClick\"\u003e按钮\u003c/button\u003e          \u003c/div\u003e        `,        methods: {            handleClick() {                this.msg = 'world'            }        }    }    new Vue({        el: '#app',        data: {},        components: {            App  // 挂载子组件        }    })\u003c/script\u003e\u003c/body\u003e\u003c/html\u003e\n","slug":"8UgNHYcBHDYvTeDligHz#局部组件","title":"局部组件"},"id":"EEgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"HTML\u003c!DOCTYPE html\u003e\u003chtml lang=\"en\"\u003e\u003chead\u003e    \u003cmeta charset=\"UTF-8\"\u003e    \u003ctitle\u003e局部组件\u003c/title\u003e\u003c/head\u003e\u003cbody\u003e\u003cdiv id=\"app\"\u003e    \u003cApp\u003e\u003c/App\u003e  \u003c!--使用子组件--\u003e\u003c/div\u003e\u003cscript src=\"../vue.js\"\u003e\u003c/script\u003e\u003cscript\u003e    // app 组件 html css js    // 只要创建组件，就可以在template中使用    Vue.component('Vheader', {        template: `            \u003cdiv\u003e                \u003cspan\u003e我是导航组件\u003c/span\u003e            \u003c/div\u003e        `    })    Vue.component('Vfooter', {        template: `            \u003cdiv\u003e                \u003cspan\u003e我是底部组件\u003c/span\u003e            \u003c/div\u003e        `    })    Vue.component('Vsider', {        data() {            return {msg: '侧边栏'};        },        template: `          \u003cdiv\u003e              \u003cspan class=\"sider_title\"\u003e我是侧边栏组件\u003c/span\u003e              \u003cspan\u003e{{ msg }}\u003c/span\u003e          \u003c/div\u003e        `,    })    const Vbtn = {        template: `            \u003cbutton\u003e按钮\u003c/button\u003e        `    }    const App = {        data() {            // 在组件中使用数据，需要 使用函数，返回值返回对象  data(){ return {} }            return {msg: 'hello'}        },        template: `          \u003cdiv\u003e          \u003cVheader\u003e\u003c/Vheader\u003e          \u003cVbtn\u003e\u003c/Vbtn\u003e          \u003cVbtn\u003e\u003c/Vbtn\u003e          \u003cVbtn\u003e\u003c/Vbtn\u003e          \u003cVsider\u003e\u003c/Vsider\u003e          \u003cVfooter\u003e\u003c/Vfooter\u003e          \u003ch3\u003e我是app组件\u003c/h3\u003e          \u003cp\u003e{{ msg }}\u003c/p\u003e          \u003cbutton @click=\"handleClick\"\u003e按钮\u003c/button\u003e          \u003c/div\u003e        `,        components: {          Vbtn          },        methods: {            handleClick() {                this.msg = 'world'            }        }    }    new Vue({        el: '#app',        data: {},        components: {            App  // 挂载子组件        }    })\u003c/script\u003e\u003c/body\u003e\u003c/html\u003e\n","slug":"8UgNHYcBHDYvTeDligHz#全局组件","title":"全局组件"},"id":"EUgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"","slug":"8UgNHYcBHDYvTeDligHz#组件通信","title":"组件通信"},"id":"EkgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"父传子：通过props来进行通信HTML1. 在自组件中声明props接收在父组件挂载的属性2. 可以在自组件的template在任意使用3， 在父组件绑定自定义的属性\n","slug":"8UgNHYcBHDYvTeDligHz#父传子","title":"父传子"},"id":"E0gNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"JavaScriptprops: ['title', 'likes', 'isPublished', 'commentIds', 'author']props: {  title: String,  likes: Number,  isPublished: Boolean,  commentIds: Array,  author: Object,  callback: Function,  contactsPromise: Promise // or any other constructor}props: {    data: {        type: String,  // 类型        required: true,  // 必填项        default: '张三'  // 如果没传值，那么这个默认值就是它    }}HTML\u003cdiv id=\"app\"\u003e    \u003cApp\u003e\u003c/App\u003e  \u003c!--使用子组件--\u003e\u003c/div\u003e\u003cscript src=\"../vue.js\"\u003e\u003c/script\u003e\u003cscript\u003e    Vue.component('Child', {        template: `          \u003cdiv\u003e          \u003ch3\u003e我是子组件\u003c/h3\u003e          \u003ch4\u003e{{ childData }}\u003c/h4\u003e          \u003c/div\u003e        `,        props: ['childData']    })    const App = {        data() {            // 在组件中使用数据，需要 使用函数，返回值返回对象  data(){ return {} }            return {msg: '我是父组件传递的值'}        },        template: `          \u003cdiv\u003e          \u003cChild :childData=\"msg\"\u003e\u003c/Child\u003e          \u003cp\u003e{{ msg }}\u003c/p\u003e          \u003c/div\u003e        `,    }    new Vue({        el: '#app',        data: {},        components: {            App  // 挂载子组件        }    })\u003c/script\u003e\n","slug":"8UgNHYcBHDYvTeDligHz#props传入一个对象","title":"props传入一个对象"},"id":"FEgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"JavaScriptcreated(){    console.log(this.data, 1)},mounted(){    console.log(this.data, 2)}\n","slug":"8UgNHYcBHDYvTeDligHz#created与mounted","title":"created与mounted"},"id":"FUgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"HTML1. 在父组件中，自组件上绑定自定义事件2. 在自组件中，触发原生的事件，在事件函数通过this.$emit触发自定义的事件父组件JavaScript\u003ccomment1 v-on:eff=\"eff\"\u003e\u003c/comment1\u003ecomponents: {    comment1},methods: {    eff(data) {        // data 是子组件传递的数据        console.log('父组件被调用了', data)    }}子组件JavaScriptlet comment1 = {    template: `      \u003cdiv\u003e      \u003cul\u003e        \u003cli\u003e兰州拉面\u003c/li\u003e        \u003cli\u003e哈尔滨啤酒\u003c/li\u003e        \u003cli\u003e四川担担面\u003c/li\u003e        \u003cbutton @click=\"add\"\u003e点我触发父组件方法\u003c/button\u003e      \u003c/ul\u003e      \u003c/div\u003e`,    methods: {        add() {            this.$emit('eff', {name: '子组件传来的数据'})        }    }}\n","slug":"8UgNHYcBHDYvTeDligHz#子传父","title":"子传父"},"id":"FkgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"HTML\u003c!DOCTYPE html\u003e\u003chtml lang=\"en\"\u003e\u003chead\u003e    \u003cmeta charset=\"UTF-8\"\u003e    \u003ctitle\u003e平行组件\u003c/title\u003e    \u003cstyle\u003e        body {            margin: 0;        }        #app {            display: flex;        }        #app \u003e div {            width: 50%;            height: 200px;            display: flex;            justify-content: center;            align-items: center;        }        #gouwuc {            background-color: #3a8ee6;        }        #get {            background-color: #b3d9d9;        }    \u003c/style\u003e\u003c/head\u003e\u003cbody\u003e\u003cdiv id=\"app\"\u003e    \u003cApp1 id=\"gouwuc\"\u003e\u003c/App1\u003e  \u003c!--使用子组件--\u003e    \u003cApp2 id=\"get\"\u003e\u003c/App2\u003e  \u003c!--使用子组件--\u003e\u003c/div\u003e\u003cscript src=\"../vue.js\"\u003e\u003c/script\u003e\u003cscript\u003e    let Bus = new Vue()    let App1 = {        data() {            return {                num: 100            }        },        template: `          \u003cdiv\u003e          购物车 商品总数{{ num }}          \u003c/div\u003e`,        mounted(){            Bus.$on('add', (data)=\u003e{                this.num ++            })        }    }    let App2 = {        data() {            return {                num: 100            }        },        methods: {            add() {                Bus.$emit('add', {msg: '你的好兄弟又下单啦'})            }        },        template: `          \u003cdiv\u003e          \u003cbutton @click=\"add\"\u003e加入购物车\u003c/button\u003e          \u003c/div\u003e`    }    new Vue({        el: '#app',        data: {},        components: {            App1,            App2,        }    })\u003c/script\u003e\u003c/body\u003e\u003c/html\u003e多次嵌套取值HTML1. provide  提供变量  函数(){return {} },2. inject  接收变量 inject: [],\n","slug":"8UgNHYcBHDYvTeDligHz#平行组件","title":"平行组件"},"id":"F0gNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"JavaScriptlet base_layout = {    data() {        return {}    },    template: `      \u003cdiv\u003e      \u003cheader\u003e        \u003cslot\u003e我是页头\u003c/slot\u003e      \u003c/header\u003e      \u003c/div\u003e`}new Vue({    el: '#app',    components: {        base_layout    }})在模板中把想要替换的东西放在\u003cslot\u003e标签中，这就是一个占位符HTML\u003cbase_layout\u003e实际的内容\u003c/base_layout\u003e这样就会将标签中的内容去代替slot中的内容如果slot都没有名字，那么如果有多个slot，就会全部进行替换\n","slug":"8UgNHYcBHDYvTeDligHz#匿名插槽","title":"匿名插槽"},"id":"GEgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"如果你的模板中需要有多个地方被替换那么匿名插槽就不太合适了，我们给每个插槽都起一个别名JavaScriptlet base_layout = {    data() {        return {}    },    template: `      \u003cdiv\u003e      \u003cheader\u003e        \u003cslot name=\"header\"\u003e我是页头\u003c/slot\u003e      \u003c/header\u003e      \u003cmain\u003e        \u003cslot name=\"main\"\u003e我是内容\u003c/slot\u003e      \u003c/main\u003e      \u003cfooter\u003e        \u003cslot name=\"footer\"\u003e我是页脚\u003c/slot\u003e      \u003c/footer\u003e      \u003c/div\u003e`}这样我们在进行替换的时候，指明要替换哪个slot就OK了HTML\u003cbase_layout\u003e    \u003ctemplate v-slot:header\u003e        头部    \u003c/template\u003e    \u003ctemplate v-slot:main\u003e        身体    \u003c/template\u003e    \u003ctemplate v-slot:footer\u003e        尾部    \u003c/template\u003e\u003c/base_layout\u003e注意v-slot的写法HTMLv-slot:headerv-slot: 可以简写为 #HTML \u003cbase_layout\u003e    \u003ctemplate v-slot:header\u003e        \u003cchild\u003e\u003c/child\u003e        \u003cdiv\u003e            哈哈哈哈        \u003c/div\u003e    \u003c/template\u003e    \u003ctemplate #main\u003e        身体    \u003c/template\u003e    \u003ctemplate v-slot:footer\u003e        尾部    \u003c/template\u003e\u003c/base_layout\u003e\u003e 我们在替换的时候，是可以写任意标签的，也就是说，在替换的时候，你也可以将组件写入插槽中HTML\u003cbase_layout\u003e    \u003ctemplate v-slot:header\u003e        \u003cchild\u003e\u003c/child\u003e        \u003cdiv\u003e            哈哈哈哈        \u003c/div\u003e    \u003c/template\u003e    \u003ctemplate v-slot:main\u003e        身体    \u003c/template\u003e    \u003ctemplate v-slot:footer\u003e        尾部    \u003c/template\u003e\u003c/base_layout\u003e\n","slug":"8UgNHYcBHDYvTeDligHz#具名插槽","title":"具名插槽"},"id":"GUgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"JavaScriptlet base_layout = {    data() {        return {            user: {                name: '枫枫',                xin: '知道'            }        }    },    template: `      \u003cdiv\u003e      \u003cmain\u003e        \u003cslot :user=\"user\"\u003e{{ user.xin }}\u003c/slot\u003e      \u003c/main\u003e      \u003c/div\u003e`}在子组件中，我在插槽里面显示的是user的xin，如果我想让它显示user的name应该怎么做呢如果我们直接在父组件调用的时候这样写HTML\u003cbase_layout\u003e    {{ user.name }}\u003c/base_layout\u003e这是错误的写法，因为我们的user是被定义再自组件中的，在父组件中就无法使用这个user，所以就会报错啦那么我们就应该将这个user对象传递给父组件在子组件中HTML\u003cslot :user=\"user\"\u003e{{ user.xin }}\u003c/slot\u003e通过动态属性的方式将user传递给父组件在父组件中HTML\u003cbase_layout\u003e    \u003ctemplate v-slot:default=\"slotProps\"\u003e        {{ slotProps.user.name }}    \u003c/template\u003e\u003c/base_layout\u003e接收传递来的user即可slotProps可以是你自己定义的名字，它里面存储的是这样的HTML{ \"user\": { \"name\": \"枫枫\", \"xin\": \"知道\" } }所以我们将slotProps中的user中的name传递给子组件，就可以做到数据动态替换如果你的组件中，有且只有一个默认插槽，那么在替换的时候，是可以这么做的HTML\u003cbase_layout v-slot:default=\"slotProps\"\u003e    {{ slotProps }}\u003c/base_layout\u003e但是，如果出现了具名插槽，这样会导致作用域混乱我们应该这样使用JavaScriptlet base_1 = {    data(){        return {            user: {                name: '枫枫知道',                age: 21            }        }    },    template: `    \u003cdiv\u003e    \u003cheader\u003e      我的名字是 \u003cslot :user=\"user\" name=\"name\"\u003e{{ user.name }}\u003c/slot\u003e，年龄是\u003cslot :user=\"user\" name=\"age\"\u003e{{ user.age }}\u003c/slot\u003e    \u003c/header\u003e    \u003c/div\u003e`}HTML\u003cbase_1\u003e    \u003ctemplate v-slot:name\u003e张子枫\u003c/template\u003e    \u003ctemplate v-slot:age=\"slotBase\"\u003e{{ slotBase }}\u003c/template\u003e\u003c/base_1\u003e\n","slug":"8UgNHYcBHDYvTeDligHz#作用域插槽","title":"作用域插槽"},"id":"GkgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"\n\u003ccomponent\u003e元素是vue 里面的一个内置组件。在里面使用 v-bind: is，可以实现动态组件的效果。\n\n","slug":"8UgNHYcBHDYvTeDligHz#动态组件","title":"动态组件"},"id":"G0gNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"前面使用的v-if， v-show，以及v-for这些都是Vue为我们提供的内置指令当然，我们也可以自己自定义一个指令\n","slug":"8UgNHYcBHDYvTeDligHz#自定义指令","title":"自定义指令"},"id":"HEgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"JavaScriptdirectives: {    focus: {        // 指令的定义        // 使用这个指令就会聚焦在输入框中        inserted: function (el) {            el.focus()        }    }}使用HTML\u003cinput type=\"text\" v-focus\u003e在focus中有几个钩子函数，需要了解- bind：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。- inserted：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。- update：所在组件的 VNode 更新时调用，但是可能发生在其子 VNode 更新之前。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新 (详细的钩子函数参数见下)。\n","slug":"8UgNHYcBHDYvTeDligHz#局部自定义指令","title":"局部自定义指令"},"id":"HUgNHYcBHDYvTeDljAIh"},{"row":{"key":"8UgNHYcBHDYvTeDligHz","body":"JavaScriptVue.prototype.meta_ = () =\u003e {    console.log(1)}在created生命周期中不能使用可以在mounted方法中使用\n","slug":"8UgNHYcBHDYvTeDligHz#绑定方法到this","title":"绑定方法到this"},"id":"HkgNHYcBHDYvTeDljAIh"}],"mapping":{"mappings":{"properties":{"body":{"type":"text"},"key":{"type":"keyword"},"slug":{"type":"keyword"},"title":{"type":"text"}}}}}